import {
  CartForm
} from "./chunk-NBGQ7WMI.js";
import {
  useFetcher,
  useLocation,
  useRouteLoaderData
} from "./chunk-Z267FA2X.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  classNames
} from "./chunk-AVF5UQVT.js";
import {
  require_react
} from "./chunk-FO5G5QMT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/currency-selector/currency-selector.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react2 = __toESM(require_react(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/currency-selector/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/currency-selector/currency-selector.css";
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/currency-selector/currency-selector.xb-currency-selector--modifier-01.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/currency-selector/currency-selector.js
var DEFAULT_LOCALE = {
  label: "United States (USD $)",
  language: "EN",
  country: "US",
  currency: "USD"
};
var CurrencySelector = ({ element }) => {
  var _a, _b;
  const { settings } = element;
  const fetcher = useFetcher();
  const closeRef = (0, import_react2.useRef)(null);
  const rootData = useRouteLoaderData("root");
  const selectedLocale = (rootData == null ? void 0 : rootData.selectedLocale) ?? DEFAULT_LOCALE;
  const { pathname, search } = useLocation();
  const pathWithoutLocale = `${pathname.replace(selectedLocale.pathPrefix, "")}${search}`;
  const countries = fetcher.data ?? {};
  const defaultLocale = countries == null ? void 0 : countries.default;
  const defaultLocalePrefix = defaultLocale ? `${defaultLocale == null ? void 0 : defaultLocale.language}-${defaultLocale == null ? void 0 : defaultLocale.country}` : "";
  const flagClass = `xb-currency-selector__flag-${settings.flagShape}`;
  const placementDesktop = settings.placement.desktop;
  const placementTablet = settings.placement.tablet ?? placementDesktop;
  const placementMobile = settings.placement.mobile ?? placementTablet;
  (0, import_react2.useEffect)(() => {
    if (fetcher.data || fetcher.state === "loading")
      return;
    fetcher.load("/api/countries");
  }, [fetcher]);
  const closeDropdown = (0, import_react2.useCallback)(() => {
    var _a2;
    (_a2 = closeRef.current) == null ? void 0 : _a2.removeAttribute("open");
  }, []);
  const getCountryUrlPath = ({ countryLocale, defaultLocalePrefix: defaultLocalePrefix2, pathWithoutLocale: pathWithoutLocale2 }) => {
    let countryPrefixPath = "";
    const countryLocalePrefix = `${countryLocale.language}-${countryLocale.country}`;
    if (countryLocalePrefix !== defaultLocalePrefix2) {
      countryPrefixPath = `/${countryLocalePrefix.toLowerCase()}`;
    }
    return `${countryPrefixPath}${pathWithoutLocale2}`;
  };
  return (0, import_jsx_runtime.jsxs)("div", { ...elementAttr(element, {
    classNames: ["xb-currency-selector", (_a = settings == null ? void 0 : settings.modifier) == null ? void 0 : _a.handle, (_b = settings.static) == null ? void 0 : _b.class, "relative"]
  }), children: [(0, import_jsx_runtime.jsxs)("xo-popover-trigger", { class: classNames("xb-currency-selector__trigger", flagClass), "xo-name": element.id, tabIndex: 0, role: "button", children: [(0, import_jsx_runtime.jsx)("span", { className: "xb-currency-selector__name", children: selectedLocale.label }), (0, import_jsx_runtime.jsx)("svg", { className: "xb-currency-selector__icon", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512", children: (0, import_jsx_runtime.jsx)("path", { d: "M239 401c9.4 9.4 24.6 9.4 33.9 0L465 209c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-175 175L81 175c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9L239 401z" }) })] }), (0, import_jsx_runtime.jsx)("xo-popover", { "xo-name": element.id, class: "xb-currency-selector__wrapper-content", "xo-placement": placementDesktop, "xo-breakpoints": `{
            768: {
              placement: '${placementMobile}',
            },
            992: {
              placement: '${placementTablet}',
            },
          }`, "xo-portal": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-currency-selector__content xb-scrollbar", children: countries && Object.keys(countries).map((countryPath) => {
    const countryLocale = countries[countryPath];
    const isSelected = countryLocale.language === selectedLocale.language && countryLocale.country === selectedLocale.country;
    const countryUrlPath = getCountryUrlPath({
      countryLocale,
      defaultLocalePrefix,
      pathWithoutLocale
    });
    return (0, import_jsx_runtime.jsx)(CartForm, { route: "/cart", action: CartForm.ACTIONS.BuyerIdentityUpdate, inputs: {
      buyerIdentity: {
        countryCode: countryLocale.country
      }
    }, children: (0, import_jsx_runtime.jsxs)("label", { className: classNames("xb-currency-selector__item", isSelected ? "xb-currency-selector__item--active" : ""), children: [(0, import_jsx_runtime.jsx)("input", { type: "hidden", name: "redirectTo", value: countryUrlPath }), (0, import_jsx_runtime.jsx)("button", { className: "xb-currency-selector__name", type: "submit", onClick: closeDropdown, children: countryLocale.label })] }) }, countryPath);
  }) }) })] });
};

export {
  CurrencySelector
};
//# sourceMappingURL=chunk-BWLX7TR6.js.map
