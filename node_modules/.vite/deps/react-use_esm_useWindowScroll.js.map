{
  "version": 3,
  "sources": ["../../.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useWindowScroll.js"],
  "sourcesContent": ["import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nimport useRafState from './useRafState';\nvar useWindowScroll = function () {\n    var _a = useRafState(function () { return ({\n        x: isBrowser ? window.pageXOffset : 0,\n        y: isBrowser ? window.pageYOffset : 0,\n    }); }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            setState(function (state) {\n                var pageXOffset = window.pageXOffset, pageYOffset = window.pageYOffset;\n                //Check state for change, return same state if no change happened to prevent rerender\n                //(see useState/setState documentation). useState/setState is used internally in useRafState/setState.\n                return state.x !== pageXOffset || state.y !== pageYOffset\n                    ? {\n                        x: pageXOffset,\n                        y: pageYOffset,\n                    }\n                    : state;\n            });\n        };\n        //We have to update window scroll at mount, before subscription.\n        //Window scroll may be changed between render and effect handler.\n        handler();\n        on(window, 'scroll', handler, {\n            capture: false,\n            passive: true,\n        });\n        return function () {\n            off(window, 'scroll', handler);\n        };\n    }, []);\n    return state;\n};\nexport default useWindowScroll;\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA,mBAA0B;AAG1B,IAAI,kBAAkB,WAAY;AAC9B,MAAI,KAAK,oBAAY,WAAY;AAAE,WAAQ;AAAA,MACvC,GAAG,YAAY,OAAO,cAAc;AAAA,MACpC,GAAG,YAAY,OAAO,cAAc;AAAA,IACxC;AAAA,EAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC;AACtC,8BAAU,WAAY;AAClB,QAAI,UAAU,WAAY;AACtB,eAAS,SAAUA,QAAO;AACtB,YAAI,cAAc,OAAO,aAAa,cAAc,OAAO;AAG3D,eAAOA,OAAM,MAAM,eAAeA,OAAM,MAAM,cACxC;AAAA,UACE,GAAG;AAAA,UACH,GAAG;AAAA,QACP,IACEA;AAAA,MACV,CAAC;AAAA,IACL;AAGA,YAAQ;AACR,OAAG,QAAQ,UAAU,SAAS;AAAA,MAC1B,SAAS;AAAA,MACT,SAAS;AAAA,IACb,CAAC;AACD,WAAO,WAAY;AACf,UAAI,QAAQ,UAAU,OAAO;AAAA,IACjC;AAAA,EACJ,GAAG,CAAC,CAAC;AACL,SAAO;AACX;AACA,IAAO,0BAAQ;",
  "names": ["state"]
}
