import {
  filterInputToParams
} from "./chunk-6VVRWVZQ.js";
import {
  CONFIG
} from "./chunk-SSTWVKXD.js";
import {
  Link,
  useLocation,
  useNavigate
} from "./chunk-Z267FA2X.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  classNames
} from "./chunk-AVF5UQVT.js";
import {
  require_react
} from "./chunk-FO5G5QMT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/components/filter-collection-item/index.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var FilterCollectionItem = ({ collection }) => {
  const location = useLocation();
  const isActive = location.pathname.includes(`collections/${collection.handle}`);
  const activeClass = isActive ? "xb-field-radio-2--active" : "";
  return (0, import_jsx_runtime.jsxs)(Link, { className: classNames("xb-field-radio-2", activeClass), to: `/collections/${collection.handle}`, style: { "--icon-size": "16px" }, children: [(0, import_jsx_runtime.jsx)("span", { className: "xb-field-radio-2__item", children: (0, import_jsx_runtime.jsx)("span", { className: "xb-field-radio-2__icon" }) }), (0, import_jsx_runtime.jsx)("span", { className: "xb-field-radio-2__label", children: (0, import_jsx_runtime.jsx)("span", { children: collection.title }) })] }, collection.handle);
};

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/components/price-range-filter/index.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_react3 = __toESM(require_react(), 1);
function PriceRangeFilter({ max, min }) {
  const location = useLocation();
  const params = (0, import_react3.useMemo)(() => new URLSearchParams(location.search), [location.search]);
  const navigate = useNavigate();
  const [minPrice, setMinPrice] = (0, import_react3.useState)(min);
  const [maxPrice, setMaxPrice] = (0, import_react3.useState)(max);
  (0, import_react3.useEffect)(() => {
    const id = setTimeout(() => {
      if (minPrice === void 0 && maxPrice === void 0) {
        params.delete(`${CONFIG.collectionPage.filterUrlPrefix}price`);
        navigate(`${location.pathname}?${params.toString()}`);
        return;
      }
      const price = {
        ...minPrice === void 0 ? {} : { min: minPrice },
        ...maxPrice === void 0 ? {} : { max: maxPrice }
      };
      const newParams = filterInputToParams({ price }, params);
      navigate(`${location.pathname}?${newParams.toString()}`);
    }, CONFIG.collectionPage.priceRangeDebounce);
    return () => {
      clearTimeout(id);
    };
  }, [minPrice, maxPrice]);
  const onChangeMax = (event) => {
    const value = event.target.value;
    const newMaxPrice = Number.isNaN(parseFloat(value)) ? void 0 : parseFloat(value);
    setMaxPrice(newMaxPrice);
  };
  const onChangeMin = (event) => {
    const value = event.target.value;
    const newMinPrice = Number.isNaN(parseFloat(value)) ? void 0 : parseFloat(value);
    setMinPrice(newMinPrice);
  };
  return (0, import_jsx_runtime2.jsx)("div", { className: "xb-field-price", children: (0, import_jsx_runtime2.jsxs)("div", { className: "xb-field-price__input-group", children: [(0, import_jsx_runtime2.jsxs)("div", { className: "xb-field-price__input-box", children: [(0, import_jsx_runtime2.jsx)("span", { children: "$" }), (0, import_jsx_runtime2.jsx)("input", { name: "minPrice", className: "xb-field-price__input", type: "number", value: minPrice ?? "", onChange: onChangeMin })] }), (0, import_jsx_runtime2.jsx)("span", { children: "To" }), (0, import_jsx_runtime2.jsxs)("div", { className: "xb-field-price__input-box", children: [(0, import_jsx_runtime2.jsx)("span", { children: "$" }), (0, import_jsx_runtime2.jsx)("input", { name: "maxPrice", className: "xb-field-price__input", type: "number", value: maxPrice ?? "", onChange: onChangeMax })] })] }) });
}

export {
  FilterCollectionItem,
  PriceRangeFilter
};
//# sourceMappingURL=chunk-LCGNXR2R.js.map
