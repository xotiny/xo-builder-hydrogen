import {
  useProduct
} from "./chunk-SSTWVKXD.js";
import {
  CartForm
} from "./chunk-NBGQ7WMI.js";
import {
  useSettings
} from "./chunk-OFJGWOBY.js";
import {
  Style
} from "./chunk-PEYES2GH.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  classNames
} from "./chunk-AVF5UQVT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/add-to-cart-button.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/add-to-cart-button.css";
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/add-to-cart-button.xb-add-to-cart-button--modifier-01.css";
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/add-to-cart-button.xb-add-to-cart-button--modifier-02.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/add-to-cart-button/add-to-cart-button.js
var AddToCartButton = ({ element, children }) => {
  const { settings } = element;
  const { globalSettings: global } = useSettings();
  const fullWidthClass = settings.fullWidthEnabled === "yes" ? "xb-button--full" : "xb-button--fit";
  function getIcon(fetcher) {
    var _a, _b, _c;
    const loaderType = ((_a = global == null ? void 0 : global.imageLoader) == null ? void 0 : _a.type) ?? "loader-1";
    const loaderDuration = ((_c = (_b = global == null ? void 0 : global.imageLoader) == null ? void 0 : _b.duration) == null ? void 0 : _c.value) ?? 1600;
    switch (loaderType) {
      case "loader-1":
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [settings.iconEnabled && (0, import_jsx_runtime.jsx)("span", { className: "xb-add-to-cart-button__icon", style: fetcher.state !== "idle" ? { opacity: 0 } : {}, children }), fetcher.state !== "idle" && (0, import_jsx_runtime.jsx)("span", { className: "xb-button__loading", children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-1", style: {
          "--size": 20,
          "--color": "currentColor",
          "--duration": loaderDuration
        }, children: (0, import_jsx_runtime.jsx)("span", {}) }) })] });
      case "loader-2":
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [settings.iconEnabled && (0, import_jsx_runtime.jsx)("span", { className: "xb-add-to-cart-button__icon", style: fetcher.state !== "idle" ? { opacity: 0 } : {}, children }), fetcher.state !== "idle" && (0, import_jsx_runtime.jsx)("span", { className: "xb-button__loading", children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-2", style: {
          "--size": 16,
          "--color": "currentColor",
          "--duration": loaderDuration,
          "--stroke-width": 2
        }, children: (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)("span", {}) }) }) })] });
      case "loader-3":
        return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [settings.iconEnabled && (0, import_jsx_runtime.jsx)("span", { className: "xb-add-to-cart-button__icon", style: fetcher.state !== "idle" ? { opacity: 0 } : {}, children }), fetcher.state !== "idle" && (0, import_jsx_runtime.jsx)("span", { className: "xb-button__loading", children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-3", style: {
          "--size": 8,
          "--color": "currentColor",
          "--duration": loaderDuration
        }, children: (0, import_jsx_runtime.jsx)("span", {}) }) })] });
    }
  }
  function getGap() {
    const style = Style.create({
      "--xb-button-gap": `${settings.iconSpacing.value}px`
    });
    return style.get();
  }
  const { product, selectedVariant, quantity } = useProduct(element.id);
  if (!product) {
    return null;
  }
  const disabled = !selectedVariant || !selectedVariant.availableForSale;
  const lines = selectedVariant ? [
    {
      merchandiseId: selectedVariant.id,
      quantity,
      selectedVariant
    }
  ] : [];
  return (0, import_jsx_runtime.jsx)(CartForm, { route: "/cart", inputs: { lines }, action: CartForm.ACTIONS.LinesAdd, children: (fetcher) => {
    var _a, _b;
    return (0, import_jsx_runtime.jsx)("button", { ...elementAttr(element, {
      classNames: ["xb-add-to-cart-button__button", fullWidthClass, (_a = settings.static) == null ? void 0 : _a.class],
      style: getGap()
    }, false), type: "submit", onClick: () => {
    }, disabled: disabled ?? fetcher.state !== "idle", children: (0, import_jsx_runtime.jsxs)("span", { className: classNames("xb-add-to-cart-button__content", element.id, (_b = settings == null ? void 0 : settings.modifier) == null ? void 0 : _b.handle), children: [settings.iconPosition === "left" && getIcon(fetcher), settings.$textEnabled === "yes" && (0, import_jsx_runtime.jsx)("span", { className: "xb-add-to-cart-button__text", style: fetcher.state !== "idle" ? { opacity: 0 } : {}, children: (selectedVariant == null ? void 0 : selectedVariant.availableForSale) ? "Add to cart" : "Sold out" }), settings.iconPosition === "right" && getIcon(fetcher)] }) });
  } });
};

export {
  AddToCartButton
};
//# sourceMappingURL=chunk-AWPPI4YX.js.map
