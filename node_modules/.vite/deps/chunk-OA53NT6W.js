import {
  require_react
} from "./chunk-FO5G5QMT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useRafState.js
var import_react3 = __toESM(require_react());

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useUnmount.js
var import_react2 = __toESM(require_react());

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useEffectOnce.js
var import_react = __toESM(require_react());
var useEffectOnce = function(effect) {
  (0, import_react.useEffect)(effect, []);
};
var useEffectOnce_default = useEffectOnce;

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useUnmount.js
var useUnmount = function(fn) {
  var fnRef = (0, import_react2.useRef)(fn);
  fnRef.current = fn;
  useEffectOnce_default(function() {
    return function() {
      return fnRef.current();
    };
  });
};
var useUnmount_default = useUnmount;

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/useRafState.js
var useRafState = function(initialState) {
  var frame = (0, import_react3.useRef)(0);
  var _a = (0, import_react3.useState)(initialState), state = _a[0], setState = _a[1];
  var setRafState = (0, import_react3.useCallback)(function(value) {
    cancelAnimationFrame(frame.current);
    frame.current = requestAnimationFrame(function() {
      setState(value);
    });
  }, []);
  useUnmount_default(function() {
    cancelAnimationFrame(frame.current);
  });
  return [state, setRafState];
};
var useRafState_default = useRafState;

// node_modules/.pnpm/react-use@17.6.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use/esm/misc/util.js
function on(obj) {
  var args = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }
  if (obj && obj.addEventListener) {
    obj.addEventListener.apply(obj, args);
  }
}
function off(obj) {
  var args = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }
  if (obj && obj.removeEventListener) {
    obj.removeEventListener.apply(obj, args);
  }
}
var isBrowser = typeof window !== "undefined";

export {
  useRafState_default,
  on,
  off,
  isBrowser
};
//# sourceMappingURL=chunk-OA53NT6W.js.map
