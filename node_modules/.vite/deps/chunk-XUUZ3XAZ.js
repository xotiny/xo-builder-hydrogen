import {
  hash
} from "./chunk-LIC67Q6F.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/advanced/masonry/masonry.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/advanced/masonry/masonry-utils.js
function masonryUtils({ element, child }) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const { settings } = element;
  const itemsPerRowDesktop = (_a = settings.itemsPerRow.desktop) == null ? void 0 : _a.value;
  const itemsPerRowTablet = ((_b = settings.itemsPerRow.tablet) == null ? void 0 : _b.value) ?? ((_c = settings.itemsPerRow.desktop) == null ? void 0 : _c.value);
  const itemsPerRowMobile = ((_d = settings.itemsPerRow.mobile) == null ? void 0 : _d.value) ?? ((_e = settings.itemsPerRow.desktop) == null ? void 0 : _e.value);
  const itemSpacingDesktop = (_f = settings.itemSpacing.desktop) == null ? void 0 : _f.value;
  const itemSpacingTablet = ((_g = settings.itemSpacing.tablet) == null ? void 0 : _g.value) ?? ((_h = settings.itemSpacing.desktop) == null ? void 0 : _h.value);
  const itemSpacingMobile = ((_i = settings.itemSpacing.mobile) == null ? void 0 : _i.value) ?? ((_j = settings.itemSpacing.desktop) == null ? void 0 : _j.value);
  const observed = hash(JSON.stringify(settings) + JSON.stringify(child.map((chld) => {
    return {
      ...chld,
      collapsed: false
    };
  })));
  return {
    itemsPerRowDesktop,
    itemsPerRowTablet,
    itemsPerRowMobile,
    itemSpacingDesktop,
    itemSpacingTablet,
    itemSpacingMobile,
    observed
  };
}

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/advanced/masonry/masonry.js
var Masonry = ({ element, children, child }) => {
  const { itemSpacingDesktop, itemSpacingMobile, itemSpacingTablet, itemsPerRowDesktop, itemsPerRowMobile, itemsPerRowTablet, observed } = masonryUtils({ element, child });
  return (0, import_jsx_runtime.jsx)("xo-masonry", { "xo-observed": observed, ...elementAttr(element, {
    classNames: ["xb-masonry"],
    isCustomElement: true
  }), "xo-gap": itemSpacingDesktop, "xo-column": itemsPerRowDesktop, "xo-breakpoints": `{
        768: {
          column: ${itemsPerRowMobile},
          gap: ${itemSpacingMobile}
        },
        992: {
          column: ${itemsPerRowTablet},
          gap: ${itemSpacingTablet}
        }
      }`, children });
};

export {
  Masonry
};
//# sourceMappingURL=chunk-XUUZ3XAZ.js.map
