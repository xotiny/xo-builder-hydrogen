{
  "version": 3,
  "sources": ["../../.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list.js", "../../.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list-utils.js", "../../.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/styles.js"],
  "sourcesContent": ["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { elementAttr } from \"../../../utils/template-helpers/element-attr\";\nimport { listUtils } from './list-utils';\nimport './styles';\nexport const List = ({ element, children }) => {\n    const { settings } = element;\n    const { getListType, getHorizontalAlign, getSpacing, getVerticalAlign, iconHiddenClass, typeClass } = listUtils({ element });\n    return (_jsx(\"ul\", { ...elementAttr(element, {\n            classNames: ['xb-list', typeClass, `xb-list--${settings.markerType}`, iconHiddenClass, settings.static?.class],\n            style: {\n                ...getListType(),\n                ...getSpacing(),\n                ...getHorizontalAlign(),\n                ...getVerticalAlign(),\n            },\n        }), children: children }));\n};\n", "import { Style } from \"../../../utils/template-helpers/style\";\nexport function listUtils({ element }) {\n    const { settings } = element;\n    const iconHiddenClass = settings.markerType !== 'icon' ? 'xb-list__icon-hidden' : '';\n    const typeClass = settings.listType === 'block' ? 'xb-list--block' : 'xb-list--inline';\n    function getSpacing() {\n        const spacingDesktop = settings.itemSpacings.desktop.value;\n        const spacingTablet = settings.itemSpacings?.tablet?.value ?? settings.itemSpacings.desktop.value;\n        const spacingMobile = settings.itemSpacings?.mobile?.value ?? settings.itemSpacings?.tablet?.value ?? settings.itemSpacings.desktop.value;\n        const spacing = Style.create({\n            '--xb-list-spacing-desktop': `${spacingDesktop}px`,\n            '--xb-list-spacing-tablet': `${spacingTablet}px`,\n            '--xb-list-spacing-mobile': `${spacingMobile}px`,\n        });\n        return spacing.get();\n    }\n    function getHorizontalAlign() {\n        const horizontalAlign = Style.create(settings.listType === 'inline'\n            ? {\n                '--xb-list-horizontal-align-desktop': settings.horizontalAlign.desktop,\n            }\n            : {\n                '--xb-list-vertical-align-desktop': settings.horizontalAlign.desktop,\n            });\n        if (settings.horizontalAlign?.tablet) {\n            horizontalAlign.set(settings.listType === 'inline'\n                ? {\n                    '--xb-list-horizontal-align-tablet': settings.horizontalAlign?.tablet,\n                }\n                : {\n                    '--xb-list-vertical-align-tablet': settings.horizontalAlign?.tablet,\n                });\n        }\n        else {\n            horizontalAlign.set(settings.listType === 'inline'\n                ? {\n                    '--xb-list-horizontal-align-tablet': settings.horizontalAlign?.desktop,\n                }\n                : {\n                    '--xb-list-vertical-align-tablet': settings.horizontalAlign?.desktop,\n                });\n        }\n        if (settings.horizontalAlign?.mobile) {\n            horizontalAlign.set(settings.listType === 'inline'\n                ? {\n                    '--xb-list-horizontal-align-mobile': settings.horizontalAlign?.mobile,\n                }\n                : {\n                    '--xb-list-vertical-align-mobile': settings.horizontalAlign?.mobile,\n                });\n        }\n        else {\n            horizontalAlign.set(settings.listType === 'inline'\n                ? {\n                    '--xb-list-horizontal-align-mobile': settings.horizontalAlign?.desktop,\n                }\n                : {\n                    '--xb-list-vertical-align-mobile': settings.horizontalAlign?.desktop,\n                });\n        }\n        return horizontalAlign.get();\n    }\n    function getVerticalAlign() {\n        const verticalAlign = Style.create(settings.listType !== 'inline'\n            ? {\n                '--xb-list-horizontal-align-desktop': settings.verticalAlign.desktop,\n            }\n            : {\n                '--xb-list-vertical-align-desktop': settings.verticalAlign.desktop,\n            });\n        if (settings.verticalAlign?.tablet) {\n            verticalAlign.set(settings.listType !== 'inline'\n                ? {\n                    '--xb-list-horizontal-align-tablet': settings.verticalAlign?.tablet,\n                }\n                : {\n                    '--xb-list-vertical-align-tablet': settings.verticalAlign?.tablet,\n                });\n        }\n        else {\n            verticalAlign.set(settings.listType !== 'inline'\n                ? {\n                    '--xb-list-horizontal-align-tablet': settings.verticalAlign?.desktop,\n                }\n                : {\n                    '--xb-list-vertical-align-tablet': settings.verticalAlign?.desktop,\n                });\n        }\n        if (settings.verticalAlign?.mobile) {\n            verticalAlign.set(settings.listType !== 'inline'\n                ? {\n                    '--xb-list-horizontal-align-mobile': settings.verticalAlign?.mobile,\n                }\n                : {\n                    '--xb-list-vertical-align-mobile': settings.verticalAlign?.mobile,\n                });\n        }\n        else {\n            verticalAlign.set(settings.listType !== 'inline'\n                ? {\n                    '--xb-list-horizontal-align-mobile': settings.verticalAlign?.desktop,\n                }\n                : {\n                    '--xb-list-vertical-align-mobile': settings.verticalAlign?.desktop,\n                });\n        }\n        return verticalAlign.get();\n    }\n    function getListType() {\n        const listStyle = settings.markerType !== 'icon' ? settings.markerType : 'none';\n        const listType = Style.create({\n            '--xb-list-style': listStyle,\n        });\n        return listType.get();\n    }\n    return {\n        typeClass,\n        iconHiddenClass,\n        getListType,\n        getSpacing,\n        getHorizontalAlign,\n        getVerticalAlign\n    };\n}\n", "import './list.css';\n"],
  "mappings": "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",
  "names": ["_jsx"]
}
