import {
  useSettings
} from "./chunk-OFJGWOBY.js";
import {
  Style
} from "./chunk-PEYES2GH.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/html-video/html-video.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/html-video/html-video-utils.js
function htmlVideoUtils({ element }) {
  const { settings } = element;
  function getVideoWidth() {
    var _a, _b, _c, _d;
    const widthDesktop = settings.videoSize === "full" ? "100%" : `${settings.videoWidth.desktop.value}px`;
    const widthTablet = settings.videoSize === "full" ? "100%" : `${((_b = (_a = settings.videoWidth) == null ? void 0 : _a.tablet) == null ? void 0 : _b.value) ?? settings.videoWidth.desktop.value}px`;
    const widthMobile = settings.videoSize === "full" ? "100%" : `${((_d = (_c = settings.videoWidth) == null ? void 0 : _c.mobile) == null ? void 0 : _d.value) ?? settings.videoWidth.desktop.value}px`;
    const styles = Style.create({
      "--xb-html-video-width-desktop": widthDesktop,
      "--xb-html-video-width-tablet": widthTablet,
      "--xb-html-video-width-mobile": widthMobile
    });
    return styles.get();
  }
  function getRatioMaskVideo() {
    if (settings.maskVideoEnabled !== "yes") {
      const displayRatio = settings.displayRatio === "custom" ? settings.customRatio.value : settings.displayRatio.replace("%", "");
      const ratioStyle2 = Style.create({
        "--xb-video-mask-aspect-ratio": displayRatio
      });
      return ratioStyle2.get();
    }
    const ratioMask = [
      { name: "Mask_Brush_2", ratio: 46600 / 559 },
      { name: "Mask_Amorphous_Blob", ratio: 43700 / 475 },
      { name: "Mask_Ribbon", ratio: 46600 / 467 },
      { name: "Mask_Brutalist_7", ratio: 47100 / 468 },
      { name: "Mask_Abstract_4", ratio: 46700 / 474 },
      { name: "Mask_Star", ratio: 46600 / 471 },
      { name: "MaskImage", ratio: 46600 / 833 },
      { name: "Mask_Abstract_3", ratio: 46900 / 480 },
      { name: "Mask_Brush_1", ratio: 46600 / 479 },
      { name: "Mask_Brush_3", ratio: 46600 / 606 },
      { name: "Mask_Brush_Circle", ratio: 46600 / 455 },
      { name: "Mask_Abstract_2", ratio: 48900 / 510 },
      { name: "Mask_Shield", ratio: 46600 / 397 },
      { name: "Mask_Two_Square", ratio: 46600 / 462 },
      { name: "Mask_Arch", ratio: 46600 / 374 },
      { name: "Mask_Ornament_Square", ratio: 46600 / 425 },
      { name: "Mask_Pointer", ratio: 46600 / 468 },
      { name: "Mask_Heart", ratio: 46600 / 468 },
      { name: "Mask_Bubble_Chat", ratio: 46600 / 511 },
      { name: "Mask_Abstract_1", ratio: 46600 / 487 },
      { name: "Mask_Brutalist_6", ratio: 47100 / 465 },
      { name: "Mask_Half_Circle", ratio: 46600 / 438 }
    ];
    const currentMaskRatio = ratioMask.find((item) => settings.maskVideoStyle.includes(item.name));
    const currentRatio = (currentMaskRatio == null ? void 0 : currentMaskRatio.ratio) ?? 100;
    const ratioStyle = Style.create({
      "--xb-video-mask-aspect-ratio": currentRatio
    });
    return ratioStyle.get();
  }
  function getMaskImageStyle() {
    const styles = Style.create({
      "--xb-image-mask-svg": `url('${settings.maskVideoStyle || ""}')`
    });
    return styles.get();
  }
  const videoAttrs = {
    ...settings.muteVideo === "yes" ? { muted: true } : {},
    ...settings.loopEnabled === "yes" ? { loop: true } : {},
    ...settings.showControl === "yes" ? { controls: true } : {},
    ...settings.autoplayEnabled === "yes" ? { autoplay: true } : {}
  };
  const placeholderImage = "https://cdn.shopify.com/s/files/1/0677/7900/2622/files/Default_image.png?v=1713954435";
  const maskVideoClass = settings.maskVideoEnabled === "yes" ? "xb-html-video__mask" : "";
  const videoPopupClass = settings.popUpEnabled === "yes" ? "xb-html-video__popup" : "";
  return {
    maskVideoClass,
    videoPopupClass,
    getVideoWidth,
    getRatioMaskVideo,
    getMaskImageStyle,
    videoAttrs,
    placeholderImage
  };
}

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/html-video/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/html-video/html-video.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/html-video/html-video.js
var HtmlVideo = ({ element, children }) => {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;
  const { settings } = element;
  const { globalSettings: global } = useSettings();
  const { getMaskImageStyle, getRatioMaskVideo, getVideoWidth, maskVideoClass, videoPopupClass, placeholderImage, videoAttrs } = htmlVideoUtils({
    element
  });
  const renderLoading = () => {
    var _a2, _b2, _c2, _d2, _e2, _f2, _g2;
    const loaderType = ((_a2 = global == null ? void 0 : global.imageLoader) == null ? void 0 : _a2.type) ?? "loader-1";
    const loaderColor = ((_b2 = global == null ? void 0 : global.imageLoader) == null ? void 0 : _b2.color) ?? "#000";
    const loaderBackgroundColor = ((_c2 = global == null ? void 0 : global.imageLoader) == null ? void 0 : _c2.backgroundColor) ?? "rgba(0, 0, 0, 0.1)";
    const loaderDuration = ((_e2 = (_d2 = global == null ? void 0 : global.imageLoader) == null ? void 0 : _d2.duration) == null ? void 0 : _e2.value) ?? 1600;
    const loaderSize = ((_g2 = (_f2 = global == null ? void 0 : global.imageLoader) == null ? void 0 : _f2.size) == null ? void 0 : _g2.value) ?? 40;
    switch (loaderType) {
      case "loader-1":
        return (0, import_jsx_runtime.jsx)("div", { className: "xb-image__overlay xo-lazyload-overlay", children: (0, import_jsx_runtime.jsx)("div", { className: "xb-image__loading", style: { "--xb-image-loading-background": loaderBackgroundColor }, children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-1", style: { "--color": loaderColor, "--duration": loaderDuration, "--size": loaderSize }, children: (0, import_jsx_runtime.jsx)("span", {}) }) }) });
      case "loader-2":
        const loaderSize2 = Math.round(loaderSize / 2);
        return (0, import_jsx_runtime.jsx)("div", { className: "xb-image__overlay xo-lazyload-overlay", children: (0, import_jsx_runtime.jsx)("div", { className: "xb-image__loading", style: { "--xb-image-loading-background": loaderBackgroundColor }, children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-2", style: { "--color": loaderColor, "--duration": loaderDuration, "--stroke-width": 2, "--size": loaderSize2 }, children: (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)("span", {}) }) }) }) });
      case "loader-3":
        const loaderSize3 = Math.round(loaderSize / 4);
        return (0, import_jsx_runtime.jsx)("div", { className: "xb-image__overlay xo-lazyload-overlay", children: (0, import_jsx_runtime.jsx)("div", { className: "xb-image__loading", style: { "--xb-image-loading-background": loaderBackgroundColor }, children: (0, import_jsx_runtime.jsx)("div", { className: "xo-loader-3", style: { "--color": loaderColor, "--duration": loaderDuration, "--size": loaderSize3 }, children: (0, import_jsx_runtime.jsx)("span", {}) }) }) });
    }
  };
  const toggleVideo = (event) => {
    var _a2;
    const currentEl = event.currentTarget;
    const iconPlayEl = (_a2 = currentEl.closest(".xb-html-video")) == null ? void 0 : _a2.querySelector(".xb-video-icon");
    if (iconPlayEl) {
      if (currentEl.paused) {
        iconPlayEl.style.display = "none";
      } else {
        iconPlayEl.style.display = "flex";
      }
    }
  };
  return (0, import_jsx_runtime.jsx)("div", { ...elementAttr(element, {
    classNames: ["xb-html-video", maskVideoClass, videoPopupClass, (_a = settings.static) == null ? void 0 : _a.class],
    style: {
      ...getVideoWidth(),
      ...getRatioMaskVideo(),
      ...getMaskImageStyle()
    }
  }), children: settings.popUpEnabled === "yes" ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsxs)("xo-modal-trigger", { "xo-name": "xb-html-video-modal", children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-html-video__video-content", children: (0, import_jsx_runtime.jsx)("span", {}) }), (0, import_jsx_runtime.jsxs)("div", { children: [(0, import_jsx_runtime.jsx)("img", { className: "xb-html-video__item xb-image", is: "xo-lazyload", "xo-src": ((_b = settings.coverImage) == null ? void 0 : _b.url) ?? placeholderImage, loading: "lazy", width: (_c = settings.coverImage) == null ? void 0 : _c.width, height: (_d = settings.coverImage) == null ? void 0 : _d.height, "xo-intrinsic-width": (_e = settings.coverImage) == null ? void 0 : _e.width, "xo-intrinsic-height": (_f = settings.coverImage) == null ? void 0 : _f.height, alt: ((_g = settings.coverImage) == null ? void 0 : _g.alt) ?? "Video image{element.id}", "xo-fallback-width": "400", draggable: "false" }), renderLoading()] }), (0, import_jsx_runtime.jsx)("div", { children })] }), (0, import_jsx_runtime.jsx)("xo-modal", { "xo-name": "xb-html-video-modal", "xo-animate": "zoom", "xo-video-autoplay": settings.autoplayEnabled === "yes", "xo-portal": "true", children: (0, import_jsx_runtime.jsxs)("div", { className: "xb-html-video__content", children: [(0, import_jsx_runtime.jsx)("xo-modal-trigger", { children: (0, import_jsx_runtime.jsx)("button", { className: "xb-html-video__close", "aria-label": "Close", children: (0, import_jsx_runtime.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512", children: (0, import_jsx_runtime.jsx)("path", { d: "M393.4 41.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3L269.3 256 438.6 425.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 301.3 54.6 470.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L178.7 256 9.4 86.6C-3.1 74.1-3.1 53.9 9.4 41.4s32.8-12.5 45.3 0L224 210.7 393.4 41.4z" }) }) }) }), (0, import_jsx_runtime.jsx)("video", { width: "100%", style: {
    width: "100%"
  }, src: (_h = settings.videoPicker) == null ? void 0 : _h.url, ...videoAttrs })] }) })] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-html-video__video-content", children: (0, import_jsx_runtime.jsx)("span", {}) }), (0, import_jsx_runtime.jsx)("video", { className: "xb-html-video__item", ...((_i = settings.coverImage) == null ? void 0 : _i.url) || ((_j = settings.videoPicker) == null ? void 0 : _j.videoThumbnail) ? { poster: ((_k = settings.coverImage) == null ? void 0 : _k.url) ?? ((_l = settings.videoPicker) == null ? void 0 : _l.videoThumbnail) } : {}, width: "100%", style: {
    width: "100%"
  }, src: (_m = settings.videoPicker) == null ? void 0 : _m.url, ...videoAttrs, onClick: toggleVideo }), (0, import_jsx_runtime.jsx)("div", { children })] }) });
};

export {
  HtmlVideo
};
//# sourceMappingURL=chunk-IDJILLBH.js.map
