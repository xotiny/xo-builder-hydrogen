import {
  FilterCollectionItem,
  PriceRangeFilter
} from "./chunk-LCGNXR2R.js";
import {
  getFilterLink
} from "./chunk-6VVRWVZQ.js";
import {
  CONFIG,
  useCollectionDetail,
  useElementSettings
} from "./chunk-SSTWVKXD.js";
import {
  Link,
  useLocation,
  useSearchParams
} from "./chunk-Z267FA2X.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  classNames
} from "./chunk-AVF5UQVT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/collection-filtering-drawer.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/collection-filtering-drawer.xb-collection-filtering-drawer--modifier-01.css";
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/collection-filtering-drawer.xb-collection-filtering-drawer--modifier-02.css";
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/collection-filtering-drawer.xb-collection-filtering-drawer--modifier-03.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/shopify/collection-filtering-drawer/collection-filtering-drawer.js
var CollectionFilteringDrawer = ({ element }) => {
  var _a, _b, _c, _d;
  const { settings } = element;
  const parentSettings = useElementSettings();
  const data = useCollectionDetail();
  const [params] = useSearchParams();
  const location = useLocation();
  if (!parentSettings || !data) {
    return null;
  }
  const { appliedFilters, collection, collections } = data;
  if (!collection) {
    return null;
  }
  const filterMarkup = (filter, option) => {
    switch (filter.type) {
      case "PRICE_RANGE":
        const priceFilter = params.get(`${CONFIG.collectionPage.filterUrlPrefix}price`);
        const price = priceFilter ? JSON.parse(priceFilter) : void 0;
        const min = isNaN(Number(price == null ? void 0 : price.min)) ? void 0 : Number(price == null ? void 0 : price.min);
        const max = isNaN(Number(price == null ? void 0 : price.max)) ? void 0 : Number(price == null ? void 0 : price.max);
        return (0, import_jsx_runtime.jsx)(PriceRangeFilter, { min, max });
      default:
        const to = getFilterLink(option.input, params, location);
        const type = Object.entries(JSON.parse(option.input))[0];
        if ((type == null ? void 0 : type[0]) === "category") {
          return null;
        }
        const isActive = appliedFilters.some((fil) => JSON.stringify(fil.filter) === option.input);
        const activeClass = isActive ? "xb-field-checkbox-1--active" : "";
        return (0, import_jsx_runtime.jsxs)(Link, { className: classNames("xb-field-checkbox-1", activeClass), prefetch: "intent", to, style: {
          "--icon-size": "16px"
        }, children: [(0, import_jsx_runtime.jsx)("span", { className: "xb-field-checkbox-1__item", children: (0, import_jsx_runtime.jsx)("span", { className: "xb-field-checkbox-1__icon", children: (0, import_jsx_runtime.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round", children: (0, import_jsx_runtime.jsx)("polyline", { points: "20 6 9 17 4 12" }) }) }) }), (0, import_jsx_runtime.jsxs)("span", { className: "xb-field-checkbox-1__label", children: [(0, import_jsx_runtime.jsx)("span", { children: option.label }), parentSettings.$numberCountEnabled == "yes" && (0, import_jsx_runtime.jsxs)("div", { children: ["(", option.count, ")"] })] })] });
    }
  };
  const renderContent = () => {
    var _a2, _b2;
    if (parentSettings.$filterEnabled !== "yes") {
      return null;
    }
    return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-collapse", children: parentSettings.$collapseEnabled == "yes" ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsxs)("xo-collapse-trigger", { class: "xb-collapse__trigger", "xo-name": "collection", "xo-active": true, children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-option", children: "Collections" }), (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-icon", children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-icon-icon", children: (0, import_jsx_runtime.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "15", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round", children: (0, import_jsx_runtime.jsx)("polyline", { points: "6 9 12 15 18 9" }) }) }) })] }), (0, import_jsx_runtime.jsx)("xo-collapse", { class: "xb-collapse__body xb-scrollbar", "xo-name": "collection", "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__content", style: { flexDirection: "column" }, children: collections.map((collection2) => {
      return (0, import_jsx_runtime.jsx)(FilterCollectionItem, { collection: collection2 }, collection2.handle);
    }) }) })] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger", "xo-name": "collection", "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-option", children: "Collections" }) }), (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__body xb-scrollbar", "xo-name": "collection", "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__content", children: collections.map((collection2) => {
      return (0, import_jsx_runtime.jsx)(FilterCollectionItem, { collection: collection2 }, collection2.handle);
    }) }) })] }) }), (_b2 = (_a2 = collection == null ? void 0 : collection.products) == null ? void 0 : _a2.filters) == null ? void 0 : _b2.map((filter) => {
      var _a3, _b3;
      const name = filter.label.toLocaleLowerCase();
      if (name === "category") {
        return null;
      }
      return (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse", children: parentSettings.$collapseEnabled == "yes" ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsxs)("xo-collapse-trigger", { class: "xb-collapse__trigger", "xo-name": filter.label, "xo-active": true, children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-option", children: filter.label }), (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-icon", children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-icon-icon", children: (0, import_jsx_runtime.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", width: "15", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round", children: (0, import_jsx_runtime.jsx)("polyline", { points: "6 9 12 15 18 9" }) }) }) })] }), (0, import_jsx_runtime.jsx)("xo-collapse", { class: "xb-collapse__body xb-scrollbar", "xo-name": filter.label, "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__content", children: (_a3 = filter == null ? void 0 : filter.values) == null ? void 0 : _a3.map((option) => {
        return (0, import_jsx_runtime.jsx)("div", { children: filterMarkup(filter, option) }, option.id);
      }) }) })] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger", "xo-name": filter.label, "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__trigger-option", children: filter.label }) }), (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__body xb-scrollbar", "xo-name": filter.label, "xo-active": true, children: (0, import_jsx_runtime.jsx)("div", { className: "xb-collapse__content", children: (_b3 = filter == null ? void 0 : filter.values) == null ? void 0 : _b3.map((option) => {
        return (0, import_jsx_runtime.jsx)("div", { children: filterMarkup(filter, option) }, option.id);
      }) }) })] }) }, filter.id);
    })] });
  };
  return parentSettings.$collapseEnabled == "yes" ? (0, import_jsx_runtime.jsx)("xo-collapse-provider", { ...elementAttr(element, {
    classNames: ["xb-collection-filtering", (_a = settings == null ? void 0 : settings.modifier) == null ? void 0 : _a.handle, (_b = settings.static) == null ? void 0 : _b.class],
    isCustomElement: true
  }), children: renderContent() }) : (0, import_jsx_runtime.jsx)("div", { ...elementAttr(element, {
    classNames: ["xb-collection-filtering", (_c = settings == null ? void 0 : settings.modifier) == null ? void 0 : _c.handle, (_d = settings.static) == null ? void 0 : _d.class]
  }), children: renderContent() });
};

export {
  CollectionFilteringDrawer
};
//# sourceMappingURL=chunk-N7LYG5BS.js.map
