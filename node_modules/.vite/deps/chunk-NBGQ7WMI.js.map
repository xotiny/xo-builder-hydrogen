{
  "version": 3,
  "sources": ["../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/@xstate/fsm/es/index.js", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/dist/browser-dev/_virtual/with-selector.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/dist/browser-dev/_virtual/index.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/dist/browser-dev/_virtual/use-sync-external-store-shim.development.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/use-sync-external-store/shim/index.js", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/dist/browser-dev/_virtual/with-selector.development.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/node_modules/use-sync-external-store/shim/with-selector.js", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/flatten-connection.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/storefront-api-constants.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/storefront-client.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/ShopifyProvider.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/cart-constants.ts", "../../.pnpm/worktop@0.7.3/node_modules/worktop/cookie/index.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/cookies-utils.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/useCartAPIStateMachine.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/CartProvider.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/ProductProvider.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/analytics-constants.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/analytics-utils.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/analytics-schema-trekkie-storefront-page-view.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/dist/browser-dev/packages/hydrogen-react/package.json.mjs", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/analytics-schema-custom-storefront-customer-tracking.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/analytics.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/useMoney.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/Money.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/CartLineProvider.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/codegen.helpers.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/ExternalVideo.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/optionValueDecoder.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/getProductOptions.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/Image.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/load-script.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/Video.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/ModelViewer.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/MediaFile.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/parse-metafield.ts", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/RichText.components.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/RichText.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/ShopPayButton.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/useSelectedOptionInUrlParam.tsx", "../../.pnpm/@shopify+hydrogen-react@2024.10.1_@types+react@18.3.18_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@shopify/hydrogen-react/src/useShopifyCookies.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/storefront.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/strategies.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/parse-json.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/api.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/sub-request.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/hash.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/run-with-cache.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/server-fetch.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/constants.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/uuid.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/warning.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/version.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/graphql.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/callsites.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/request.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/create-with-cache.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cache/in-memory.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/utils/get-redirect-url.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/routing/redirect.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/routing/graphiql.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/seo/seo.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/seo/escape.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/seo/generate-seo-tags.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/seo/getSeoMeta.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/pagination/Pagination.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer/constants.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer/BadRequest.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer/auth.helpers.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/csp/nonce.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer/customer-account-helper.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer/customer.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/changelogHandler.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/CartForm.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cart-fragments.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartCreateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartGetDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartLinesAddDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/optimistic/optimistic-cart.helper.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartLinesUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartLinesRemoveDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartDiscountCodesUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartGiftCardCodeUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartBuyerIdentityUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartNoteUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartSelectedDeliveryOptionsUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartAttributesUpdateDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartMetafieldsSetDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/queries/cartMetafieldDeleteDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/cartGetIdDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/cartSetIdDefault.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/createCartHandler.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/cart/optimistic/useOptimisticCart.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/product/VariantSelector.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/product/useOptimisticVariant.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/csp/csp.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/csp/Script.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/optimistic-ui/optimistic-ui.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/shop/ShopPayButton.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/AnalyticsProvider.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/AnalyticsView.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/ShopifyAnalytics.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/events.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/customer-privacy/ShopifyCustomerPrivacy.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/package.json", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/CartAnalytics.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/analytics-manager/PerfKit.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/index.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/RichText.tsx", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/createHydrogenContext.ts", "../../.pnpm/@shopify+hydrogen@2024.10.1_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3_kwdnpaz6dxwjttylgo642irwwu/node_modules/@shopify/hydrogen/src/sitemap/sitemap.ts", "../../.pnpm/content-security-policy-builder@2.2.0/node_modules/content-security-policy-builder/dist/index.mjs"],
  "sourcesContent": ["/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(t,n){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,o=e.call(t),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=o.return)&&e.call(o)}finally{if(i)throw i.error}}return a}var n;!function(t){t[t.NotStarted=0]=\"NotStarted\",t[t.Running=1]=\"Running\",t[t.Stopped=2]=\"Stopped\"}(n||(n={}));var e={type:\"xstate.init\"};function r(t){return void 0===t?[]:[].concat(t)}function i(t){return{type:\"xstate.assign\",assignment:t}}function o(t,n){return\"string\"==typeof(t=\"string\"==typeof t&&n&&n[t]?n[t]:t)?{type:t}:\"function\"==typeof t?{type:t.name,exec:t}:t}function a(t){return function(n){return t===n}}function u(t){return\"string\"==typeof t?{type:t}:t}function c(t,n){return{value:t,context:n,actions:[],changed:!1,matches:a(t)}}function f(t,n,e){var r=n,i=!1;return[t.filter((function(t){if(\"xstate.assign\"===t.type){i=!0;var n=Object.assign({},r);return\"function\"==typeof t.assignment?n=t.assignment(r,e):Object.keys(t.assignment).forEach((function(i){n[i]=\"function\"==typeof t.assignment[i]?t.assignment[i](r,e):t.assignment[i]})),r=n,!1}return!0})),r,i]}function s(n,i){void 0===i&&(i={});var s=t(f(r(n.states[n.initial].entry).map((function(t){return o(t,i.actions)})),n.context,e),2),l=s[0],v=s[1],y={config:n,_options:i,initialState:{value:n.initial,actions:l,context:v,matches:a(n.initial)},transition:function(e,i){var s,l,v=\"string\"==typeof e?{value:e,context:n.context}:e,p=v.value,g=v.context,d=u(i),x=n.states[p];if(x.on){var m=r(x.on[d.type]);try{for(var h=function(t){var n=\"function\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}(m),b=h.next();!b.done;b=h.next()){var S=b.value;if(void 0===S)return c(p,g);var w=\"string\"==typeof S?{target:S}:S,j=w.target,E=w.actions,R=void 0===E?[]:E,N=w.cond,O=void 0===N?function(){return!0}:N,_=void 0===j,k=null!=j?j:p,T=n.states[k];if(O(g,d)){var q=t(f((_?r(R):[].concat(x.exit,R,T.entry).filter((function(t){return t}))).map((function(t){return o(t,y._options.actions)})),g,d),3),z=q[0],A=q[1],B=q[2],C=null!=j?j:p;return{value:C,context:A,actions:z,changed:j!==p||z.length>0||B,matches:a(C)}}}}catch(t){s={error:t}}finally{try{b&&!b.done&&(l=h.return)&&l.call(h)}finally{if(s)throw s.error}}}return c(p,g)}};return y}var l=function(t,n){return t.actions.forEach((function(e){var r=e.exec;return r&&r(t.context,n)}))};function v(t){var r=t.initialState,i=n.NotStarted,o=new Set,c={_machine:t,send:function(e){i===n.Running&&(r=t.transition(r,e),l(r,u(e)),o.forEach((function(t){return t(r)})))},subscribe:function(t){return o.add(t),t(r),{unsubscribe:function(){return o.delete(t)}}},start:function(o){if(o){var u=\"object\"==typeof o?o:{context:t.config.context,value:o};r={value:u.value,actions:[],context:u.context,matches:a(u.value)}}else r=t.initialState;return i=n.Running,l(r,e),c},stop:function(){return i=n.Stopped,o.clear(),c},get state(){return r},get status(){return i}};return c}export{n as InterpreterStatus,i as assign,s as createMachine,v as interpret};\n", "var withSelector = { exports: {} };\nexport {\n  withSelector as __module\n};\n//# sourceMappingURL=with-selector.mjs.map\n", "var shim = { exports: {} };\nexport {\n  shim as __module\n};\n//# sourceMappingURL=index.mjs.map\n", "var useSyncExternalStoreShim_development = {};\nexport {\n  useSyncExternalStoreShim_development as __exports\n};\n//# sourceMappingURL=use-sync-external-store-shim.development.mjs.map\n", "/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n", "var withSelector_development = {};\nexport {\n  withSelector_development as __exports\n};\n//# sourceMappingURL=with-selector.development.mjs.map\n", "/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n", "import type {PartialDeep} from 'type-fest';\n\n/**\n * The `flattenConnection` utility transforms a connection object from the Storefront API (for example, [Product-related connections](https://shopify.dev/api/storefront/reference/products/product)) into a flat array of nodes.\n * The utility works with either `nodes` or `edges.node`.\n *\n * If `connection` is null or undefined, will return an empty array instead in production. In development, an error will be thrown.\n */\nexport function flattenConnection<\n  ConnectionGeneric extends\n    | PartialDeep<ConnectionEdges, {recurseIntoArrays: true}>\n    | PartialDeep<ConnectionNodes, {recurseIntoArrays: true}>\n    | ConnectionEdges\n    | ConnectionNodes,\n>(\n  connection?: ConnectionGeneric,\n): ConnectionGeneric extends\n  | {\n      edges: Array<{node: infer ConnectionBaseType}>;\n    }\n  | {\n      nodes: Array<infer ConnectionBaseType>;\n    }\n  ? // if it's not a PartialDeep, then return the infered type\n    ConnectionBaseType[]\n  : ConnectionGeneric extends\n      | PartialDeep<\n          {edges: {node: Array<infer ConnectionBaseType>}},\n          {recurseIntoArrays: true}\n        >\n      | PartialDeep<\n          {\n            nodes: Array<infer ConnectionBaseType>;\n          },\n          {recurseIntoArrays: true}\n        >\n  ? // if it is a PartialDeep, return a PartialDeep inferred type\n    PartialDeep<ConnectionBaseType[], {recurseIntoArrays: true}>\n  : never {\n  if (!connection) {\n    const noConnectionErr = `flattenConnection(): needs a 'connection' to flatten, but received '${\n      connection ?? ''\n    }' instead.`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(noConnectionErr);\n    } else {\n      console.error(noConnectionErr + ` Returning an empty array`);\n      // @ts-expect-error We don't want to crash prod, so return an empty array\n      return [];\n    }\n  }\n\n  if ('nodes' in connection) {\n    // @ts-expect-error return type is failing\n    return connection.nodes;\n  }\n\n  if ('edges' in connection && Array.isArray(connection.edges)) {\n    // @ts-expect-error return type is failing\n    return connection.edges.map((edge) => {\n      if (!edge?.node) {\n        throw new Error(\n          'flattenConnection(): Connection edges must contain nodes',\n        );\n      }\n      return edge.node;\n    }) as Array<unknown>;\n  }\n\n  if (__HYDROGEN_DEV__) {\n    console.warn(\n      `flattenConnection(): The connection did not contain either \"nodes\" or \"edges.node\". Returning an empty array.`,\n    );\n  }\n\n  // @ts-expect-error We don't want to crash prod, so return an empty array\n  return [];\n}\n\ntype ConnectionEdges = {\n  edges: Array<{node: unknown}>;\n};\n\ntype ConnectionNodes = {\n  nodes: Array<unknown>;\n};\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface ConnectionGenericForDoc {\n  connection?: ConnectionEdges | ConnectionNodes;\n}\nexport type FlattenConnectionReturnForDoc = Array<unknown>;\n", "export const SFAPI_VERSION = '2024-10';\n", "import {SFAPI_VERSION} from './storefront-api-constants.js';\n\nexport type StorefrontClientProps = {\n  /** The host name of the domain (eg: `{shop}.myshopify.com`). */\n  storeDomain?: string;\n  /** The Storefront API delegate access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) and [delegate access token](https://shopify.dev/apps/auth/oauth/delegate-access-tokens) documentation for more details. */\n  privateStorefrontToken?: string;\n  /** The Storefront API access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  publicStorefrontToken?: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen React was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details.  */\n  storefrontApiVersion?: string;\n  /**\n   * Customizes which `\"content-type\"` header is added when using `getPrivateTokenHeaders()` and `getPublicTokenHeaders()`. When fetching with a `JSON.stringify()`-ed `body`, use `\"json\"`. When fetching with a `body` that is a plain string, use `\"graphql\"`. Defaults to `\"json\"`\n   *\n   * Can also be customized on a call-by-call basis by passing in `'contentType'` to both `getPrivateTokenHeaders({...})` and `getPublicTokenHeaders({...})`, for example: `getPublicTokenHeaders({contentType: 'graphql'})`\n   */\n  contentType?: 'json' | 'graphql';\n};\n\nconst MOCK_SHOP_DOMAIN = 'mock.shop';\nconst isMockShop = (domain: string): boolean =>\n  domain.includes(MOCK_SHOP_DOMAIN);\n\n/**\n * The `createStorefrontClient()` function creates helpers that enable you to quickly query the Shopify Storefront API.\n *\n * When used on the server, it is recommended to use the `privateStorefrontToken` prop. When used on the client, it is recommended to use the `publicStorefrontToken` prop.\n */\nexport function createStorefrontClient({\n  storeDomain,\n  privateStorefrontToken,\n  publicStorefrontToken,\n  storefrontApiVersion = SFAPI_VERSION,\n  contentType,\n}: StorefrontClientProps): StorefrontClientReturn {\n  if (!storeDomain) {\n    if (__HYDROGEN_DEV__) {\n      storeDomain = MOCK_SHOP_DOMAIN;\n      warnOnce(\n        `storeDomain missing, defaulting to ${MOCK_SHOP_DOMAIN}`,\n        'info',\n      );\n    } else {\n      throw new Error(\n        H2_PREFIX_ERROR +\n          `\\`storeDomain\\` is required when creating a new Storefront client in production.`,\n      );\n    }\n  }\n\n  if (storefrontApiVersion !== SFAPI_VERSION) {\n    warnOnce(\n      `The Storefront API version that you're using is different than the version this build of Hydrogen React is targeting.` +\n        `\\nYou may run into unexpected errors if these versions don't match. Received version: \"${storefrontApiVersion}\"; expected version \"${SFAPI_VERSION}\"`,\n    );\n  }\n\n  // only warn if not in a browser environment\n  if (\n    __HYDROGEN_DEV__ &&\n    !privateStorefrontToken &&\n    !globalThis.document &&\n    !isMockShop(storeDomain)\n  ) {\n    warnOnce(\n      `Using a private storefront token is recommended for server environments.` +\n        `\\nRefer to the authentication https://shopify.dev/api/storefront#authentication documentation for more details.`,\n    );\n  }\n\n  // only warn if in a browser environment and you're using the privateStorefrontToken\n  if (__HYDROGEN_DEV__ && privateStorefrontToken && globalThis.document) {\n    warnOnce(\n      'You are attempting to use a private token in an environment where it can be easily accessed by anyone.' +\n        '\\nThis is a security risk; please use the public token and the `publicStorefrontToken` prop',\n    );\n  }\n\n  const getShopifyDomain: StorefrontClientReturn['getShopifyDomain'] = (\n    overrideProps,\n  ) => {\n    const domain = overrideProps?.storeDomain ?? storeDomain;\n    return domain.includes('://') ? domain : `https://${domain}`;\n  };\n\n  return {\n    getShopifyDomain,\n    getStorefrontApiUrl(overrideProps): string {\n      const domain = getShopifyDomain(overrideProps);\n      const apiUrl = domain + (domain.endsWith('/') ? 'api' : '/api');\n\n      if (isMockShop(domain)) return apiUrl;\n\n      return `${apiUrl}/${\n        overrideProps?.storefrontApiVersion ?? storefrontApiVersion\n      }/graphql.json`;\n    },\n    getPrivateTokenHeaders(overrideProps): Record<string, string> {\n      if (\n        !privateStorefrontToken &&\n        !overrideProps?.privateStorefrontToken &&\n        !isMockShop(storeDomain)\n      ) {\n        throw new Error(\n          H2_PREFIX_ERROR +\n            'You did not pass in a `privateStorefrontToken` while using `createStorefrontClient()` or `getPrivateTokenHeaders()`',\n        );\n      }\n\n      if (__HYDROGEN_DEV__ && !overrideProps?.buyerIp) {\n        warnOnce(\n          'It is recommended to pass in the `buyerIp` property which improves analytics and data in the admin.',\n        );\n      }\n\n      const finalContentType = overrideProps?.contentType ?? contentType;\n\n      return {\n        // default to json\n        'content-type':\n          finalContentType === 'graphql'\n            ? 'application/graphql'\n            : 'application/json',\n        'X-SDK-Variant': 'hydrogen-react',\n        'X-SDK-Variant-Source': 'react',\n        'X-SDK-Version': storefrontApiVersion,\n        'Shopify-Storefront-Private-Token':\n          overrideProps?.privateStorefrontToken ?? privateStorefrontToken ?? '',\n        ...(overrideProps?.buyerIp\n          ? {'Shopify-Storefront-Buyer-IP': overrideProps.buyerIp}\n          : {}),\n      };\n    },\n    getPublicTokenHeaders(overrideProps): Record<string, string> {\n      if (\n        !publicStorefrontToken &&\n        !overrideProps?.publicStorefrontToken &&\n        !isMockShop(storeDomain)\n      ) {\n        throw new Error(\n          H2_PREFIX_ERROR +\n            'You did not pass in a `publicStorefrontToken` while using `createStorefrontClient()` or `getPublicTokenHeaders()`',\n        );\n      }\n\n      const finalContentType =\n        overrideProps?.contentType ?? contentType ?? 'json';\n\n      return getPublicTokenHeadersRaw(\n        finalContentType,\n        storefrontApiVersion,\n        overrideProps?.publicStorefrontToken ?? publicStorefrontToken ?? '',\n      );\n    },\n  };\n}\n\nexport function getPublicTokenHeadersRaw(\n  contentType: 'graphql' | 'json',\n  storefrontApiVersion: string,\n  accessToken: string,\n): {\n  'content-type': string;\n  'X-SDK-Variant': string;\n  'X-SDK-Variant-Source': string;\n  'X-SDK-Version': string;\n  'X-Shopify-Storefront-Access-Token': string;\n} {\n  return {\n    // default to json\n    'content-type':\n      contentType === 'graphql' ? 'application/graphql' : 'application/json',\n    'X-SDK-Variant': 'hydrogen-react',\n    'X-SDK-Variant-Source': 'react',\n    'X-SDK-Version': storefrontApiVersion,\n    'X-Shopify-Storefront-Access-Token': accessToken,\n  };\n}\n\nconst warnings = new Set<string>();\nconst H2_PREFIX_ERROR = '[h2:error:createStorefrontClient] ';\nconst warnOnce = (string: string, type: 'warn' | 'info' = 'warn'): void => {\n  if (!warnings.has(string)) {\n    console[type](`[h2:${type}:createStorefrontClient] ` + string);\n    warnings.add(string);\n  }\n};\n\ntype OverrideTokenHeaderProps = Partial<\n  Pick<StorefrontClientProps, 'contentType'>\n>;\n\ntype StorefrontClientReturn = {\n  /**\n   * Creates the fully-qualified URL to your myshopify.com domain.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getShopifyDomain({...})`:\n   *\n   * - `storeDomain`\n   */\n  getShopifyDomain: (\n    props?: Partial<Pick<StorefrontClientProps, 'storeDomain'>>,\n  ) => string;\n  /**\n   * Creates the fully-qualified URL to your store's GraphQL endpoint.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getStorefrontApiUrl({...})`:\n   *\n   * - `storeDomain`\n   * - `storefrontApiVersion`\n   */\n  getStorefrontApiUrl: (\n    props?: Partial<\n      Pick<StorefrontClientProps, 'storeDomain' | 'storefrontApiVersion'>\n    >,\n  ) => string;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This method uses the private Server-to-Server token which reduces the chance of throttling but must not be exposed to clients. Server-side calls should prefer using this over `getPublicTokenHeaders()`.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getPrivateTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `privateStorefrontToken`\n   * - `buyerIp`\n   *\n   * Note that `contentType` defaults to what you configured in `createStorefrontClient({...})` and defaults to `'json'`, but a specific call may require using `graphql`. When using `JSON.stringify()` on the `body`, use `'json'`; otherwise, use `'graphql'`.\n   */\n  getPrivateTokenHeaders: (\n    props?: OverrideTokenHeaderProps &\n      Pick<StorefrontClientProps, 'privateStorefrontToken'> & {\n        /**\n         * The client's IP address. Passing this to the Storefront API when using a server-to-server token will help improve your store's analytics data.\n         */\n        buyerIp?: string;\n      },\n  ) => Record<string, string>;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This method uses the public token which increases the chance of throttling but also can be exposed to clients. Server-side calls should prefer using `getPublicTokenHeaders()`.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getPublicTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `publicStorefrontToken`\n   *\n   * Note that `contentType` defaults to what you configured in `createStorefrontClient({...})` and defaults to `'json'`, but a specific call may require using `graphql`. When using `JSON.stringify()` on the `body`, use `'json'`; otherwise, use `'graphql'`.\n   */\n  getPublicTokenHeaders: (\n    props?: OverrideTokenHeaderProps &\n      Pick<StorefrontClientProps, 'publicStorefrontToken'>,\n  ) => Record<string, string>;\n};\n", "import {createContext, useContext, useMemo, type ReactNode} from 'react';\nimport type {LanguageCode, CountryCode} from './storefront-api-types.js';\nimport {SFAPI_VERSION} from './storefront-api-constants.js';\nimport {getPublicTokenHeadersRaw} from './storefront-client.js';\n\nexport const defaultShopifyContext: ShopifyContextValue = {\n  storeDomain: 'test',\n  storefrontToken: 'abc123',\n  storefrontApiVersion: SFAPI_VERSION,\n  countryIsoCode: 'US',\n  languageIsoCode: 'EN',\n  getStorefrontApiUrl() {\n    return '';\n  },\n  getPublicTokenHeaders() {\n    return {};\n  },\n  getShopifyDomain() {\n    return '';\n  },\n};\n\nconst ShopifyContext = createContext<ShopifyContextValue>(\n  defaultShopifyContext,\n);\n\n/**\n * The `<ShopifyProvider/>` component enables use of the `useShop()` hook. The component should wrap your app.\n */\nexport function ShopifyProvider({\n  children,\n  ...shopifyConfig\n}: ShopifyProviderProps): JSX.Element {\n  if (\n    !shopifyConfig.countryIsoCode ||\n    !shopifyConfig.languageIsoCode ||\n    !shopifyConfig.storeDomain ||\n    !shopifyConfig.storefrontToken ||\n    !shopifyConfig.storefrontApiVersion\n  ) {\n    throw new Error(\n      `Please provide the necessary props to '<ShopifyProvider/>'`,\n    );\n  }\n\n  if (shopifyConfig.storefrontApiVersion !== SFAPI_VERSION) {\n    console.warn(\n      `<ShopifyProvider/>: This version of Hydrogen React is built for Shopify's Storefront API version ${SFAPI_VERSION}, but it looks like you're using version ${shopifyConfig.storefrontApiVersion}. There may be issues or bugs if you use a mismatched version of Hydrogen React and the Storefront API.`,\n    );\n  }\n\n  const finalConfig = useMemo<ShopifyContextValue>(() => {\n    function getShopifyDomain(overrideProps?: {storeDomain?: string}): string {\n      const domain = overrideProps?.storeDomain ?? shopifyConfig.storeDomain;\n      return domain.includes('://') ? domain : `https://${domain}`;\n    }\n\n    return {\n      ...shopifyConfig,\n      getPublicTokenHeaders(overrideProps): Record<string, string> {\n        return getPublicTokenHeadersRaw(\n          overrideProps.contentType,\n          shopifyConfig.storefrontApiVersion,\n          overrideProps.storefrontToken ?? shopifyConfig.storefrontToken,\n        );\n      },\n      getShopifyDomain,\n      getStorefrontApiUrl(overrideProps): string {\n        const finalDomainUrl = getShopifyDomain({\n          storeDomain: overrideProps?.storeDomain ?? shopifyConfig.storeDomain,\n        });\n        return `${finalDomainUrl}${\n          finalDomainUrl.endsWith('/') ? '' : '/'\n        }api/${\n          overrideProps?.storefrontApiVersion ??\n          shopifyConfig.storefrontApiVersion\n        }/graphql.json`;\n      },\n    };\n  }, [shopifyConfig]);\n\n  return (\n    <ShopifyContext.Provider value={finalConfig}>\n      {children}\n    </ShopifyContext.Provider>\n  );\n}\n\n/**\n * Provides access to the `shopifyConfig` prop of `<ShopifyProvider/>`. Must be a descendent of `<ShopifyProvider/>`.\n */\nexport function useShop(): ShopifyContextValue {\n  const shopContext = useContext(ShopifyContext);\n  if (!shopContext) {\n    throw new Error(`'useShop()' must be a descendent of <ShopifyProvider/>`);\n  }\n  return shopContext;\n}\n\nexport interface ShopifyProviderBase {\n  /** The globally-unique identifier for the Shop */\n  storefrontId?: string;\n  /** The full domain of your Shopify storefront URL (eg: the complete string of `{subdomain}.myshopify.com`). */\n  storeDomain: string;\n  /** The Storefront API public access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  storefrontToken: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen React was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details.  */\n  storefrontApiVersion: string;\n  /**\n   * The code designating a country, which generally follows ISO 3166-1 alpha-2 guidelines. If a territory doesn't have a country code value in the `CountryCode` enum, it might be considered a subdivision of another country. For example, the territories associated with Spain are represented by the country code `ES`, and the territories associated with the United States of America are represented by the country code `US`.\n   */\n  countryIsoCode: CountryCode;\n  /**\n   * `ISO 369` language codes supported by Shopify.\n   */\n  languageIsoCode: LanguageCode;\n}\n\n/**\n * Shopify-specific values that are used in various Hydrogen React components and hooks.\n */\nexport interface ShopifyProviderProps extends ShopifyProviderBase {\n  /** React children to render. */\n  children?: ReactNode;\n}\n\nexport interface ShopifyContextValue\n  extends ShopifyProviderBase,\n    ShopifyContextReturn {}\n\ntype ShopifyContextReturn = {\n  /**\n   * Creates the fully-qualified URL to your store's GraphQL endpoint.\n   *\n   * By default, it will use the config you passed in when creating `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getStorefrontApiUrl({...})`:\n   *\n   * - `storeDomain`\n   * - `storefrontApiVersion`\n   */\n  getStorefrontApiUrl: (props?: GetStorefrontApiUrlProps) => string;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This uses the public Storefront API token.\n   *\n   * By default, it will use the config you passed in when creating `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getPublicTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `storefrontToken`\n   *\n   */\n  getPublicTokenHeaders: (\n    props: GetPublicTokenHeadersProps,\n  ) => Record<string, string>;\n  /**\n   * Creates the fully-qualified URL to your myshopify.com domain.\n   *\n   * By default, it will use the config you passed in when calling `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getShopifyDomain({...})`:\n   *\n   * - `storeDomain`\n   */\n  getShopifyDomain: (props?: GetShopifyDomainProps) => string;\n};\n\ntype GetStorefrontApiUrlProps = {\n  /** The host name of the domain (eg: `{shop}.myshopify.com`). */\n  storeDomain?: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen-UI was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details. */\n  storefrontApiVersion?: string;\n};\n\ntype GetPublicTokenHeadersProps = {\n  /**\n   * Customizes which `\"content-type\"` header is added when using `getPrivateTokenHeaders()` and `getPublicTokenHeaders()`. When fetching with a `JSON.stringify()`-ed `body`, use `\"json\"`. When fetching with a `body` that is a plain string, use `\"graphql\"`. Defaults to `\"json\"`\n   */\n  contentType: 'json' | 'graphql';\n  /** The Storefront API access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  storefrontToken?: string;\n};\n\ntype GetShopifyDomainProps = {storeDomain?: string};\n", "export const CART_ID_STORAGE_KEY = 'shopifyCartId';\nexport const CART_COOKIE_TTL_DAYS = 14;\n\n// Needed for cart analytics within Shopify\nexport const SHOPIFY_STOREFRONT_ID_HEADER = 'Shopify-Storefront-Id';\nexport const SHOPIFY_STOREFRONT_Y_HEADER = 'Shopify-Storefront-Y';\nexport const SHOPIFY_STOREFRONT_S_HEADER = 'Shopify-Storefront-S';\nexport const SHOPIFY_Y = '_shopify_y';\nexport const SHOPIFY_S = '_shopify_s';\n", "// src/cookie.ts\nvar g = new Set([\n  \"domain\",\n  \"path\",\n  \"max-age\",\n  \"expires\",\n  \"samesite\",\n  \"secure\",\n  \"httponly\"\n]);\nfunction u(a) {\n  let r = {}, e, t, n = 0, m = a.split(/;\\s*/g), s, i;\n  for (; n < m.length; n++)\n    if (t = m[n], e = t.indexOf(\"=\"), ~e) {\n      if (s = t.substring(0, e++).trim(), i = t.substring(e).trim(), i[0] === '\"' && (i = i.substring(1, i.length - 1)), ~i.indexOf(\"%\"))\n        try {\n          i = decodeURIComponent(i);\n        } catch (f) {\n        }\n      g.has(t = s.toLowerCase()) ? t === \"expires\" ? r.expires = new Date(i) : t === \"max-age\" ? r.maxage = +i : r[t] = i : r[s] = i;\n    } else\n      (s = t.trim().toLowerCase()) && (s === \"httponly\" || s === \"secure\") && (r[s] = !0);\n  return r;\n}\nfunction l(a, r, e = {}) {\n  let t = a + \"=\" + encodeURIComponent(r);\n  return e.expires && (t += \"; Expires=\" + new Date(e.expires).toUTCString()), e.maxage != null && e.maxage >= 0 && (t += \"; Max-Age=\" + (e.maxage | 0)), e.domain && (t += \"; Domain=\" + e.domain), e.path && (t += \"; Path=\" + e.path), e.samesite && (t += \"; SameSite=\" + e.samesite), (e.secure || e.samesite === \"None\") && (t += \"; Secure\"), e.httponly && (t += \"; HttpOnly\"), t;\n}\nexport {\n  u as parse,\n  l as stringify\n};\n", "import {parse} from 'worktop/cookie';\nimport {ShopifyCookies} from './analytics-types.js';\nimport {SHOPIFY_Y, SHOPIFY_S} from './cart-constants.js';\n\nconst tokenHash = 'xxxx-4xxx-xxxx-xxxxxxxxxxxx';\n\nexport function buildUUID(): string {\n  let hash = '';\n\n  try {\n    const crypto: Crypto = window.crypto;\n    const randomValuesArray = new Uint16Array(31);\n    crypto.getRandomValues(randomValuesArray);\n\n    // Generate a strong UUID\n    let i = 0;\n    hash = tokenHash\n      .replace(/[x]/g, (c: string): string => {\n        const r = randomValuesArray[i] % 16;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        i++;\n        return v.toString(16);\n      })\n      .toUpperCase();\n  } catch (err) {\n    // crypto not available, generate weak UUID\n    hash = tokenHash\n      .replace(/[x]/g, (c: string): string => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      })\n      .toUpperCase();\n  }\n\n  return `${hexTime()}-${hash}`;\n}\n\nexport function hexTime(): string {\n  // 32 bit representations of new Date().getTime() and performance.now()\n  let dateNumber = 0;\n  let perfNumber = 0;\n\n  // Result of zero-fill right shift is always positive\n  dateNumber = new Date().getTime() >>> 0;\n\n  try {\n    perfNumber = performance.now() >>> 0;\n  } catch (err) {\n    perfNumber = 0;\n  }\n\n  const output = Math.abs(dateNumber + perfNumber)\n    .toString(16)\n    .toLowerCase();\n\n  // Ensure the output is exactly 8 characters\n  return output.padStart(8, '0');\n}\n\nexport function getShopifyCookies(cookies: string): ShopifyCookies {\n  const cookieData = parse(cookies);\n  return {\n    [SHOPIFY_Y]: cookieData[SHOPIFY_Y] || '',\n    [SHOPIFY_S]: cookieData[SHOPIFY_S] || '',\n  };\n}\n", "import {useMachine} from '@xstate/react/fsm';\nimport {createMachine, assign, StateMachine} from '@xstate/fsm';\nimport {\n  Cart,\n  CartMachineActionEvent,\n  CartMachineActions,\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineFetchResultEvent,\n  CartMachineTypeState,\n} from './cart-types.js';\nimport {flattenConnection} from './flatten-connection.js';\nimport {useCartActions} from './useCartActions.js';\nimport {useMemo} from 'react';\nimport {InitEvent} from '@xstate/fsm/lib/types.js';\nimport {\n  CountryCode,\n  Cart as CartType,\n  LanguageCode,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nfunction invokeCart(\n  action: keyof CartMachineActions,\n  options?: {\n    entryActions?: [keyof CartMachineActions];\n    resolveTarget?: CartMachineTypeState['value'];\n    errorTarget?: CartMachineTypeState['value'];\n    exitActions?: [keyof CartMachineActions];\n  },\n): StateMachine.Config<CartMachineContext, CartMachineEvent>['states']['on'] {\n  return {\n    entry: [\n      ...(options?.entryActions || []),\n      assign({\n        lastValidCart: (context) => context?.cart,\n      }),\n      'onCartActionEntry',\n      'onCartActionOptimisticUI',\n      action,\n    ],\n    on: {\n      RESOLVE: {\n        target: options?.resolveTarget || 'idle',\n        actions: [\n          assign({\n            prevCart: (context) => context?.lastValidCart,\n            cart: (_, event) => event?.payload?.cart,\n            rawCartResult: (_, event) => event?.payload?.rawCartResult,\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            errors: (_) => undefined,\n          }),\n        ],\n      },\n      ERROR: {\n        target: options?.errorTarget || 'error',\n        actions: [\n          assign({\n            prevCart: (context) => context?.lastValidCart,\n            cart: (context) => context?.lastValidCart,\n            errors: (_, event) => event?.payload?.errors,\n          }),\n        ],\n      },\n      CART_COMPLETED: {\n        target: 'cartCompleted',\n        actions: assign({\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          prevCart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          cart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          lastValidCart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          rawCartResult: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          errors: (_) => undefined,\n        }),\n      },\n    },\n    exit: ['onCartActionComplete', ...(options?.exitActions || [])],\n  };\n}\n\nconst INITIALIZING_CART_EVENTS: StateMachine.Machine<\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState\n>['config']['states']['uninitialized']['on'] = {\n  CART_FETCH: {\n    target: 'cartFetching',\n  },\n  CART_CREATE: {\n    target: 'cartCreating',\n  },\n  CART_SET: {\n    target: 'idle',\n    actions: [\n      assign({\n        rawCartResult: (_, event) => event.payload.cart,\n        cart: (_, event) => cartFromGraphQL(event.payload.cart),\n      }),\n    ],\n  },\n};\n\nconst UPDATING_CART_EVENTS: StateMachine.Machine<\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState\n>['config']['states']['idle']['on'] = {\n  CARTLINE_ADD: {\n    target: 'cartLineAdding',\n  },\n  CARTLINE_UPDATE: {\n    target: 'cartLineUpdating',\n  },\n  CARTLINE_REMOVE: {\n    target: 'cartLineRemoving',\n  },\n  NOTE_UPDATE: {\n    target: 'noteUpdating',\n  },\n  BUYER_IDENTITY_UPDATE: {\n    target: 'buyerIdentityUpdating',\n  },\n  CART_ATTRIBUTES_UPDATE: {\n    target: 'cartAttributesUpdating',\n  },\n  DISCOUNT_CODES_UPDATE: {\n    target: 'discountCodesUpdating',\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createCartMachine(\n  initialCart?: PartialDeep<CartType, {recurseIntoArrays: true}>,\n) {\n  return createMachine<\n    CartMachineContext,\n    CartMachineEvent,\n    CartMachineTypeState\n  >({\n    id: 'Cart',\n    initial: initialCart ? 'idle' : 'uninitialized',\n    context: {\n      cart: initialCart && cartFromGraphQL(initialCart),\n    },\n    states: {\n      uninitialized: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      cartCompleted: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      initializationError: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      idle: {\n        on: {...INITIALIZING_CART_EVENTS, ...UPDATING_CART_EVENTS},\n      },\n      error: {\n        on: {...INITIALIZING_CART_EVENTS, ...UPDATING_CART_EVENTS},\n      },\n      cartFetching: invokeCart('cartFetchAction', {\n        errorTarget: 'initializationError',\n      }),\n      cartCreating: invokeCart('cartCreateAction', {\n        errorTarget: 'initializationError',\n      }),\n      cartLineRemoving: invokeCart('cartLineRemoveAction'),\n      cartLineUpdating: invokeCart('cartLineUpdateAction'),\n      cartLineAdding: invokeCart('cartLineAddAction'),\n      noteUpdating: invokeCart('noteUpdateAction'),\n      buyerIdentityUpdating: invokeCart('buyerIdentityUpdateAction'),\n      cartAttributesUpdating: invokeCart('cartAttributesUpdateAction'),\n      discountCodesUpdating: invokeCart('discountCodesUpdateAction'),\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useCartAPIStateMachine({\n  numCartLines,\n  onCartActionEntry,\n  onCartActionOptimisticUI,\n  onCartActionComplete,\n  data: cart,\n  cartFragment,\n  countryCode,\n  languageCode,\n}: {\n  /**  Maximum number of cart lines to fetch. Defaults to 250 cart lines. */\n  numCartLines?: number;\n  /** A callback that is invoked just before a Cart API action executes. */\n  onCartActionEntry?: (\n    context: CartMachineContext,\n    event: CartMachineActionEvent,\n  ) => void;\n  /** A callback that is invoked after executing the entry actions for optimistic UI changes.  */\n  onCartActionOptimisticUI?: (\n    context: CartMachineContext,\n    event: CartMachineEvent,\n  ) => Partial<CartMachineContext>;\n  /** A callback that is invoked after a Cart API completes. */\n  onCartActionComplete?: (\n    context: CartMachineContext,\n    event: CartMachineFetchResultEvent,\n  ) => void;\n  /** An object with fields that correspond to the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart). */\n  data?: PartialDeep<CartType, {recurseIntoArrays: true}>;\n  /** A fragment used to query the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart) for all queries and mutations. A default value is used if no argument is provided. */\n  cartFragment: string;\n  /** The ISO country code for i18n. */\n  countryCode?: CountryCode;\n  /** The ISO language code for i18n. */\n  languageCode?: LanguageCode;\n}) {\n  const {\n    cartFetch,\n    cartCreate,\n    cartLineAdd,\n    cartLineUpdate,\n    cartLineRemove,\n    noteUpdate,\n    buyerIdentityUpdate,\n    cartAttributesUpdate,\n    discountCodesUpdate,\n  } = useCartActions({\n    numCartLines,\n    cartFragment,\n    countryCode,\n    languageCode,\n  });\n\n  const cartMachine = useMemo(() => createCartMachine(cart), [cart]);\n\n  const [state, send, service] = useMachine(cartMachine, {\n    actions: {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartFetchAction: async (_, event) => {\n        if (event.type !== 'CART_FETCH') return;\n\n        const {data, errors} = await cartFetch(event?.payload?.cartId);\n        const resultEvent = eventFromFetchResult(event, data?.cart, errors);\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartCreateAction: async (_, event) => {\n        if (event.type !== 'CART_CREATE') return;\n\n        const {data, errors} = await cartCreate(event?.payload);\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartCreate?.cart,\n          errors,\n        );\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineAddAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_ADD' || !context?.cart?.id) return;\n\n        const {data, errors} = await cartLineAdd(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesAdd?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineUpdateAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_UPDATE' || !context?.cart?.id) return;\n        const {data, errors} = await cartLineUpdate(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineRemoveAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_REMOVE' || !context?.cart?.id) return;\n        const {data, errors} = await cartLineRemove(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesRemove?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      noteUpdateAction: async (context, event) => {\n        if (event.type !== 'NOTE_UPDATE' || !context?.cart?.id) return;\n        const {data, errors} = await noteUpdate(\n          context.cart.id,\n          event.payload.note,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartNoteUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      buyerIdentityUpdateAction: async (context, event) => {\n        if (event.type !== 'BUYER_IDENTITY_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await buyerIdentityUpdate(\n          context.cart.id,\n          event.payload.buyerIdentity,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartBuyerIdentityUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartAttributesUpdateAction: async (context, event) => {\n        if (event.type !== 'CART_ATTRIBUTES_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await cartAttributesUpdate(\n          context.cart.id,\n          event.payload.attributes,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartAttributesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      discountCodesUpdateAction: async (context, event) => {\n        if (event.type !== 'DISCOUNT_CODES_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await discountCodesUpdate(\n          context.cart.id,\n          event.payload.discountCodes,\n        );\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartDiscountCodesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      ...(onCartActionEntry && {\n        onCartActionEntry: (context, event): void => {\n          if (isCartActionEvent(event)) {\n            onCartActionEntry(context, event);\n          }\n        },\n      }),\n      ...(onCartActionOptimisticUI && {\n        onCartActionOptimisticUI: assign((context, event) => {\n          return onCartActionOptimisticUI(context, event);\n        }),\n      }),\n      ...(onCartActionComplete && {\n        onCartActionComplete: (context, event): void => {\n          if (isCartFetchResultEvent(event)) {\n            onCartActionComplete(context, event);\n          }\n        },\n      }),\n    } as CartMachineActions,\n  });\n\n  return useMemo(() => [state, send, service] as const, [state, send, service]);\n}\n\nexport function cartFromGraphQL(\n  cart: PartialDeep<CartType, {recurseIntoArrays: true}>,\n): Cart {\n  return {\n    ...cart,\n    lines: flattenConnection(cart?.lines),\n    note: cart.note ?? undefined,\n  };\n}\n\nfunction eventFromFetchResult(\n  cartActionEvent: CartMachineActionEvent,\n  cart?: PartialDeep<CartType, {recurseIntoArrays: true}> | null,\n  errors?: unknown,\n): CartMachineFetchResultEvent {\n  if (errors) {\n    return {type: 'ERROR', payload: {errors, cartActionEvent}};\n  }\n\n  if (!cart) {\n    return {\n      type: 'CART_COMPLETED',\n      payload: {\n        cartActionEvent,\n      },\n    };\n  }\n\n  return {\n    type: 'RESOLVE',\n    payload: {\n      cart: cartFromGraphQL(cart),\n      rawCartResult: cart,\n      cartActionEvent,\n    },\n  };\n}\n\nfunction isCartActionEvent(\n  event: CartMachineEvent | InitEvent,\n): event is CartMachineActionEvent {\n  return (\n    event.type === 'CART_CREATE' ||\n    event.type === 'CARTLINE_ADD' ||\n    event.type === 'CARTLINE_UPDATE' ||\n    event.type === 'CARTLINE_REMOVE' ||\n    event.type === 'NOTE_UPDATE' ||\n    event.type === 'BUYER_IDENTITY_UPDATE' ||\n    event.type === 'CART_ATTRIBUTES_UPDATE' ||\n    event.type === 'DISCOUNT_CODES_UPDATE'\n  );\n}\n\nfunction isCartFetchResultEvent(\n  event: CartMachineEvent | InitEvent,\n): event is CartMachineFetchResultEvent {\n  return (\n    event.type === 'RESOLVE' ||\n    event.type === 'ERROR' ||\n    event.type === 'CART_COMPLETED'\n  );\n}\n", "import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useTransition,\n  createContext,\n  useContext,\n} from 'react';\nimport {\n  AttributeInput,\n  CartBuyerIdentityInput,\n  CartInput,\n  CartLineInput,\n  CartLineUpdateInput,\n  CountryCode,\n  LanguageCode,\n  Cart as CartType,\n  MutationCartNoteUpdateArgs,\n} from './storefront-api-types.js';\nimport {\n  BuyerIdentityUpdateEvent,\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState,\n  CartWithActions,\n  CartWithActionsDocs,\n} from './cart-types.js';\nimport {useCartAPIStateMachine} from './useCartAPIStateMachine.js';\nimport {CART_ID_STORAGE_KEY} from './cart-constants.js';\nimport {PartialDeep} from 'type-fest';\nimport {defaultCartFragment} from './cart-queries.js';\nimport {useShop} from './ShopifyProvider.js';\n\nexport const CartContext = createContext<CartWithActions | null>(null);\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype UseCartDocs = () => CartWithActionsDocs;\n\n/**\n * The `useCart` hook provides access to the cart object. It must be a descendent of a `CartProvider` component.\n */\nexport function useCart(): CartWithActions {\n  const context = useContext(CartContext);\n\n  if (!context) {\n    throw new Error('Expected a Cart Context, but no Cart Context was found');\n  }\n\n  return context;\n}\n\ntype CartProviderProps = {\n  /** Any `ReactNode` elements. */\n  children: React.ReactNode;\n  /**  Maximum number of cart lines to fetch. Defaults to 250 cart lines. */\n  numCartLines?: number;\n  /** A callback that is invoked when the process to create a cart begins, but before the cart is created in the Storefront API. */\n  onCreate?: () => void;\n  /** A callback that is invoked when the process to add a line item to the cart begins, but before the line item is added to the Storefront API. */\n  onLineAdd?: () => void;\n  /** A callback that is invoked when the process to remove a line item to the cart begins, but before the line item is removed from the Storefront API. */\n  onLineRemove?: () => void;\n  /** A callback that is invoked when the process to update a line item in the cart begins, but before the line item is updated in the Storefront API. */\n  onLineUpdate?: () => void;\n  /** A callback that is invoked when the process to add or update a note in the cart begins, but before the note is added or updated in the Storefront API. */\n  onNoteUpdate?: () => void;\n  /** A callback that is invoked when the process to update the buyer identity begins, but before the buyer identity is updated in the Storefront API. */\n  onBuyerIdentityUpdate?: () => void;\n  /** A callback that is invoked when the process to update the cart attributes begins, but before the attributes are updated in the Storefront API. */\n  onAttributesUpdate?: () => void;\n  /** A callback that is invoked when the process to update the cart discount codes begins, but before the discount codes are updated in the Storefront API. */\n  onDiscountCodesUpdate?: () => void;\n  /** A callback that is invoked when the process to create a cart completes */\n  onCreateComplete?: () => void;\n  /** A callback that is invoked when the process to add a line item to the cart completes */\n  onLineAddComplete?: () => void;\n  /** A callback that is invoked when the process to remove a line item to the cart completes */\n  onLineRemoveComplete?: () => void;\n  /** A callback that is invoked when the process to update a line item in the cart completes */\n  onLineUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to add or update a note in the cart completes */\n  onNoteUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the buyer identity completes */\n  onBuyerIdentityUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the cart attributes completes */\n  onAttributesUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the cart discount codes completes */\n  onDiscountCodesUpdateComplete?: () => void;\n  /** An object with fields that correspond to the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart). */\n  data?: PartialDeep<CartType, {recurseIntoArrays: true}>;\n  /** A fragment used to query the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart) for all queries and mutations. A default value is used if no argument is provided. */\n  cartFragment?: string;\n  /** A customer access token that's accessible on the server if there's a customer login. */\n  customerAccessToken?: CartBuyerIdentityInput['customerAccessToken'];\n  /** The ISO country code for i18n. */\n  countryCode?: CountryCode;\n  /** The ISO language code for i18n. */\n  languageCode?: LanguageCode;\n};\n\n/**\n * The `CartProvider` component synchronizes the state of the Storefront API Cart and a customer's cart,\n * and allows you to more easily manipulate the cart by adding, removing, and updating it.\n * It could be placed at the root of your app so that your whole app is able to use the `useCart()` hook anywhere.\n *\n * There are props that trigger when a call to the Storefront API is made, such as `onLineAdd={}` when a line is added to the cart.\n * There are also props that trigger when a call to the Storefront API is completed, such as `onLineAddComplete={}` when the fetch request for adding a line to the cart completes.\n *\n * The `CartProvider` component must be a descendant of the `ShopifyProvider` component.\n */\nexport function CartProvider({\n  children,\n  numCartLines,\n  onCreate,\n  onLineAdd,\n  onLineRemove,\n  onLineUpdate,\n  onNoteUpdate,\n  onBuyerIdentityUpdate,\n  onAttributesUpdate,\n  onDiscountCodesUpdate,\n  onCreateComplete,\n  onLineAddComplete,\n  onLineRemoveComplete,\n  onLineUpdateComplete,\n  onNoteUpdateComplete,\n  onBuyerIdentityUpdateComplete,\n  onAttributesUpdateComplete,\n  onDiscountCodesUpdateComplete,\n  data: cart,\n  cartFragment = defaultCartFragment,\n  customerAccessToken,\n  countryCode,\n  languageCode,\n}: CartProviderProps): JSX.Element {\n  const shop = useShop();\n\n  if (!shop)\n    throw new Error(\n      '<CartProvider> needs to be a descendant of <ShopifyProvider>',\n    );\n\n  countryCode = (\n    (countryCode as string) ??\n    shop.countryIsoCode ??\n    'US'\n  ).toUpperCase() as CountryCode;\n\n  languageCode = (\n    (languageCode as string) ??\n    shop.languageIsoCode ??\n    'EN'\n  ).toUpperCase() as LanguageCode;\n\n  if (countryCode) countryCode = countryCode.toUpperCase() as CountryCode;\n\n  const [prevCountryCode, setPrevCountryCode] = useState(countryCode);\n  const [prevCustomerAccessToken, setPrevCustomerAccessToken] =\n    useState(customerAccessToken);\n  const customerOverridesCountryCode = useRef(false);\n\n  if (\n    prevCountryCode !== countryCode ||\n    prevCustomerAccessToken !== customerAccessToken\n  ) {\n    setPrevCountryCode(countryCode);\n    setPrevCustomerAccessToken(customerAccessToken);\n    customerOverridesCountryCode.current = false;\n  }\n\n  const [cartState, cartSend] = useCartAPIStateMachine({\n    numCartLines,\n    data: cart,\n    cartFragment,\n    countryCode,\n    languageCode,\n    onCartActionEntry(_, event) {\n      try {\n        switch (event.type) {\n          case 'CART_CREATE':\n            return onCreate?.();\n          case 'CARTLINE_ADD':\n            return onLineAdd?.();\n          case 'CARTLINE_REMOVE':\n            return onLineRemove?.();\n          case 'CARTLINE_UPDATE':\n            return onLineUpdate?.();\n          case 'NOTE_UPDATE':\n            return onNoteUpdate?.();\n          case 'BUYER_IDENTITY_UPDATE':\n            return onBuyerIdentityUpdate?.();\n          case 'CART_ATTRIBUTES_UPDATE':\n            return onAttributesUpdate?.();\n          case 'DISCOUNT_CODES_UPDATE':\n            return onDiscountCodesUpdate?.();\n        }\n      } catch (error) {\n        console.error('Cart entry action failed', error);\n      }\n    },\n    onCartActionOptimisticUI(context, event) {\n      if (!context.cart) return {...context};\n      switch (event.type) {\n        case 'CARTLINE_REMOVE':\n          return {\n            ...context,\n            cart: {\n              ...context.cart,\n              lines: context?.cart?.lines?.filter(\n                (line) => line?.id && !event.payload.lines.includes(line?.id),\n              ),\n            },\n          };\n        case 'CARTLINE_UPDATE':\n          return {\n            ...context,\n            cart: {\n              ...context.cart,\n              lines: context?.cart?.lines?.map((line) => {\n                const updatedLine = event.payload.lines.find(\n                  ({id}) => id === line?.id,\n                );\n\n                if (updatedLine && updatedLine.quantity) {\n                  return {\n                    ...line,\n                    quantity: updatedLine.quantity,\n                  };\n                }\n\n                return line;\n              }),\n            },\n          };\n      }\n      return {...context};\n    },\n    onCartActionComplete(context, event) {\n      const cartActionEvent = event.payload.cartActionEvent;\n      try {\n        switch (event.type) {\n          case 'RESOLVE':\n            switch (cartActionEvent.type) {\n              case 'CART_CREATE':\n                return onCreateComplete?.();\n              case 'CARTLINE_ADD':\n                return onLineAddComplete?.();\n              case 'CARTLINE_REMOVE':\n                return onLineRemoveComplete?.();\n              case 'CARTLINE_UPDATE':\n                return onLineUpdateComplete?.();\n              case 'NOTE_UPDATE':\n                return onNoteUpdateComplete?.();\n              case 'BUYER_IDENTITY_UPDATE':\n                if (countryCodeNotUpdated(context, cartActionEvent)) {\n                  customerOverridesCountryCode.current = true;\n                }\n                return onBuyerIdentityUpdateComplete?.();\n              case 'CART_ATTRIBUTES_UPDATE':\n                return onAttributesUpdateComplete?.();\n              case 'DISCOUNT_CODES_UPDATE':\n                return onDiscountCodesUpdateComplete?.();\n            }\n        }\n      } catch (error) {\n        console.error('onCartActionComplete failed', error);\n      }\n    },\n  });\n\n  const cartReady = useRef(false);\n  const [isCartReady, setIsCartReady] = useState(false);\n  const cartCompleted = cartState.matches('cartCompleted');\n\n  const countryChanged =\n    (cartState.value === 'idle' ||\n      cartState.value === 'error' ||\n      cartState.value === 'cartCompleted') &&\n    countryCode !== cartState?.context?.cart?.buyerIdentity?.countryCode &&\n    !cartState.context.errors;\n\n  const fetchingFromStorage = useRef(false);\n\n  /**\n   * Initializes cart with priority in this order:\n   * 1. cart props\n   * 2. localStorage cartId\n   */\n  useEffect(() => {\n    if (!cartReady.current && !fetchingFromStorage.current) {\n      if (!cart && storageAvailable('localStorage')) {\n        fetchingFromStorage.current = true;\n        try {\n          const cartId = window.localStorage.getItem(CART_ID_STORAGE_KEY);\n          if (cartId) {\n            cartSend({type: 'CART_FETCH', payload: {cartId}});\n          }\n        } catch (error) {\n          console.warn('error fetching cartId');\n          console.warn(error);\n        }\n      }\n      cartReady.current = true;\n      // Providing a separate cart ready state variable to avoid re-renders in this logic while still being able to pass the reactive status through context.\n      setIsCartReady(true);\n    }\n  }, [cart, cartReady, cartSend]);\n\n  // Update cart country code if cart and props countryCode's as different\n  useEffect(() => {\n    if (!countryChanged || customerOverridesCountryCode.current) return;\n    cartSend({\n      type: 'BUYER_IDENTITY_UPDATE',\n      payload: {buyerIdentity: {countryCode, customerAccessToken}},\n    });\n  }, [\n    countryCode,\n    customerAccessToken,\n    countryChanged,\n    customerOverridesCountryCode,\n    cartSend,\n  ]);\n\n  // send cart events when ready\n  const onCartReadySend = useCallback(\n    (cartEvent: CartMachineEvent) => {\n      if (!cartReady.current) {\n        return console.warn(\"Cart isn't ready yet\");\n      }\n      cartSend(cartEvent);\n    },\n    [cartSend],\n  );\n\n  // save cart id to local storage\n  useEffect(() => {\n    if (cartState?.context?.cart?.id && storageAvailable('localStorage')) {\n      try {\n        window.localStorage.setItem(\n          CART_ID_STORAGE_KEY,\n          cartState.context.cart?.id,\n        );\n      } catch (error) {\n        console.warn('Failed to save cartId to localStorage', error);\n      }\n    }\n  }, [cartState?.context?.cart?.id]);\n\n  // delete cart from local storage if cart fetched has been completed\n  useEffect(() => {\n    if (cartCompleted && storageAvailable('localStorage')) {\n      try {\n        window.localStorage.removeItem(CART_ID_STORAGE_KEY);\n      } catch (error) {\n        console.warn('Failed to delete cartId from localStorage', error);\n      }\n    }\n  }, [cartCompleted]);\n\n  const cartCreate = useCallback(\n    (cartInput: CartInput) => {\n      if (countryCode && !cartInput.buyerIdentity?.countryCode) {\n        if (cartInput.buyerIdentity == null) {\n          cartInput.buyerIdentity = {};\n        }\n        cartInput.buyerIdentity.countryCode = countryCode;\n      }\n\n      if (\n        customerAccessToken &&\n        !cartInput.buyerIdentity?.customerAccessToken\n      ) {\n        if (cartInput.buyerIdentity == null) {\n          cartInput.buyerIdentity = {};\n        }\n        cartInput.buyerIdentity.customerAccessToken = customerAccessToken;\n      }\n      onCartReadySend({\n        type: 'CART_CREATE',\n        payload: cartInput,\n      });\n    },\n    [countryCode, customerAccessToken, onCartReadySend],\n  );\n\n  // Delays the cart state in the context if the page is hydrating\n  // preventing suspense boundary errors.\n  const cartDisplayState = useDelayedStateUntilHydration(cartState);\n\n  const cartContextValue = useMemo<CartWithActions>(() => {\n    return {\n      ...(cartDisplayState?.context?.cart ?? {lines: [], attributes: []}),\n      status: transposeStatus(cartDisplayState.value),\n      error: cartDisplayState?.context?.errors,\n      totalQuantity: cartDisplayState?.context?.cart?.totalQuantity ?? 0,\n      cartCreate,\n      cartReady: isCartReady,\n      linesAdd(lines: CartLineInput[]): void {\n        if (cartDisplayState?.context?.cart?.id) {\n          onCartReadySend({\n            type: 'CARTLINE_ADD',\n            payload: {lines},\n          });\n        } else {\n          cartCreate({lines});\n        }\n      },\n      linesRemove(lines: string[]): void {\n        onCartReadySend({\n          type: 'CARTLINE_REMOVE',\n          payload: {\n            lines,\n          },\n        });\n      },\n      linesUpdate(lines: CartLineUpdateInput[]): void {\n        onCartReadySend({\n          type: 'CARTLINE_UPDATE',\n          payload: {\n            lines,\n          },\n        });\n      },\n      noteUpdate(note: MutationCartNoteUpdateArgs['note']): void {\n        onCartReadySend({\n          type: 'NOTE_UPDATE',\n          payload: {\n            note,\n          },\n        });\n      },\n      buyerIdentityUpdate(buyerIdentity: CartBuyerIdentityInput): void {\n        onCartReadySend({\n          type: 'BUYER_IDENTITY_UPDATE',\n          payload: {\n            buyerIdentity,\n          },\n        });\n      },\n      cartAttributesUpdate(attributes: AttributeInput[]): void {\n        onCartReadySend({\n          type: 'CART_ATTRIBUTES_UPDATE',\n          payload: {\n            attributes,\n          },\n        });\n      },\n      discountCodesUpdate(discountCodes: string[]): void {\n        onCartReadySend({\n          type: 'DISCOUNT_CODES_UPDATE',\n          payload: {\n            discountCodes,\n          },\n        });\n      },\n      cartFragment,\n    };\n  }, [\n    cartCreate,\n    isCartReady,\n    cartDisplayState?.context?.cart,\n    cartDisplayState?.context?.errors,\n    cartDisplayState.value,\n    cartFragment,\n    onCartReadySend,\n  ]);\n\n  return (\n    <CartContext.Provider value={cartContextValue}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nfunction transposeStatus(\n  status: CartMachineTypeState['value'],\n): CartWithActions['status'] {\n  switch (status) {\n    case 'uninitialized':\n    case 'initializationError':\n      return 'uninitialized';\n    case 'idle':\n    case 'cartCompleted':\n    case 'error':\n      return 'idle';\n    case 'cartFetching':\n      return 'fetching';\n    case 'cartCreating':\n      return 'creating';\n    case 'cartLineAdding':\n    case 'cartLineRemoving':\n    case 'cartLineUpdating':\n    case 'noteUpdating':\n    case 'buyerIdentityUpdating':\n    case 'cartAttributesUpdating':\n    case 'discountCodesUpdating':\n      return 'updating';\n  }\n}\n\n/**\n * Delays a state update until hydration finishes. Useful for preventing suspense boundaries errors when updating a context\n * @remarks this uses startTransition and waits for it to finish.\n */\nfunction useDelayedStateUntilHydration<T>(state: T): T {\n  const [isPending, startTransition] = useTransition();\n  const [delayedState, setDelayedState] = useState(state);\n\n  const firstTimePending = useRef(false);\n  if (isPending) {\n    firstTimePending.current = true;\n  }\n\n  const firstTimePendingFinished = useRef(false);\n  if (!isPending && firstTimePending.current) {\n    firstTimePendingFinished.current = true;\n  }\n\n  useEffect(() => {\n    startTransition(() => {\n      if (!firstTimePendingFinished.current) {\n        setDelayedState(state);\n      }\n    });\n  }, [state]);\n\n  const displayState = firstTimePendingFinished.current ? state : delayedState;\n\n  return displayState;\n}\n\n/**\n * Check for storage availability function obtained from\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n */\nexport function storageAvailable(\n  type: 'localStorage' | 'sessionStorage',\n): boolean {\n  let storage;\n  try {\n    storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return !!(\n      e instanceof DOMException &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nfunction countryCodeNotUpdated(\n  context: CartMachineContext,\n  event: BuyerIdentityUpdateEvent,\n): boolean {\n  return !!(\n    event.payload.buyerIdentity.countryCode &&\n    context.cart?.buyerIdentity?.countryCode !==\n      event.payload.buyerIdentity.countryCode\n  );\n}\n", "import {\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n  createContext,\n  useContext,\n} from 'react';\nimport type {\n  SelectedOption as SelectedOptionType,\n  SellingPlan,\n  SellingPlanAllocation,\n  Product,\n  ProductVariant as ProductVariantType,\n  ProductVariantConnection,\n  SellingPlan as SellingPlanType,\n  SellingPlanAllocation as SellingPlanAllocationType,\n  SellingPlanGroup as SellingPlanGroupType,\n  SellingPlanGroupConnection,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\n\nconst ProductOptionsContext = createContext<ProductHookValue | null>(null);\n\ntype InitialVariantId = ProductVariantType['id'] | null;\n\ninterface ProductProviderProps {\n  /** A Storefront API [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** A `ReactNode` element. */\n  children: React.ReactNode;\n  /**\n   * The initially selected variant.\n   * The following logic applies to `initialVariantId`:\n   * 1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n   * 2. If `initialVariantId` is provided but is `null`, then no variant is used.\n   * 3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n   * 4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.\n   */\n  initialVariantId?: InitialVariantId;\n}\n\n/**\n * `<ProductProvider />` is a context provider that enables use of the `useProduct()` hook.\n *\n * It helps manage selected options and variants for a product.\n */\nexport function ProductProvider({\n  children,\n  data: product,\n  initialVariantId: explicitVariantId,\n}: ProductProviderProps): JSX.Element {\n  // The flattened variants\n  const variants = useMemo(\n    () => flattenConnection(product.variants ?? {}),\n    [product.variants],\n  );\n\n  if (!isProductVariantArray(variants)) {\n    throw new Error(\n      `<ProductProvider/> requires 'product.variants.nodes' or 'product.variants.edges'`,\n    );\n  }\n\n  // All the options available for a product, based on all the variants\n  const options = useMemo(() => getOptions(variants), [variants]);\n\n  /**\n   * Track the selectedVariant within the provider.\n   */\n  const [selectedVariant, setSelectedVariant] = useState<\n    | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n    | undefined\n    | null\n  >(() => getVariantBasedOnIdProp(explicitVariantId, variants));\n\n  /**\n   * Track the selectedOptions within the provider. If a `initialVariantId`\n   * is passed, use that to select initial options.\n   */\n  const [selectedOptions, setSelectedOptions] = useState<SelectedOptions>(() =>\n    getSelectedOptions(selectedVariant),\n  );\n\n  /**\n   * When the initialVariantId changes, we need to make sure we\n   * update the selected variant and selected options. If not,\n   * then the selected variant and options will reference incorrect\n   * values.\n   */\n  useEffect(() => {\n    const newSelectedVariant = getVariantBasedOnIdProp(\n      explicitVariantId,\n      variants,\n    );\n    setSelectedVariant(newSelectedVariant);\n    setSelectedOptions(getSelectedOptions(newSelectedVariant));\n  }, [explicitVariantId, variants]);\n\n  /**\n   * Allow the developer to select an option.\n   */\n  const setSelectedOption = useCallback(\n    (name: string, value: string) => {\n      setSelectedOptions((selectedOptions) => {\n        const opts = {...selectedOptions, [name]: value};\n        setSelectedVariant(getSelectedVariant(variants, opts));\n        return opts;\n      });\n    },\n    [setSelectedOptions, variants],\n  );\n\n  const isOptionInStock = useCallback(\n    (option: string, value: string) => {\n      const proposedVariant = getSelectedVariant(variants, {\n        ...selectedOptions,\n        ...{[option]: value},\n      });\n\n      return proposedVariant?.availableForSale ?? true;\n    },\n    [selectedOptions, variants],\n  );\n\n  const sellingPlanGroups = useMemo(\n    () =>\n      flattenConnection(product.sellingPlanGroups ?? {}).map(\n        (sellingPlanGroup) => ({\n          ...sellingPlanGroup,\n          sellingPlans: flattenConnection(sellingPlanGroup?.sellingPlans ?? {}),\n        }),\n      ),\n    [product.sellingPlanGroups],\n  );\n\n  /**\n   * Track the selectedSellingPlan within the hook. If `initialSellingPlanId`\n   * is passed, use that as an initial value. Look it up from the `selectedVariant`, since\n   * that is also a requirement.\n   */\n  const [selectedSellingPlan, setSelectedSellingPlan] = useState<\n    PartialDeep<SellingPlan, {recurseIntoArrays: true}> | undefined\n  >(undefined);\n\n  const selectedSellingPlanAllocation = useMemo<\n    PartialDeep<SellingPlanAllocation, {recurseIntoArrays: true}> | undefined\n  >(() => {\n    if (!selectedVariant || !selectedSellingPlan) {\n      return;\n    }\n\n    if (\n      !selectedVariant.sellingPlanAllocations?.nodes &&\n      !selectedVariant.sellingPlanAllocations?.edges\n    ) {\n      throw new Error(\n        `<ProductProvider/>: You must include 'sellingPlanAllocations.nodes' or 'sellingPlanAllocations.edges' in your variants in order to calculate selectedSellingPlanAllocation`,\n      );\n    }\n\n    return flattenConnection(selectedVariant.sellingPlanAllocations).find(\n      (allocation) => allocation?.sellingPlan?.id === selectedSellingPlan.id,\n    );\n  }, [selectedVariant, selectedSellingPlan]);\n\n  const value = useMemo<ProductHookValue>(\n    () => ({\n      product,\n      variants,\n      variantsConnection: product.variants,\n      options,\n      selectedVariant,\n      setSelectedVariant,\n      selectedOptions,\n      setSelectedOption,\n      setSelectedOptions,\n      isOptionInStock,\n      selectedSellingPlan,\n      setSelectedSellingPlan,\n      selectedSellingPlanAllocation,\n      sellingPlanGroups,\n      sellingPlanGroupsConnection: product.sellingPlanGroups,\n    }),\n    [\n      product,\n      isOptionInStock,\n      options,\n      selectedOptions,\n      selectedSellingPlan,\n      selectedSellingPlanAllocation,\n      selectedVariant,\n      sellingPlanGroups,\n      setSelectedOption,\n      variants,\n    ],\n  );\n\n  return (\n    <ProductOptionsContext.Provider value={value}>\n      {children}\n    </ProductOptionsContext.Provider>\n  );\n}\n\n/**\n * Provides access to the context value provided by `<ProductProvider />`. Must be a descendent of `<ProductProvider />`.\n */\nexport function useProduct(): ProductHookValue {\n  const context = useContext(ProductOptionsContext);\n\n  if (!context) {\n    throw new Error(`'useProduct' must be a child of <ProductProvider />`);\n  }\n\n  return context;\n}\n\nfunction getSelectedVariant(\n  variants: PartialDeep<ProductVariantType, {recurseIntoArrays: true}>[],\n  choices: SelectedOptions,\n): PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined {\n  /**\n   * Ensure the user has selected all the required options, not just some.\n   */\n  if (\n    !variants.length ||\n    variants?.[0]?.selectedOptions?.length !== Object.keys(choices).length\n  ) {\n    return;\n  }\n\n  return variants?.find((variant) => {\n    return Object.entries(choices).every(([name, value]) => {\n      return variant?.selectedOptions?.some(\n        (option) => option?.name === name && option?.value === value,\n      );\n    });\n  });\n}\n\nfunction getOptions(\n  variants: PartialDeep<ProductVariantType, {recurseIntoArrays: true}>[],\n): OptionWithValues[] {\n  const map = variants.reduce((memo, variant) => {\n    if (!variant.selectedOptions) {\n      throw new Error(`'getOptions' requires 'variant.selectedOptions'`);\n    }\n    variant?.selectedOptions?.forEach((opt) => {\n      memo[opt?.name ?? ''] = memo[opt?.name ?? ''] || new Set();\n      memo[opt?.name ?? ''].add(opt?.value ?? '');\n    });\n\n    return memo;\n  }, {} as Record<string, Set<string>>);\n\n  return Object.keys(map).map((option) => {\n    return {\n      name: option,\n      values: Array.from(map[option]),\n    };\n  });\n}\n\nfunction getVariantBasedOnIdProp(\n  explicitVariantId: InitialVariantId | undefined,\n  variants: Array<\n    PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined\n  >,\n):\n  | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n  | undefined\n  | null {\n  // get the initial variant based on the logic outlined in the comments for 'initialVariantId' above\n  // * 1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n  if (explicitVariantId) {\n    const foundVariant = variants.find(\n      (variant) => variant?.id === explicitVariantId,\n    );\n    if (!foundVariant) {\n      console.warn(\n        `<ProductProvider/> received a 'initialVariantId' prop, but could not actually find a variant with that ID`,\n      );\n    }\n    return foundVariant;\n  }\n  // * 2. If `initialVariantId` is provided but is `null`, then no variant is used.\n  if (explicitVariantId === null) {\n    return null;\n  }\n  // * 3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n  // * 4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.\n  if (explicitVariantId === undefined) {\n    return variants.find((variant) => variant?.availableForSale) || variants[0];\n  }\n}\n\nfunction getSelectedOptions(\n  selectedVariant:\n    | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n    | undefined\n    | null,\n): SelectedOptions {\n  return selectedVariant?.selectedOptions\n    ? selectedVariant.selectedOptions.reduce<SelectedOptions>(\n        (memo, optionSet) => {\n          memo[optionSet?.name ?? ''] = optionSet?.value ?? '';\n          return memo;\n        },\n        {},\n      )\n    : {};\n}\n\nfunction isProductVariantArray(\n  maybeVariantArray:\n    | (PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined)[]\n    | undefined,\n): maybeVariantArray is PartialDeep<\n  ProductVariantType,\n  {recurseIntoArrays: true}\n>[] {\n  if (!maybeVariantArray || !Array.isArray(maybeVariantArray)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport interface OptionWithValues {\n  name: SelectedOptionType['name'];\n  values: SelectedOptionType['value'][];\n}\n\ntype UseProductObjects = {\n  /** The raw product from the Storefront API */\n  product: Product;\n  /** An array of the variant `nodes` from the `VariantConnection`. */\n  variants: ProductVariantType[];\n  variantsConnection?: ProductVariantConnection;\n  /** An array of the product's options and values. */\n  options: OptionWithValues[];\n  /** The selected variant. */\n  selectedVariant?: ProductVariantType | null;\n  selectedOptions: SelectedOptions;\n  /** The selected selling plan. */\n  selectedSellingPlan?: SellingPlanType;\n  /** The selected selling plan allocation. */\n  selectedSellingPlanAllocation?: SellingPlanAllocationType;\n  /** The selling plan groups. */\n  sellingPlanGroups?: (Omit<SellingPlanGroupType, 'sellingPlans'> & {\n    sellingPlans: SellingPlanType[];\n  })[];\n  sellingPlanGroupsConnection?: SellingPlanGroupConnection;\n};\n\ntype UseProductFunctions = {\n  /** A callback to set the selected variant to the variant passed as an argument. */\n  setSelectedVariant: (\n    variant: PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | null,\n  ) => void;\n  /** A callback to set the selected option. */\n  setSelectedOption: (\n    name: SelectedOptionType['name'],\n    value: SelectedOptionType['value'],\n  ) => void;\n  /** A callback to set multiple selected options at once. */\n  setSelectedOptions: (options: SelectedOptions) => void;\n  /** A callback to set the selected selling plan to the one passed as an argument. */\n  setSelectedSellingPlan: (\n    sellingPlan: PartialDeep<SellingPlanType, {recurseIntoArrays: true}>,\n  ) => void;\n  /** A callback that returns a boolean indicating if the option is in stock. */\n  isOptionInStock: (\n    name: SelectedOptionType['name'],\n    value: SelectedOptionType['value'],\n  ) => boolean;\n};\n\ntype ProductHookValue = PartialDeep<\n  UseProductObjects,\n  {recurseIntoArrays: true}\n> &\n  UseProductFunctions;\n\nexport type SelectedOptions = {\n  [key: string]: string;\n};\n", "export const AnalyticsEventName = {\n  PAGE_VIEW: 'PAGE_VIEW',\n  ADD_TO_CART: 'ADD_TO_CART',\n  PAGE_VIEW_2: 'PAGE_VIEW_2',\n  COLLECTION_VIEW: 'COLLECTION_VIEW',\n  PRODUCT_VIEW: 'PRODUCT_VIEW',\n  SEARCH_VIEW: 'SEARCH_VIEW',\n} as const;\n\nexport const AnalyticsPageType: AnalyticsPageType = {\n  article: 'article',\n  blog: 'blog',\n  captcha: 'captcha',\n  cart: 'cart',\n  collection: 'collection',\n  customersAccount: 'customers/account',\n  customersActivateAccount: 'customers/activate_account',\n  customersAddresses: 'customers/addresses',\n  customersLogin: 'customers/login',\n  customersOrder: 'customers/order',\n  customersRegister: 'customers/register',\n  customersResetPassword: 'customers/reset_password',\n  giftCard: 'gift_card',\n  home: 'index',\n  listCollections: 'list-collections',\n  forbidden: '403',\n  notFound: '404',\n  page: 'page',\n  password: 'password',\n  product: 'product',\n  policy: 'policy',\n  search: 'search',\n} as const;\n\nexport const ShopifySalesChannel: ShopifySalesChannel = {\n  hydrogen: 'hydrogen',\n  headless: 'headless',\n} as const;\n\nexport const ShopifyAppId = {\n  hydrogen: '6167201',\n  headless: '12875497473',\n} as const;\n\n/**\n * These duplicated interface declaration is so that we can generate proper documentation\n * for these public facing constants\n */\nexport interface AnalyticsEventName {\n  /** Page view */\n  PAGE_VIEW: 'PAGE_VIEW';\n  /** Add to cart */\n  ADD_TO_CART: 'ADD_TO_CART';\n}\n\nexport interface AnalyticsPageType {\n  article: 'article';\n  blog: 'blog';\n  captcha: 'captcha';\n  cart: 'cart';\n  collection: 'collection';\n  customersAccount: 'customers/account';\n  customersActivateAccount: 'customers/activate_account';\n  customersAddresses: 'customers/addresses';\n  customersLogin: 'customers/login';\n  customersOrder: 'customers/order';\n  customersRegister: 'customers/register';\n  customersResetPassword: 'customers/reset_password';\n  giftCard: 'gift_card';\n  home: 'index';\n  listCollections: 'list-collections';\n  forbidden: '403';\n  notFound: '404';\n  page: 'page';\n  password: 'password';\n  product: 'product';\n  policy: 'policy';\n  search: 'search';\n}\n\nexport interface ShopifySalesChannel {\n  /** Shopify Hydrogen sales channel */\n  hydrogen: 'hydrogen';\n  /** Shopify Headless sales channel */\n  headless: 'headless';\n}\n", "import type {\n  ShopifyMonorailPayload,\n  ShopifyMonorailEvent,\n  ShopifyGid,\n} from './analytics-types.js';\n\n/**\n * Builds a Shopify Monorail event from a Shopify Monorail payload and a schema ID.\n * @param payload - The Monorail payload\n * @param schemaId - The schema ID to use\n * @returns The formatted payload\n **/\nexport function schemaWrapper(\n  schemaId: string,\n  payload: ShopifyMonorailPayload,\n): ShopifyMonorailEvent {\n  return {\n    schema_id: schemaId,\n    payload,\n    metadata: {\n      event_created_at_ms: Date.now(),\n    },\n  };\n}\n\n/**\n * Parses global id (gid) and returns the resource type and id.\n * @see https://shopify.dev/api/usage/gids\n * @param gid - A shopify GID (string)\n *\n * @example\n * ```ts\n * const {id, resource} = parseGid('gid://shopify/Order/123')\n * // => id = \"123\", resource = 'Order'\n *\n *  * const {id, resource} = parseGid('gid://shopify/Cart/abc123')\n * // => id = \"abc123\", resource = 'Cart'\n * ```\n **/\nexport function parseGid(gid: string | undefined): ShopifyGid {\n  const defaultReturn: ShopifyGid = {\n    id: '',\n    resource: null,\n    resourceId: null,\n    search: '',\n    searchParams: new URLSearchParams(),\n    hash: '',\n  };\n\n  if (typeof gid !== 'string') {\n    return defaultReturn;\n  }\n\n  try {\n    const {search, searchParams, pathname, hash} = new URL(gid);\n    const pathnameParts = pathname.split('/');\n    const lastPathnamePart = pathnameParts[pathnameParts.length - 1];\n    const resourcePart = pathnameParts[pathnameParts.length - 2];\n\n    if (!lastPathnamePart || !resourcePart) {\n      return defaultReturn;\n    }\n\n    const id = `${lastPathnamePart}${search}${hash}` || '';\n    const resourceId = lastPathnamePart || null;\n    const resource = resourcePart ?? null;\n\n    return {id, resource, resourceId, search, searchParams, hash};\n  } catch {\n    return defaultReturn;\n  }\n}\n\n/**\n * Filters properties from an object and returns a new object with only the properties that have a truthy value.\n * @param keyValuePairs - An object of key-value pairs\n * @param formattedData - An object which will hold the truthy values\n * @returns The formatted object\n **/\nexport function addDataIf(\n  keyValuePairs: ShopifyMonorailPayload,\n  formattedData: ShopifyMonorailPayload,\n): ShopifyMonorailPayload {\n  if (typeof keyValuePairs !== 'object') {\n    return {};\n  }\n  Object.entries(keyValuePairs).forEach(([key, value]) => {\n    if (value) {\n      formattedData[key] = value;\n    }\n  });\n  return formattedData;\n}\n\n/**\n * Utility that errors if a function is called on the server.\n * @param fnName - The name of the function\n * @returns A boolean\n **/\nexport function errorIfServer(fnName: string): boolean {\n  if (typeof document === 'undefined') {\n    console.error(\n      `${fnName} should only be used within the useEffect callback or event handlers`,\n    );\n    return true;\n  }\n  return false;\n}\n", "import {\n  ShopifyPageViewPayload,\n  ShopifyMonorailPayload,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {ShopifyAppId} from './analytics-constants.js';\nimport {addDataIf, schemaWrapper, parseGid} from './analytics-utils.js';\nimport {buildUUID} from './cookies-utils.js';\n\nconst SCHEMA_ID = 'trekkie_storefront_page_view/1.4';\nconst OXYGEN_DOMAIN = 'myshopify.dev';\n\nexport function pageView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const {id, resource} = parseGid(pageViewPayload.resourceId);\n  const resourceType = resource ? resource.toLowerCase() : undefined;\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          pageType: pageViewPayload.pageType,\n          customerId: parseInt(parseGid(pageViewPayload.customerId).id || '0'),\n          resourceType,\n          resourceId: parseInt(id),\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\nfunction formatPayload(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailPayload {\n  return {\n    appClientId: payload.shopifySalesChannel\n      ? ShopifyAppId[payload.shopifySalesChannel]\n      : ShopifyAppId.headless,\n    isMerchantRequest: isMerchantRequest(payload.url),\n    hydrogenSubchannelId:\n      payload.storefrontId || payload.hydrogenSubchannelId || '0',\n\n    isPersistentCookie: payload.hasUserConsent,\n    uniqToken: payload.uniqueToken,\n    visitToken: payload.visitToken,\n    microSessionId: buildUUID(),\n    microSessionCount: 1,\n\n    url: payload.url,\n    path: payload.path,\n    search: payload.search,\n    referrer: payload.referrer,\n    title: payload.title,\n\n    shopId: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency,\n    contentLanguage: payload.acceptedLanguage || 'en',\n  };\n}\n\nfunction isMerchantRequest(url: string): boolean {\n  if (typeof url !== 'string') {\n    return false;\n  }\n  const hostname = new URL(url).hostname;\n  if (hostname.indexOf(OXYGEN_DOMAIN) !== -1 || hostname === 'localhost') {\n    return true;\n  }\n  return false;\n}\n", "const version = \"2024.10.1\";\nexport {\n  version\n};\n//# sourceMappingURL=package.json.mjs.map\n", "import {\n  ShopifyAnalyticsPayload,\n  ShopifyPageViewPayload,\n  ShopifyAddToCartPayload,\n  ShopifyMonorailPayload,\n  ShopifyAnalyticsProduct,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsPageType, ShopifySalesChannel} from './analytics-constants.js';\nimport {addDataIf, schemaWrapper, parseGid} from './analytics-utils.js';\nimport {buildUUID} from './cookies-utils.js';\nimport {version} from '../package.json';\n\nconst SCHEMA_ID = 'custom_storefront_customer_tracking/1.2';\nconst PAGE_RENDERED_EVENT_NAME = 'page_rendered';\nconst COLLECTION_PAGE_RENDERED_EVENT_NAME = 'collection_page_rendered';\nconst PRODUCT_PAGE_RENDERED_EVENT_NAME = 'product_page_rendered';\nconst PRODUCT_ADDED_TO_CART_EVENT_NAME = 'product_added_to_cart';\nconst SEARCH_SUBMITTED_EVENT_NAME = 'search_submitted';\n\nfunction prepareAdditionalPayload(\n  payload: ShopifyPageViewPayload,\n): Pick<ShopifyMonorailPayload, 'canonical_url' | 'customer_id'> {\n  return {\n    canonical_url: payload.canonicalUrl || payload.url,\n    customer_id: parseInt(parseGid(payload.customerId).id || '0'),\n  };\n}\n\n// Send the page view event to the Monorail server.\n// It also sends additional page view events based on the page type.\nexport function pageView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  const pageType = pageViewPayload.pageType;\n  const pageViewEvents = [];\n\n  pageViewEvents.push(\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  );\n\n  switch (pageType) {\n    case AnalyticsPageType.collection:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              collection_name: pageViewPayload.collectionHandle,\n              collection_id: parseInt(\n                parseGid(pageViewPayload.collectionId).id,\n              ),\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.product:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              products: formatProductPayload(pageViewPayload.products),\n              total_value: pageViewPayload.totalValue,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.search:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: SEARCH_SUBMITTED_EVENT_NAME,\n              ...additionalPayload,\n              search_string: pageViewPayload.searchString,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n  }\n\n  return pageViewEvents;\n}\n\n// Sends page view event to the Monorail server.\nexport function pageView2(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends collection view event to the Monorail server.\nexport function collectionView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n          collection_name: pageViewPayload.collectionHandle,\n          collection_id: parseInt(parseGid(pageViewPayload.collectionId).id),\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends product view event to the Monorail server.\nexport function productView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n          products: formatProductPayload(pageViewPayload.products),\n          total_value: pageViewPayload.totalValue,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends search view event to the Monorail server.\nexport function searchView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: SEARCH_SUBMITTED_EVENT_NAME,\n          ...additionalPayload,\n          search_string: pageViewPayload.searchString,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\nexport function addToCart(\n  payload: ShopifyAddToCartPayload,\n): ShopifyMonorailEvent[] {\n  const addToCartPayload = payload;\n  const cartToken = parseGid(addToCartPayload.cartId);\n  const cart_token = cartToken?.id ? `${cartToken.id}` : null;\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PRODUCT_ADDED_TO_CART_EVENT_NAME,\n          customerId: addToCartPayload.customerId,\n          cart_token,\n          total_value: addToCartPayload.totalValue,\n          products: formatProductPayload(addToCartPayload.products),\n          customer_id: parseInt(\n            parseGid(addToCartPayload.customerId).id || '0',\n          ),\n        },\n        formatPayload(addToCartPayload),\n      ),\n    ),\n  ];\n}\n\nfunction formatPayload(\n  payload: ShopifyAnalyticsPayload,\n): ShopifyMonorailPayload {\n  return {\n    source: payload.shopifySalesChannel || ShopifySalesChannel.headless,\n    asset_version_id: payload.assetVersionId || version,\n    hydrogenSubchannelId:\n      payload.storefrontId || payload.hydrogenSubchannelId || '0',\n\n    is_persistent_cookie: payload.hasUserConsent,\n    deprecated_visit_token: payload.visitToken,\n    unique_token: payload.uniqueToken,\n    event_time: Date.now(),\n    event_id: buildUUID(),\n\n    event_source_url: payload.url,\n    referrer: payload.referrer,\n    user_agent: payload.userAgent,\n    navigation_type: payload.navigationType,\n    navigation_api: payload.navigationApi,\n\n    shop_id: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency,\n\n    ccpa_enforced: payload.ccpaEnforced || false,\n    gdpr_enforced: payload.gdprEnforced || false,\n    gdpr_enforced_as_string: payload.gdprEnforced ? 'true' : 'false',\n    analytics_allowed: payload.analyticsAllowed || false,\n    marketing_allowed: payload.marketingAllowed || false,\n    sale_of_data_allowed: payload.saleOfDataAllowed || false,\n  };\n}\n\nfunction formatProductPayload(products?: ShopifyAnalyticsProduct[]): string[] {\n  return products\n    ? products.map((p: ShopifyAnalyticsProduct) => {\n        const product = addDataIf(\n          {\n            variant_gid: p.variantGid,\n            category: p.category,\n            sku: p.sku,\n            product_id: parseInt(parseGid(p.productGid).id),\n            variant_id: parseInt(parseGid(p.variantGid).id),\n          },\n          {\n            product_gid: p.productGid,\n            name: p.name,\n            variant: p.variantName || '',\n            brand: p.brand,\n            price: parseFloat(p.price),\n            quantity: Number(p.quantity || 0),\n          },\n        );\n        return JSON.stringify(product);\n      })\n    : [];\n}\n", "import {SHOPIFY_S, SHOPIFY_Y} from './cart-constants.js';\nimport type {\n  ClientBrowserParameters,\n  ShopifyAddToCartPayload,\n  ShopifyAnalytics,\n  ShopifyPageViewPayload,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsEventName} from './analytics-constants.js';\nimport {errorIfServer} from './analytics-utils.js';\nimport {getShopifyCookies} from './cookies-utils.js';\n\nimport {pageView as trekkiePageView} from './analytics-schema-trekkie-storefront-page-view.js';\nimport {\n  pageView as customerPageView,\n  pageView2 as customerPageView2,\n  collectionView as customerCollectionView,\n  productView as customerProductView,\n  searchView as customerSearchView,\n  addToCart as customerAddToCart,\n} from './analytics-schema-custom-storefront-customer-tracking.js';\n\n/**\n * Set user and session cookies and refresh the expiry time\n * @param event - The analytics event.\n * @param shopDomain - The Online Store domain to sent Shopify analytics under the same\n *   top level domain.\n */\nexport function sendShopifyAnalytics(\n  event: ShopifyAnalytics,\n  shopDomain?: string,\n): Promise<void> {\n  const {eventName, payload} = event;\n  if (!payload.hasUserConsent) return Promise.resolve();\n\n  let events: ShopifyMonorailEvent[] = [];\n  const pageViewPayload = payload as ShopifyPageViewPayload;\n\n  if (eventName === AnalyticsEventName.PAGE_VIEW) {\n    events = events.concat(\n      trekkiePageView(pageViewPayload),\n      customerPageView(pageViewPayload),\n    );\n  } else if (eventName === AnalyticsEventName.ADD_TO_CART) {\n    events = events.concat(\n      customerAddToCart(payload as ShopifyAddToCartPayload),\n    );\n  } else if (eventName === AnalyticsEventName.PAGE_VIEW_2) {\n    events = events.concat(\n      trekkiePageView(pageViewPayload),\n      customerPageView2(pageViewPayload),\n    );\n  } else if (eventName === AnalyticsEventName.COLLECTION_VIEW) {\n    events = events.concat(customerCollectionView(pageViewPayload));\n  } else if (eventName === AnalyticsEventName.PRODUCT_VIEW) {\n    events = events.concat(customerProductView(pageViewPayload));\n  } else if (eventName === AnalyticsEventName.SEARCH_VIEW) {\n    events = events.concat(customerSearchView(pageViewPayload));\n  }\n\n  if (events.length) {\n    return sendToShopify(events, shopDomain);\n  } else {\n    return Promise.resolve();\n  }\n}\n\n// Shopify monorail return invalid agent for Lighthouse userAgents\nfunction isLighthouseUserAgent(): boolean {\n  if (typeof window === 'undefined' || !window.navigator) return false;\n  return /Chrome-Lighthouse/.test(window.navigator.userAgent);\n}\n\ntype MonorailResponse = {\n  status: number;\n  message: string;\n};\n\nconst ERROR_MESSAGE = 'sendShopifyAnalytics request is unsuccessful';\n\nfunction sendToShopify(\n  events: ShopifyMonorailEvent[],\n  shopDomain?: string,\n): Promise<void> {\n  if (isLighthouseUserAgent()) {\n    return Promise.resolve();\n  }\n\n  const eventsToBeSent = {\n    events,\n    metadata: {\n      event_sent_at_ms: Date.now(),\n    },\n  };\n\n  try {\n    return fetch(\n      shopDomain\n        ? `https://${shopDomain}/.well-known/shopify/monorail/unstable/produce_batch`\n        : 'https://monorail-edge.shopifysvc.com/unstable/produce_batch',\n      {\n        method: 'post',\n        headers: {\n          'content-type': 'text/plain',\n        },\n        body: JSON.stringify(eventsToBeSent),\n      },\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Response failed');\n        }\n        return response.text();\n      })\n      .then((data) => {\n        if (data) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          const jsonResponse = JSON.parse(data);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n          jsonResponse.result.forEach((eventResponse: MonorailResponse) => {\n            if (eventResponse.status !== 200) {\n              console.error(ERROR_MESSAGE, '\\n\\n', eventResponse.message);\n            }\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(ERROR_MESSAGE, err);\n        if (__HYDROGEN_DEV__) {\n          throw new Error(ERROR_MESSAGE);\n        }\n      });\n  } catch (error) {\n    // Do nothing\n    return Promise.resolve();\n  }\n}\n\nexport function getClientBrowserParameters(): ClientBrowserParameters {\n  if (errorIfServer('getClientBrowserParameters')) {\n    return {\n      uniqueToken: '',\n      visitToken: '',\n      url: '',\n      path: '',\n      search: '',\n      referrer: '',\n      title: '',\n      userAgent: '',\n      navigationType: '',\n      navigationApi: '',\n    };\n  }\n\n  const [navigationType, navigationApi] = getNavigationType();\n  const cookies = getShopifyCookies(document.cookie);\n\n  return {\n    uniqueToken: cookies[SHOPIFY_Y],\n    visitToken: cookies[SHOPIFY_S],\n    url: location.href,\n    path: location.pathname,\n    search: location.search,\n    referrer: document.referrer,\n    title: document.title,\n    userAgent: navigator.userAgent,\n    navigationType,\n    navigationApi,\n  };\n}\n\nfunction getNavigationTypeExperimental(): string | undefined {\n  try {\n    const navigationEntries =\n      performance?.getEntriesByType &&\n      performance?.getEntriesByType('navigation');\n\n    if (navigationEntries && navigationEntries[0]) {\n      // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\n      const rawType = (\n        window.performance.getEntriesByType(\n          'navigation',\n        )[0] as PerformanceNavigationTiming\n      )['type'];\n      const navType = rawType && rawType.toString();\n\n      return navType;\n    }\n  } catch (err) {\n    // Do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationTypeLegacy(): string | undefined {\n  try {\n    if (\n      PerformanceNavigation &&\n      performance?.navigation?.type !== null &&\n      performance?.navigation?.type !== undefined\n    ) {\n      //  https://developer.mozilla.org/en-US/docs/Web/API/Performance/navigation\n      const rawType = performance.navigation.type;\n      switch (rawType) {\n        case PerformanceNavigation.TYPE_NAVIGATE:\n          return 'navigate';\n          break;\n        case PerformanceNavigation.TYPE_RELOAD:\n          return 'reload';\n          break;\n        case PerformanceNavigation.TYPE_BACK_FORWARD:\n          return 'back_forward';\n          break;\n        default:\n          return `unknown: ${rawType}`;\n      }\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationType(): [string, string] {\n  try {\n    let navApi = 'PerformanceNavigationTiming';\n    let navType = getNavigationTypeExperimental();\n    if (!navType) {\n      navType = getNavigationTypeLegacy();\n      navApi = 'performance.navigation';\n    }\n    if (navType) {\n      return [navType, navApi];\n    } else {\n      return ['unknown', 'unknown'];\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return ['error', 'error'];\n}\n", "import {useMemo} from 'react';\nimport {useShop} from './ShopifyProvider.js';\nimport {CurrencyCode, MoneyV2} from './storefront-api-types.js';\n\nexport type UseMoneyValue = {\n  /**\n   * The currency code from the `MoneyV2` object.\n   */\n  currencyCode: CurrencyCode;\n  /**\n   * The name for the currency code, returned by `Intl.NumberFormat`.\n   */\n  currencyName?: string;\n  /**\n   * The currency symbol returned by `Intl.NumberFormat`.\n   */\n  currencySymbol?: string;\n  /**\n   * The currency narrow symbol returned by `Intl.NumberFormat`.\n   */\n  currencyNarrowSymbol?: string;\n  /**\n   * The localized amount, without any currency symbols or non-number types from the `Intl.NumberFormat.formatToParts` parts.\n   */\n  amount: string;\n  /**\n   * All parts returned by `Intl.NumberFormat.formatToParts`.\n   */\n  parts: Intl.NumberFormatPart[];\n  /**\n   * A string returned by `new Intl.NumberFormat` for the amount and currency code,\n   * using the `locale` value in the [`LocalizationProvider` component](https://shopify.dev/api/hydrogen/components/localization/localizationprovider).\n   */\n  localizedString: string;\n  /**\n   * The `MoneyV2` object provided as an argument to the hook.\n   */\n  original: MoneyV2;\n  /**\n   * A string with trailing zeros removed from the fractional part, if any exist. If there are no trailing zeros, then the fractional part remains.\n   * For example, `$640.00` turns into `$640`.\n   * `$640.42` remains `$640.42`.\n   */\n  withoutTrailingZeros: string;\n  /**\n   * A string without currency and without trailing zeros removed from the fractional part, if any exist. If there are no trailing zeros, then the fractional part remains.\n   * For example, `$640.00` turns into `640`.\n   * `$640.42` turns into `640.42`.\n   */\n  withoutTrailingZerosAndCurrency: string;\n};\n\n/**\n * The `useMoney` hook takes a [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2) and returns a\n * default-formatted string of the amount with the correct currency indicator, along with some of the parts provided by\n * [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat).\n * Uses `locale` from `ShopifyProvider`\n * &nbsp;\n * @see {@link https://shopify.dev/api/hydrogen/hooks/usemoney}\n * @example initialize the money object\n * ```ts\n * const money = useMoney({\n *   amount: '100.00',\n *   currencyCode: 'USD'\n * })\n * ```\n * &nbsp;\n *\n * @example basic usage, outputs: $100.00\n * ```ts\n * money.localizedString\n * ```\n * &nbsp;\n *\n * @example without currency, outputs: 100.00\n * ```ts\n * money.amount\n * ```\n * &nbsp;\n *\n * @example without trailing zeros, outputs: $100\n * ```ts\n * money.withoutTrailingZeros\n * ```\n * &nbsp;\n *\n * @example currency name, outputs: US dollars\n * ```ts\n * money.currencyCode\n * ```\n * &nbsp;\n *\n * @example currency symbol, outputs: $\n * ```ts\n * money.currencySymbol\n * ```\n * &nbsp;\n *\n * @example without currency and without trailing zeros, outputs: 100\n * ```ts\n * money.withoutTrailingZerosAndCurrency\n * ```\n */\nexport function useMoney(money: MoneyV2): UseMoneyValue {\n  const {countryIsoCode, languageIsoCode} = useShop();\n  const locale = languageIsoCode.includes('_')\n    ? languageIsoCode.replace('_', '-')\n    : `${languageIsoCode}-${countryIsoCode}`;\n\n  if (!locale) {\n    throw new Error(\n      `useMoney(): Unable to get 'locale' from 'useShop()', which means that 'locale' was not passed to '<ShopifyProvider/>'. 'locale' is required for 'useMoney()' to work`,\n    );\n  }\n\n  const amount = parseFloat(money.amount);\n\n  const {\n    defaultFormatter,\n    nameFormatter,\n    narrowSymbolFormatter,\n    withoutTrailingZerosFormatter,\n    withoutCurrencyFormatter,\n    withoutTrailingZerosOrCurrencyFormatter,\n  } = useMemo(() => {\n    const options = {\n      style: 'currency' as const,\n      currency: money.currencyCode,\n    };\n\n    return {\n      defaultFormatter: getLazyFormatter(locale, options),\n      nameFormatter: getLazyFormatter(locale, {\n        ...options,\n        currencyDisplay: 'name',\n      }),\n      narrowSymbolFormatter: getLazyFormatter(locale, {\n        ...options,\n        currencyDisplay: 'narrowSymbol',\n      }),\n      withoutTrailingZerosFormatter: getLazyFormatter(locale, {\n        ...options,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n      withoutCurrencyFormatter: getLazyFormatter(locale),\n      withoutTrailingZerosOrCurrencyFormatter: getLazyFormatter(locale, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n    };\n  }, [money.currencyCode, locale]);\n\n  const isPartCurrency = (part: Intl.NumberFormatPart): boolean =>\n    part.type === 'currency';\n\n  // By wrapping these properties in functions, we only\n  // create formatters if they are going to be used.\n  const lazyFormatters = useMemo(\n    () => ({\n      original: () => money,\n      currencyCode: () => money.currencyCode,\n\n      localizedString: () => defaultFormatter().format(amount),\n\n      parts: () => defaultFormatter().formatToParts(amount),\n\n      withoutTrailingZeros: () =>\n        amount % 1 === 0\n          ? withoutTrailingZerosFormatter().format(amount)\n          : defaultFormatter().format(amount),\n\n      withoutTrailingZerosAndCurrency: () =>\n        amount % 1 === 0\n          ? withoutTrailingZerosOrCurrencyFormatter().format(amount)\n          : withoutCurrencyFormatter().format(amount),\n\n      currencyName: () =>\n        nameFormatter().formatToParts(amount).find(isPartCurrency)?.value ??\n        money.currencyCode, // e.g. \"US dollars\"\n\n      currencySymbol: () =>\n        defaultFormatter().formatToParts(amount).find(isPartCurrency)?.value ??\n        money.currencyCode, // e.g. \"USD\"\n\n      currencyNarrowSymbol: () =>\n        narrowSymbolFormatter().formatToParts(amount).find(isPartCurrency)\n          ?.value ?? '', // e.g. \"$\"\n\n      amount: () =>\n        defaultFormatter()\n          .formatToParts(amount)\n          .filter((part) =>\n            ['decimal', 'fraction', 'group', 'integer', 'literal'].includes(\n              part.type,\n            ),\n          )\n          .map((part) => part.value)\n          .join(''),\n    }),\n    [\n      money,\n      amount,\n      nameFormatter,\n      defaultFormatter,\n      narrowSymbolFormatter,\n      withoutCurrencyFormatter,\n      withoutTrailingZerosFormatter,\n      withoutTrailingZerosOrCurrencyFormatter,\n    ],\n  );\n\n  // Call functions automatically when the properties are accessed\n  // to keep these functions as an implementation detail.\n  return useMemo(\n    () =>\n      new Proxy(lazyFormatters as unknown as UseMoneyValue, {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        get: (target, key) => Reflect.get(target, key)?.call(null),\n      }),\n    [lazyFormatters],\n  );\n}\n\nconst formatterCache = new Map<string, Intl.NumberFormat>();\n\nfunction getLazyFormatter(\n  locale: string,\n  options?: Intl.NumberFormatOptions,\n): () => Intl.NumberFormat {\n  const key = JSON.stringify([locale, options]);\n\n  return function (): Intl.NumberFormat {\n    let formatter = formatterCache.get(key);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      formatterCache.set(key, formatter);\n    }\n    return formatter;\n  };\n}\n", "import {type ReactNode} from 'react';\nimport {useMoney} from './useMoney.js';\nimport type {MoneyV2, UnitPriceMeasurement} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nexport interface MoneyPropsBase<ComponentGeneric extends React.ElementType> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`. */\n  as?: ComponentGeneric;\n  /** An object with fields that correspond to the Storefront API's [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2). */\n  data: PartialDeep<MoneyV2, {recurseIntoArrays: true}>;\n  /** Whether to remove the currency symbol from the output. */\n  withoutCurrency?: boolean;\n  /** Whether to remove trailing zeros (fractional money) from the output. */\n  withoutTrailingZeros?: boolean;\n  /** A [UnitPriceMeasurement object](https://shopify.dev/api/storefront/2024-10/objects/unitpricemeasurement). */\n  measurement?: PartialDeep<UnitPriceMeasurement, {recurseIntoArrays: true}>;\n  /** Customizes the separator between the money output and the measurement output. Used with the `measurement` prop. Defaults to `'/'`. */\n  measurementSeparator?: ReactNode;\n}\n\n// This article helps understand the typing here https://www.benmvp.com/blog/polymorphic-react-components-typescript/ Ben is the best :)\nexport type MoneyProps<ComponentGeneric extends React.ElementType> =\n  MoneyPropsBase<ComponentGeneric> &\n    (ComponentGeneric extends keyof React.JSX.IntrinsicElements\n      ? Omit<\n          React.ComponentPropsWithoutRef<ComponentGeneric>,\n          keyof MoneyPropsBase<ComponentGeneric>\n        >\n      : React.ComponentPropsWithoutRef<ComponentGeneric>);\n\n/**\n * The `Money` component renders a string of the Storefront API's\n * [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2)\n * according to the `locale` in the `ShopifyProvider` component.\n * &nbsp;\n * @see {@link https://shopify.dev/api/hydrogen/components/money}\n * @example basic usage, outputs: $100.00\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} />\n * ```\n * &nbsp;\n *\n * @example without currency, outputs: 100.00\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} withoutCurrency />\n * ```\n * &nbsp;\n *\n * @example without trailing zeros, outputs: $100\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} withoutTrailingZeros />\n * ```\n * &nbsp;\n *\n * @example with per-unit measurement, outputs: $100.00 per G\n * ```ts\n * <Money\n *   data={{amount: '100.00', currencyCode: 'USD'}}\n *   measurement={{referenceUnit: 'G'}}\n *   measurementSeparator=\" per \"\n * />\n * ```\n */\nexport function Money<ComponentGeneric extends React.ElementType = 'div'>({\n  data,\n  as,\n  withoutCurrency,\n  withoutTrailingZeros,\n  measurement,\n  measurementSeparator = '/',\n  ...passthroughProps\n}: MoneyProps<ComponentGeneric>): JSX.Element {\n  if (!isMoney(data)) {\n    throw new Error(\n      `<Money/> needs a valid 'data' prop that has 'amount' and 'currencyCode'`,\n    );\n  }\n  const moneyObject = useMoney(data);\n  const Wrapper = as ?? 'div';\n\n  let output = moneyObject.localizedString;\n\n  if (withoutCurrency || withoutTrailingZeros) {\n    if (withoutCurrency && !withoutTrailingZeros) {\n      output = moneyObject.amount;\n    } else if (!withoutCurrency && withoutTrailingZeros) {\n      output = moneyObject.withoutTrailingZeros;\n    } else {\n      // both\n      output = moneyObject.withoutTrailingZerosAndCurrency;\n    }\n  }\n\n  return (\n    <Wrapper {...passthroughProps}>\n      {output}\n      {measurement && measurement.referenceUnit && (\n        <>\n          {measurementSeparator}\n          {measurement.referenceUnit}\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\n// required in order to narrow the money object down and make TS happy\nfunction isMoney(\n  maybeMoney: PartialDeep<MoneyV2, {recurseIntoArrays: true}>,\n): maybeMoney is MoneyV2 {\n  return (\n    typeof maybeMoney.amount === 'string' &&\n    !!maybeMoney.amount &&\n    typeof maybeMoney.currencyCode === 'string' &&\n    !!maybeMoney.currencyCode\n  );\n}\n", "import {useContext, createContext, type ReactNode} from 'react';\nimport {\n  ComponentizableCartLine,\n  type CartLine,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\ntype CartLinePartialDeep = PartialDeep<\n  CartLine | ComponentizableCartLine,\n  {recurseIntoArrays: true}\n>;\n\nexport const CartLineContext = createContext<CartLinePartialDeep | null>(null);\n\n/**\n * The `useCartLine` hook provides access to the [CartLine object](https://shopify.dev/api/storefront/2024-10/objects/cartline) from the Storefront API. It must be a descendent of a `CartProvider` component.\n */\nexport function useCartLine(): CartLinePartialDeep {\n  const context = useContext(CartLineContext);\n\n  if (context == null) {\n    throw new Error('Expected a cart line context but none was found');\n  }\n\n  return context;\n}\n\ntype CartLineProviderProps = {\n  /** Any `ReactNode` elements. */\n  children: ReactNode;\n  /** A cart line object. */\n  line: CartLinePartialDeep;\n};\n\n/**\n * The `CartLineProvider` component creates a context for using a cart line.\n */\nexport function CartLineProvider({\n  children,\n  line,\n}: CartLineProviderProps): JSX.Element {\n  return (\n    <CartLineContext.Provider value={line}>{children}</CartLineContext.Provider>\n  );\n}\n", "/**\n * Meant to be used with GraphQL CodeGen to type the Storefront API's custom scalars correctly.\n * Reference for the GraphQL types: https://shopify.dev/docs/api/storefront/2024-10/scalars/HTML\n * Note: JSON is generated as 'unknown' by default.\n */\nexport const storefrontApiCustomScalars = {\n  // Keep in sync with the definitions in the app/nextjs/codegen.ts!\n  DateTime: 'string',\n  Decimal: 'string',\n  HTML: 'string',\n  URL: 'string',\n  Color: 'string',\n  UnsignedInt64: 'string',\n};\n\n/**\n * Meant to be used with GraphQL CodeGen to type the Storefront API's custom scalars correctly.\n * Reference for the GraphQL types: https://shopify.dev/docs/api/customer/2024-10/scalars/HTML\n * Note: JSON is generated as 'unknown' by default.\n */\nexport const customerAccountApiCustomScalars = {\n  DateTime: 'string',\n  Decimal: 'string',\n  HTML: 'string',\n  ISO8601DateTime: 'string',\n  URL: 'string',\n  UnsignedInt64: 'string',\n};\n", "import type {ExternalVideo as ExternalVideoType} from './storefront-api-types.js';\nimport type {Entries, PartialDeep} from 'type-fest';\nimport {forwardRef, IframeHTMLAttributes} from 'react';\n\nexport interface ExternalVideoBaseProps {\n  /**\n   * An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n   */\n  data: PartialDeep<ExternalVideoType, {recurseIntoArrays: true}>;\n  /** An object containing the options available for either\n   * [YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n   * [Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).\n   */\n  options?: YouTube | Vimeo;\n}\n\nexport type ExternalVideoProps = Omit<\n  IframeHTMLAttributes<HTMLIFrameElement>,\n  'src'\n> &\n  ExternalVideoBaseProps;\n\n/**\n * The `ExternalVideo` component renders an embedded video for the Storefront\n * API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n */\nexport const ExternalVideo = forwardRef<HTMLIFrameElement, ExternalVideoProps>(\n  (props, ref): JSX.Element => {\n    const {\n      data,\n      options,\n      id = data.id,\n      frameBorder = '0',\n      allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture',\n      allowFullScreen = true,\n      loading = 'lazy',\n      ...passthroughProps\n    } = props;\n\n    if (!data.embedUrl) {\n      throw new Error(`<ExternalVideo/> requires the 'embedUrl' property`);\n    }\n\n    let finalUrl: string = data.embedUrl;\n\n    if (options) {\n      const urlObject = new URL(data.embedUrl);\n      for (const [key, value] of Object.entries(options) as Entries<\n        typeof options\n      >) {\n        if (typeof value === 'undefined') {\n          continue;\n        }\n\n        urlObject.searchParams.set(key, value.toString());\n      }\n      finalUrl = urlObject.toString();\n    }\n\n    return (\n      <iframe\n        {...passthroughProps}\n        id={id ?? data.embedUrl}\n        title={data.alt ?? data.id ?? 'external video'}\n        frameBorder={frameBorder}\n        allow={allow}\n        allowFullScreen={allowFullScreen}\n        src={finalUrl}\n        loading={loading}\n        ref={ref}\n      ></iframe>\n    );\n  },\n);\n\ninterface YouTube {\n  autoplay?: 0 | 1;\n  cc_lang_pref?: string;\n  cc_load_policy?: 1;\n  color?: 'red' | 'white';\n  controls?: 0 | 1;\n  disablekb?: 0 | 1;\n  enablejsapi?: 0 | 1;\n  end?: number;\n  fs?: 0 | 1;\n  hl?: string;\n  iv_load_policy?: 1 | 3;\n  list?: string;\n  list_type?: 'playlist' | 'user_uploads';\n  loop?: 0 | 1;\n  modest_branding?: 1;\n  origin?: string;\n  playlist?: string;\n  plays_inline?: 0 | 1;\n  rel?: 0 | 1;\n  start?: number;\n  widget_referrer?: string;\n}\n\ntype VimeoBoolean = 0 | 1 | boolean;\n\ninterface Vimeo {\n  autopause?: VimeoBoolean;\n  autoplay?: VimeoBoolean;\n  background?: VimeoBoolean;\n  byline?: VimeoBoolean;\n  color?: string;\n  controls?: VimeoBoolean;\n  dnt?: VimeoBoolean;\n  loop?: VimeoBoolean;\n  muted?: VimeoBoolean;\n  pip?: VimeoBoolean;\n  playsinline?: VimeoBoolean;\n  portrait?: VimeoBoolean;\n  quality?: '240p' | '360p' | '540p' | '720p' | '1080p' | '2k' | '4k';\n  speed?: VimeoBoolean;\n  '#t'?: string;\n  texttrack?: string;\n  title?: VimeoBoolean;\n  transparent?: VimeoBoolean;\n}\n", "/**\n * This file provides utility functions for determining whether or not an option value combination is present in an encoded option value string.\n *\n * In V1 of the encoding strategy, option value arrays are encoded as a trie with the following rules:\n *  - `:` `,` ` ` and `-` are control characters.\n *  - `:` indicates a new option. ex: 0:1 indicates value 0 for the option in position 1, value 1 for the option in position 2.\n *  - `,` indicates the end of a repeated prefix, mulitple consecutive commas indicate the end of multiple repeated prefixes.\n *  - ` ` indicates a gap in the sequence of option values. ex: `0 4` indicates option values in position 0 and 4 are present.\n *  - `-` indicates a continuous range of option values. ex: `0 1-3 4`. Ranges are only present encoded in the final option value position, so for example the trie for the set [[0,0,0],[0,0,1], ..., [0,2,2]] will be structured as `0:0:0-2,1:0-2,2:0-2`, not `0:0-2:0-2`.\n */\n\nimport {Product} from './storefront-api-types.js';\n\nconst OPTION_VALUE_SEPARATOR = ',';\n\nconst V1_CONTROL_CHARS = {\n  OPTION: ':',\n  END_OF_PREFIX: ',',\n  SEQUENCE_GAP: ' ',\n  RANGE: '-',\n};\n\nexport type IsOptionValueCombinationInEncodedVariant = (\n  targetOptionValueCombination: number[],\n  encodedVariantField: string,\n) => boolean;\n\n/**\n * Determine whether an option value combination is present in an encoded option value string. Function is memoized by encodedVariantField.\n *\n * @param targetOptionValueCombination - Indices of option values to look up in the encoded option value string. A partial set of indices may be passed to determine whether a node or any children is present. For example, if a product has 3 options, passing [0] will return true if any option value combination for the first option's option value is present in the encoded string.\n * @param encodedVariantField - Encoded option value string from the Storefront API, e.g. [product.encodedVariantExistence](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantexistence) or [product.encodedVariantAvailability](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantavailability)\n * @returns - True if a full or partial targetOptionValueIndices is present in the encoded option value string, false otherwise.\n */\nexport const isOptionValueCombinationInEncodedVariant: IsOptionValueCombinationInEncodedVariant =\n  ((): IsOptionValueCombinationInEncodedVariant => {\n    const decodedOptionValues = new Map<string, Set<string>>();\n\n    return function (\n      targetOptionValueCombination: number[],\n      encodedVariantField: string,\n    ): boolean {\n      if (targetOptionValueCombination.length === 0) {\n        return false;\n      }\n\n      if (!decodedOptionValues.has(encodedVariantField)) {\n        const decodedOptionValuesSet = new Set<string>();\n\n        for (const optionValue of decodeEncodedVariant(encodedVariantField)) {\n          // add the complete option value to the decoded option values set\n          decodedOptionValuesSet.add(optionValue.join(OPTION_VALUE_SEPARATOR));\n\n          // add all composite parts of the option value to the decoded option values set. e.g. if the option value is [0,1,2], add \"0\", \"0,1\", \"0,1,2\"\n          for (let i = 0; i < optionValue.length; i++) {\n            decodedOptionValuesSet.add(\n              optionValue.slice(0, i + 1).join(OPTION_VALUE_SEPARATOR),\n            );\n          }\n        }\n\n        decodedOptionValues.set(encodedVariantField, decodedOptionValuesSet);\n      }\n\n      return Boolean(\n        decodedOptionValues\n          .get(encodedVariantField)\n          ?.has(targetOptionValueCombination.join(OPTION_VALUE_SEPARATOR)),\n      );\n    };\n  })();\n\ntype EncodedVariantField =\n  | Product['encodedVariantAvailability']\n  | Product['encodedVariantExistence'];\ntype DecodedOptionValues = number[][];\n\n/**\n * For an encoded option value string, decode into option value combinations. Entries represent a valid combination formatted as an array of option value positions.\n * @param encodedVariantField - Encoded option value string from the Storefront API, e.g. [product.encodedVariantExistence](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantexistence) or [product.encodedVariantAvailability](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantavailability)\n * @returns Decoded option value combinations\n */\nexport function decodeEncodedVariant(\n  encodedVariantField: EncodedVariantField,\n): DecodedOptionValues {\n  if (!encodedVariantField) return [];\n\n  if (encodedVariantField.startsWith('v1_')) {\n    return v1Decoder(stripVersion(encodedVariantField));\n  }\n\n  throw new Error('Unsupported option value encoding');\n}\n\nconst stripVersion: (encodedVariantField: string) => string = (\n  encodedVariantField: string,\n) => encodedVariantField.replace(/^v1_/, '');\n\n/**\n * We encode an array of arrays representing variants, expressed in terms of options and option values, as a trie.\n *\n * This encoding strategy allows extremely large numbers of variants to be expressed in an extremely compact data structure.\n *\n * Integers represent option and values, so [0,0,0] represents option_value at array index 0 for the options at array indexes 0, 1 and 2\n *\n * `:`, `,`, ` ` and `-` are control characters.\n * `:` indicates a new option\n * `,` indicates the end of a repeated prefix, mulitple consecutive commas indicate the end of multiple repeated prefixes.\n * ` ` indicates a gap in the sequence of option values\n * `-` indicates a continuous range of option values\n *\n * Encoding process:\n *\n * example input array: [[0,0,0], [0,1,0], [0,1,1], [1,0,0], [1,0,1], [1,1,1], [2,0,1], [2,1,0]]\n *\n * step 1: encode as string: \"0:0:0,0:1:0,0:1:1,1:0:0,1:0:1,1:1:1,2:0:1,2:1:0,\"\n * step 2: combine nodes that share a prefix: \"0:0:0,0:1:0 1,1:0:0 1,1:1:1,2:0:1,2:1:0,\"\n * step 3: encode data as a trie so no prefixes need to be repeated: \"0:0:0,1:0 1,,1:0:0 1,1:1,,2:0:1,1:0,,\"\n * step 4: since the options are sorted, use a dash to express ranges: \"0:0:0,1:0-1,,1:0:0-1,1:1,,2:0:1,1:0,,\"\n */\nfunction v1Decoder(encodedVariantField: string): number[][] {\n  const tokenizer = /[ :,-]/g;\n  let index = 0;\n  let token: RegExpExecArray | null;\n  const options: number[][] = [];\n  const currentOptionValue: number[] = [];\n  let depth = 0;\n  let rangeStart: number | null = null;\n\n  // iterate over control characters\n  while ((token = tokenizer.exec(encodedVariantField))) {\n    const operation = token[0];\n    const optionValueIndex =\n      Number.parseInt(encodedVariantField.slice(index, token.index)) || 0;\n\n    if (rangeStart !== null) {\n      // If a range has been started, iterate over the range and add each option value to the list of options\n      // - `rangeStart` is set if the last control char was a dash, e.g. `0` for 0-2. It represents the numeric option value position for the start of the range.\n      // - `optionValueIndex` is the numeric option value position for the end of the range\n      for (; rangeStart < optionValueIndex; rangeStart++) {\n        currentOptionValue[depth] = rangeStart;\n        options.push([...currentOptionValue]);\n      }\n      // indicates the range has been processed\n      rangeStart = null;\n    }\n\n    currentOptionValue[depth] = optionValueIndex;\n\n    if (operation === V1_CONTROL_CHARS.RANGE) {\n      // dash operation indicates we are in a range. e.g. 0-2 means option values 0, 1, 2\n      rangeStart = optionValueIndex;\n    } else if (operation === V1_CONTROL_CHARS.OPTION) {\n      // colon operation indicates that we are moving down to the next layer of option values. e.g. 0:0:0-2 means we traverse down from option1 to option3 and represents [[0,0,0], [0,0,1], [0,0,2]]\n      depth++;\n    } else {\n      if (\n        operation === V1_CONTROL_CHARS.SEQUENCE_GAP ||\n        (operation === V1_CONTROL_CHARS.END_OF_PREFIX &&\n          encodedVariantField[token.index - 1] !==\n            V1_CONTROL_CHARS.END_OF_PREFIX)\n      ) {\n        // add the current option value to the list of options if we hit a gap in our sequence or we are at the end of our depth and need to move back up\n        options.push([...currentOptionValue]);\n      }\n      if (operation === V1_CONTROL_CHARS.END_OF_PREFIX) {\n        // go up an option level, trash the last item in currentOptionValue\n        currentOptionValue.pop();\n        depth--;\n      }\n    }\n    index = tokenizer.lastIndex;\n  }\n\n  // Because we iterate over control characters and the range processing happens in the while,\n  // if the last control char is a range we need to manually add the final range to the option list.\n  const lastRangeStartIndex = encodedVariantField.lastIndexOf('-');\n  if (rangeStart != null && lastRangeStartIndex > 0) {\n    const finalValueIndex = parseInt(\n      encodedVariantField.substring(lastRangeStartIndex + 1),\n    );\n    for (; rangeStart <= finalValueIndex; rangeStart++) {\n      currentOptionValue[depth] = rangeStart;\n      options.push([...currentOptionValue]);\n    }\n  }\n\n  return options;\n}\n", "import {isOptionValueCombinationInEncodedVariant} from './optionValueDecoder.js';\nimport type {\n  Product,\n  ProductOption,\n  ProductOptionValue,\n  ProductVariant,\n  SelectedOption,\n} from './storefront-api-types';\n\nexport type RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\ntype ProductOptionsMapping = Record<string, number>;\ntype ProductOptionValueState = {\n  variant: ProductVariant;\n  handle: string;\n  variantUriQuery: string;\n  selected: boolean;\n  exists: boolean;\n  available: boolean;\n  isDifferentProduct: boolean;\n};\ntype MappedProductOptionValue = ProductOptionValue & ProductOptionValueState;\n\n/**\n * Creates a mapping of product options to their index for matching encoded values\n * For example, a product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      optionValues: [\\{name: 'Red'\\}, \\{name: 'Blue'\\}]\n *    \\},\n *    \\{\n *      name: 'Size',\n *      optionValues: [\\{name: 'Small'\\}, \\{name: 'Medium'\\}, \\{name: 'Large'\\}]\n *    \\}\n *  ]\n * Would return\n *  [\n *    \\{Red: 0, Blue: 1\\},\n *    \\{Small: 0, Medium: 1, Large: 2\\}\n *  ]\n */\nfunction mapProductOptions(options: ProductOption[]): ProductOptionsMapping[] {\n  return options.map((option: ProductOption) => {\n    return Object.assign(\n      {},\n      ...(option?.optionValues\n        ? option.optionValues.map((value, index) => {\n            return {[value.name]: index};\n          })\n        : []),\n    ) as ProductOptionsMapping;\n  });\n}\n\n/**\n * Converts the product option into an Object\\<key, value\\> for building query params\n * For example, a selected product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      value: 'Red',\n *    \\},\n *    \\{\n *      name: 'Size',\n *      value: 'Medium',\n *    \\}\n *  ]\n * Would return\n *  \\{\n *    Color: 'Red',\n *    Size: 'Medium',\n *  \\}\n */\nexport function mapSelectedProductOptionToObject(\n  options: Pick<SelectedOption, 'name' | 'value'>[],\n): Record<string, string> {\n  return Object.assign(\n    {},\n    ...options.map((key) => {\n      return {[key.name]: key.value};\n    }),\n  ) as Record<string, string>;\n}\n\n/**\n * Returns the JSON stringify result of mapSelectedProductOptionToObject\n */\nfunction mapSelectedProductOptionToObjectAsString(\n  options: Pick<SelectedOption, 'name' | 'value'>[],\n): string {\n  return JSON.stringify(mapSelectedProductOptionToObject(options));\n}\n\n/**\n * Encode the selected product option as a key for mapping to the encoded variants\n * For example, a selected product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      value: 'Red',\n *    \\},\n *    \\{\n *      name: 'Size',\n *      value: 'Medium',\n *    \\}\n *  ]\n * Would return\n *  [0,1]\n *\n * Also works with the result of mapSelectedProductOption. For example:\n *  \\{\n *    Color: 'Red',\n *    Size: 'Medium',\n *  \\}\n * Would return\n *  [0,1]\n *\n * @param selectedOption - The selected product option\n * @param productOptionMappings - The result of product option mapping from mapProductOptions\n * @returns\n */\nfunction encodeSelectedProductOptionAsKey(\n  selectedOption:\n    | Pick<SelectedOption, 'name' | 'value'>[]\n    | Record<string, string>,\n  productOptionMappings: ProductOptionsMapping[],\n): string {\n  if (Array.isArray(selectedOption)) {\n    return JSON.stringify(\n      selectedOption.map((key, index) => {\n        return productOptionMappings[index][key.value];\n      }),\n    );\n  } else {\n    return JSON.stringify(\n      Object.keys(selectedOption).map((key, index) => {\n        return productOptionMappings[index][selectedOption[key]];\n      }),\n    );\n  }\n}\n\n/**\n * Takes an array of product variants and maps them to an object with the encoded selected option values as the key.\n * For example, a product variant of\n * [\n *  \\{\n *    id: 1,\n *    selectedOptions: [\n *      \\{name: 'Color', value: 'Red'\\},\n *      \\{name: 'Size', value: 'Small'\\},\n *    ],\n *  \\},\n *  \\{\n *    id: 2,\n *    selectedOptions: [\n *      \\{name: 'Color', value: 'Red'\\},\n *      \\{name: 'Size', value: 'Medium'\\},\n *    ],\n *  \\}\n * ]\n * Would return\n * \\{\n *    '[0,0]': \\{id: 1, selectedOptions: [\\{name: 'Color', value: 'Red'\\}, \\{name: 'Size', value: 'Small'\\}]\\},\n *    '[0,1]': \\{id: 2, selectedOptions: [\\{name: 'Color', value: 'Red'\\}, \\{name: 'Size', value: 'Medium'\\}]\\},\n * \\}\n */\nfunction mapVariants(\n  variants: ProductVariant[],\n  productOptionMappings: ProductOptionsMapping[],\n): Record<string, ProductVariant> {\n  return Object.assign(\n    {},\n    ...variants.map((variant) => {\n      const variantKey = encodeSelectedProductOptionAsKey(\n        variant.selectedOptions || [],\n        productOptionMappings,\n      );\n      return {[variantKey]: variant};\n    }),\n  ) as Record<string, ProductVariant>;\n}\n\nexport type MappedProductOptions = Omit<ProductOption, 'optionValues'> & {\n  optionValues: MappedProductOptionValue[];\n};\n\nconst PRODUCT_INPUTS = [\n  'options',\n  'selectedOrFirstAvailableVariant',\n  'adjacentVariants',\n];\n\nconst PRODUCT_INPUTS_EXTRA = [\n  'handle',\n  'encodedVariantExistence',\n  'encodedVariantAvailability',\n];\n\nfunction logErrorAndReturnFalse(key: string): boolean {\n  console.error(\n    `[h2:error:getProductOptions] product.${key} is missing. Make sure you query for this field from the Storefront API.`,\n  );\n  return false;\n}\n\nexport function checkProductParam(\n  product: RecursivePartial<Product>,\n  checkAll = false,\n): Product {\n  let validParam = true;\n  const productKeys = Object.keys(product);\n\n  // Check product input\n  (checkAll\n    ? [...PRODUCT_INPUTS, ...PRODUCT_INPUTS_EXTRA]\n    : PRODUCT_INPUTS\n  ).forEach((key) => {\n    if (!productKeys.includes(key)) {\n      validParam = logErrorAndReturnFalse(key);\n    }\n  });\n\n  // Check for nested options requirements\n  if (product.options) {\n    const firstOption = product?.options[0];\n\n    if (checkAll && !firstOption?.name) {\n      validParam = logErrorAndReturnFalse('options.name');\n    }\n\n    // Check for options.optionValues\n    if (product?.options[0]?.optionValues) {\n      const firstOptionValues = product.options[0].optionValues[0];\n\n      // Check for options.optionValues.name\n      if (checkAll && !firstOptionValues?.name) {\n        validParam = logErrorAndReturnFalse('options.optionValues.name');\n      }\n\n      // Check for options.optionValues.firstSelectableVariant\n      if (firstOptionValues?.firstSelectableVariant) {\n        // check product variant\n        validParam = checkProductVariantParam(\n          firstOptionValues.firstSelectableVariant,\n          'options.optionValues.firstSelectableVariant',\n          validParam,\n          checkAll,\n        );\n      } else {\n        validParam = logErrorAndReturnFalse(\n          'options.optionValues.firstSelectableVariant',\n        );\n      }\n    } else {\n      validParam = logErrorAndReturnFalse('options.optionValues');\n    }\n  }\n\n  // Check for nested selectedOrFirstAvailableVariant requirements\n  if (product.selectedOrFirstAvailableVariant) {\n    validParam = checkProductVariantParam(\n      product.selectedOrFirstAvailableVariant,\n      'selectedOrFirstAvailableVariant',\n      validParam,\n      checkAll,\n    );\n  }\n\n  // Check for nested adjacentVariants requirements\n  if (!!product.adjacentVariants && product.adjacentVariants[0]) {\n    validParam = checkProductVariantParam(\n      product.adjacentVariants[0],\n      'adjacentVariants',\n      validParam,\n      checkAll,\n    );\n  }\n\n  return (validParam ? product : {}) as Product;\n}\n\nfunction checkProductVariantParam(\n  variant: RecursivePartial<ProductVariant>,\n  key: string,\n  currentValidParamState: boolean,\n  checkAll: boolean,\n): boolean {\n  let validParam = currentValidParamState;\n\n  if (checkAll && !variant.product?.handle) {\n    validParam = logErrorAndReturnFalse(`${key}.product.handle`);\n  }\n  if (variant.selectedOptions) {\n    const firstSelectedOption = variant.selectedOptions[0];\n    if (!firstSelectedOption?.name) {\n      validParam = logErrorAndReturnFalse(`${key}.selectedOptions.name`);\n    }\n    if (!firstSelectedOption?.value) {\n      validParam = logErrorAndReturnFalse(`${key}.selectedOptions.value`);\n    }\n  } else {\n    validParam = logErrorAndReturnFalse(`${key}.selectedOptions`);\n  }\n\n  return validParam;\n}\n\n/**\n * Finds all the variants provided by adjacentVariants, options.optionValues.firstAvailableVariant,\n * and selectedOrFirstAvailableVariant and return them in a single array\n */\nexport function getAdjacentAndFirstAvailableVariants(\n  product: RecursivePartial<Product>,\n): ProductVariant[] {\n  // Checks for valid product input\n  const checkedProduct = checkProductParam(product);\n\n  if (!checkedProduct.options) return [];\n\n  const availableVariants: Record<string, ProductVariant> = {};\n  checkedProduct.options.map((option) => {\n    option.optionValues?.map((value) => {\n      if (value.firstSelectableVariant) {\n        const variantKey = mapSelectedProductOptionToObjectAsString(\n          value.firstSelectableVariant.selectedOptions,\n        );\n        availableVariants[variantKey] = value.firstSelectableVariant;\n      }\n    });\n  });\n\n  checkedProduct.adjacentVariants.map((variant) => {\n    const variantKey = mapSelectedProductOptionToObjectAsString(\n      variant.selectedOptions,\n    );\n    availableVariants[variantKey] = variant;\n  });\n\n  const selectedVariant = checkedProduct.selectedOrFirstAvailableVariant;\n  if (selectedVariant) {\n    const variantKey = mapSelectedProductOptionToObjectAsString(\n      selectedVariant.selectedOptions,\n    );\n    availableVariants[variantKey] = selectedVariant;\n  }\n\n  return Object.values(availableVariants);\n}\n\n/**\n * Returns a product options array with its relevant information\n * about the variant\n */\nexport function getProductOptions(\n  product: RecursivePartial<Product>,\n): MappedProductOptions[] {\n  // Checks for valid product input\n  const checkedProduct = checkProductParam(product, true);\n\n  if (!checkedProduct.options) return [];\n\n  const {\n    options,\n    selectedOrFirstAvailableVariant: selectedVariant,\n    adjacentVariants,\n    encodedVariantExistence,\n    encodedVariantAvailability,\n    handle: productHandle,\n  } = checkedProduct;\n  // Get a mapping of product option names to their index for matching encoded values\n  const productOptionMappings = mapProductOptions(options);\n\n  // Get the adjacent variants mapped to the encoded selected option values\n  const variants = mapVariants(\n    selectedVariant ? [selectedVariant, ...adjacentVariants] : adjacentVariants,\n    productOptionMappings,\n  );\n\n  // Get the key:value version of selected options for building url query params\n  const selectedOptions = mapSelectedProductOptionToObject(\n    selectedVariant ? selectedVariant.selectedOptions : [],\n  );\n\n  const productOptions = options.map((option, optionIndex) => {\n    return {\n      ...option,\n      optionValues: option.optionValues.map((value) => {\n        const targetOptionParams = {...selectedOptions}; // Clones the selected options\n\n        // Modify the selected option value to the current option value\n        targetOptionParams[option.name] = value.name;\n\n        // Encode the new selected option values as a key for mapping to the product variants\n        const targetKey = encodeSelectedProductOptionAsKey(\n          targetOptionParams || [],\n          productOptionMappings,\n        );\n\n        // Top-down option check for existence and availability\n        const topDownKey = (JSON.parse(targetKey) as number[]).slice(\n          0,\n          optionIndex + 1,\n        );\n        const exists = isOptionValueCombinationInEncodedVariant(\n          topDownKey,\n          encodedVariantExistence || '',\n        );\n        const available = isOptionValueCombinationInEncodedVariant(\n          topDownKey,\n          encodedVariantAvailability || '',\n        );\n\n        // Get the variant for the current option value if exists, else use the first selectable variant\n        const variant: ProductVariant =\n          variants[targetKey] || value.firstSelectableVariant;\n\n        // Build the query params for this option value\n        const variantOptionParam = mapSelectedProductOptionToObject(\n          variant.selectedOptions || [],\n        );\n        const searchParams = new URLSearchParams(variantOptionParam);\n        const handle = variant?.product?.handle;\n\n        return {\n          ...value,\n          variant,\n          handle,\n          variantUriQuery: searchParams.toString(),\n          selected: selectedOptions[option.name] === value.name,\n          exists,\n          available,\n          isDifferentProduct: handle !== productHandle,\n        };\n      }),\n    };\n  });\n\n  return productOptions;\n}\n", "/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable hydrogen/prefer-image-component */\nimport * as React from 'react';\nimport type {PartialDeep} from 'type-fest';\nimport type {Image as ImageType} from './storefront-api-types.js';\n\n/*\n * An optional prop you can use to change the\n * default srcSet generation behaviour\n */\ntype SrcSetOptions = {\n  /** The number of sizes to generate */\n  intervals: number;\n  /** The smallest image size */\n  startingWidth: number;\n  /** The increment by which to increase for each size, in pixels */\n  incrementSize: number;\n  /** The size used for placeholder fallback images */\n  placeholderWidth: number;\n};\n\ntype NormalizedProps = {\n  alt: string;\n  aspectRatio: string | undefined;\n  height: string;\n  src: string | undefined;\n  width: string;\n};\n\nexport type LoaderParams = {\n  /** The base URL of the image */\n  src?: ImageType['url'];\n  /** The URL param that controls width */\n  width?: number;\n  /** The URL param that controls height */\n  height?: number;\n  /** The URL param that controls the cropping region */\n  crop?: Crop;\n};\n\nexport type Loader = (params: LoaderParams) => string;\n\n/*\n * @TODO: Expand to include focal point support; and/or switch this to be an SF API type\n */\ntype Crop = 'center' | 'top' | 'bottom' | 'left' | 'right';\n\nexport type HydrogenImageProps = React.ComponentPropsWithRef<'img'> &\n  HydrogenImageBaseProps;\n\ntype HydrogenImageBaseProps = {\n  /** The aspect ratio of the image, in the format of `width/height`.\n   *\n   * @example\n   * ```\n   * <Image data={productImage} aspectRatio=\"4/5\" />\n   * ```\n   */\n  aspectRatio?: string;\n  /** The crop position of the image.\n   *\n   * @remarks\n   * In the event that AspectRatio is set, without specifying a crop,\n   * the Shopify CDN won't return the expected image.\n   *\n   * @defaultValue `center`\n   */\n  crop?: Crop;\n  /** Data mapping to the [Storefront API `Image`](https://shopify.dev/docs/api/storefront/2024-10/objects/Image) object. Must be an Image object.\n   *\n   * @example\n   * ```\n   * import {IMAGE_FRAGMENT, Image} from '@shopify/hydrogen';\n   *\n   * export const IMAGE_QUERY = `#graphql\n   * ${IMAGE_FRAGMENT}\n   * query {\n   *   product {\n   *     featuredImage {\n   *       ...Image\n   *     }\n   *   }\n   * }`\n   *\n   * <Image\n   *   data={productImage}\n   *   sizes=\"(min-width: 45em) 50vw, 100vw\"\n   *   aspectRatio=\"4/5\"\n   * />\n   * ```\n   *\n   * Image: {@link https://shopify.dev/api/storefront/reference/common-objects/image}\n   */\n  data?: PartialDeep<ImageType, {recurseIntoArrays: true}>;\n  /** A function that returns a URL string for an image.\n   *\n   * @remarks\n   * By default, this uses Shopify’s CDN {@link https://cdn.shopify.com/} but you can provide\n   * your own function to use a another provider, as long as they support URL based image transformations.\n   */\n  loader?: Loader;\n  /** An optional prop you can use to change the default srcSet generation behaviour */\n  srcSetOptions?: SrcSetOptions;\n};\n\n/**\n * A Storefront API GraphQL fragment that can be used to query for an image.\n */\nexport const IMAGE_FRAGMENT = `#graphql\n  fragment Image on Image {\n    altText\n    url\n    width\n    height\n  }\n`;\n\n/**\n * Hydrogen’s Image component is a wrapper around the HTML image element.\n * It supports the same props as the HTML `img` element, but automatically\n * generates the srcSet and sizes attributes for you. For most use cases,\n * you’ll want to set the `aspectRatio` prop to ensure the image is sized\n * correctly.\n *\n * @remarks\n * - `decoding` is set to `async` by default.\n * - `loading` is set to `lazy` by default.\n * - `alt` will automatically be set to the `altText` from the Storefront API if passed in the `data` prop\n * - `src` will automatically be set to the `url` from the Storefront API if passed in the `data` prop\n *\n * @example\n * A responsive image with a 4:5 aspect ratio:\n * ```\n * <Image\n *   data={product.featuredImage}\n *   aspectRatio=\"4/5\"\n *   sizes=\"(min-width: 45em) 40vw, 100vw\"\n * />\n * ```\n * @example\n * A fixed size image:\n * ```\n * <Image\n *   data={product.featuredImage}\n *   width={100}\n *   height={100}\n * />\n * ```\n *\n * {@link https://shopify.dev/docs/api/hydrogen-react/components/image}\n */\nexport const Image = React.forwardRef<HTMLImageElement, HydrogenImageProps>(\n  (\n    {\n      alt,\n      aspectRatio,\n      crop = 'center',\n      data,\n      decoding = 'async',\n      height = 'auto',\n      loader = shopifyLoader,\n      loading = 'lazy',\n      sizes,\n      src,\n      srcSetOptions = {\n        intervals: 15,\n        startingWidth: 200,\n        incrementSize: 200,\n        placeholderWidth: 100,\n      },\n      width = '100%',\n      ...passthroughProps\n    },\n    ref,\n  ) => {\n    /*\n     * Gets normalized values for width, height from data  prop\n     */\n    const normalizedData = React.useMemo(() => {\n      /* Only use data width if height is also set */\n      const dataWidth: number | undefined =\n        data?.width && data?.height ? data?.width : undefined;\n\n      const dataHeight: number | undefined =\n        data?.width && data?.height ? data?.height : undefined;\n\n      return {\n        width: dataWidth,\n        height: dataHeight,\n        unitsMatch: Boolean(unitsMatch(dataWidth, dataHeight)),\n      };\n    }, [data]);\n\n    /*\n     * Gets normalized values for width, height, src, alt, and aspectRatio props\n     * supporting the presence of `data` in addition to flat props.\n     */\n    const normalizedProps = React.useMemo(() => {\n      const nWidthProp: string | number = width || '100%';\n      const widthParts = getUnitValueParts(nWidthProp.toString());\n      const nWidth = `${widthParts.number}${widthParts.unit}`;\n\n      const autoHeight = height === undefined || height === null;\n      const heightParts = autoHeight\n        ? null\n        : getUnitValueParts(height.toString());\n\n      const fixedHeight = heightParts\n        ? `${heightParts.number}${heightParts.unit}`\n        : '';\n\n      const nHeight = autoHeight ? 'auto' : fixedHeight;\n\n      const nSrc: string | undefined = src || data?.url;\n\n      if (__HYDROGEN_DEV__ && !nSrc) {\n        console.warn(\n          `No src or data.url provided to Image component.`,\n          passthroughProps?.key || '',\n        );\n      }\n\n      const nAlt: string = data?.altText && !alt ? data?.altText : alt || '';\n\n      const nAspectRatio: string | undefined = aspectRatio\n        ? aspectRatio\n        : normalizedData.unitsMatch\n        ? [\n            getNormalizedFixedUnit(normalizedData.width),\n            getNormalizedFixedUnit(normalizedData.height),\n          ].join('/')\n        : undefined;\n\n      return {\n        width: nWidth,\n        height: nHeight,\n        src: nSrc,\n        alt: nAlt,\n        aspectRatio: nAspectRatio,\n      };\n    }, [\n      width,\n      height,\n      src,\n      data,\n      alt,\n      aspectRatio,\n      normalizedData,\n      passthroughProps?.key,\n    ]);\n\n    const {intervals, startingWidth, incrementSize, placeholderWidth} =\n      srcSetOptions;\n\n    /*\n     * This function creates an array of widths to be used in srcSet\n     */\n    const imageWidths = React.useMemo(() => {\n      return generateImageWidths(\n        width,\n        intervals,\n        startingWidth,\n        incrementSize,\n      );\n    }, [width, intervals, startingWidth, incrementSize]);\n\n    const fixedWidth = isFixedWidth(normalizedProps.width);\n\n    if (__HYDROGEN_DEV__ && !sizes && !fixedWidth) {\n      console.warn(\n        [\n          'No sizes prop provided to Image component,',\n          'you may be loading unnecessarily large images.',\n          `Image used is ${\n            src || data?.url || passthroughProps?.key || 'unknown'\n          }`,\n        ].join(' '),\n      );\n    }\n\n    /*\n     * We check to see whether the image is fixed width or not,\n     * if fixed, we still provide a srcSet, but only to account for\n     * different pixel densities.\n     */\n    if (fixedWidth) {\n      return (\n        <FixedWidthImage\n          aspectRatio={aspectRatio}\n          crop={crop}\n          decoding={decoding}\n          height={height}\n          imageWidths={imageWidths}\n          loader={loader}\n          loading={loading}\n          normalizedProps={normalizedProps}\n          passthroughProps={passthroughProps}\n          ref={ref}\n          width={width}\n          data={data}\n        />\n      );\n    } else {\n      return (\n        <FluidImage\n          aspectRatio={aspectRatio}\n          crop={crop}\n          decoding={decoding}\n          imageWidths={imageWidths}\n          loader={loader}\n          loading={loading}\n          normalizedProps={normalizedProps}\n          passthroughProps={passthroughProps}\n          placeholderWidth={placeholderWidth}\n          ref={ref}\n          sizes={sizes}\n          data={data}\n        />\n      );\n    }\n  },\n);\n\ntype FixedImageExludedProps =\n  | 'data'\n  | 'loader'\n  | 'loaderOptions'\n  | 'sizes'\n  | 'srcSetOptions'\n  | 'widths';\n\ntype FixedWidthImageProps = Omit<HydrogenImageProps, FixedImageExludedProps> &\n  Pick<HydrogenImageBaseProps, 'data'> & {\n    loader: Loader;\n    passthroughProps: React.ImgHTMLAttributes<HTMLImageElement>;\n    normalizedProps: NormalizedProps;\n    imageWidths: number[];\n    ref: React.Ref<HTMLImageElement>;\n  };\n\nconst FixedWidthImage = React.forwardRef<\n  HTMLImageElement,\n  FixedWidthImageProps\n>(\n  (\n    {\n      aspectRatio,\n      crop,\n      decoding,\n      height,\n      imageWidths,\n      loader = shopifyLoader,\n      loading,\n      normalizedProps,\n      passthroughProps,\n      width,\n      data,\n    },\n    ref,\n  ) => {\n    const fixed = React.useMemo(() => {\n      const intWidth: number | undefined = getNormalizedFixedUnit(width);\n      const intHeight: number | undefined = getNormalizedFixedUnit(height);\n\n      /*\n       * The aspect ratio for fixed width images is taken from the explicitly\n       * set prop, but if that's not present, and both width and height are\n       * set, we calculate the aspect ratio from the width and height—as\n       * long as they share the same unit type (e.g. both are 'px').\n       */\n      const fixedAspectRatio = aspectRatio\n        ? aspectRatio\n        : unitsMatch(normalizedProps.width, normalizedProps.height)\n        ? [intWidth, intHeight].join('/')\n        : normalizedProps.aspectRatio\n        ? normalizedProps.aspectRatio\n        : undefined;\n\n      /*\n       * The Sizes Array generates an array of all the parts\n       * that make up the srcSet, including the width, height, and crop\n       */\n      const sizesArray =\n        imageWidths === undefined\n          ? undefined\n          : generateSizes(imageWidths, fixedAspectRatio, crop, {\n              width: data?.width ?? undefined,\n              height: data?.height ?? undefined,\n            });\n\n      const fixedHeight = intHeight\n        ? intHeight\n        : fixedAspectRatio && intWidth\n        ? intWidth * (parseAspectRatio(fixedAspectRatio) ?? 1)\n        : undefined;\n\n      const srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader);\n      const src = loader({\n        src: normalizedProps.src,\n        width: intWidth,\n        height: fixedHeight,\n        crop: normalizedProps.height === 'auto' ? undefined : crop,\n      });\n\n      return {\n        width: intWidth,\n        aspectRatio: fixedAspectRatio,\n        height: fixedHeight,\n        srcSet,\n        src,\n      };\n    }, [\n      aspectRatio,\n      crop,\n      data,\n      height,\n      imageWidths,\n      loader,\n      normalizedProps,\n      width,\n    ]);\n\n    return (\n      <img\n        ref={ref}\n        alt={normalizedProps.alt}\n        decoding={decoding}\n        height={fixed.height}\n        loading={loading}\n        src={fixed.src}\n        srcSet={fixed.srcSet}\n        width={fixed.width}\n        style={{\n          aspectRatio: fixed.aspectRatio,\n          ...passthroughProps.style,\n        }}\n        {...passthroughProps}\n      />\n    );\n  },\n);\n\ntype FluidImageExcludedProps =\n  | 'data'\n  | 'width'\n  | 'height'\n  | 'loader'\n  | 'loaderOptions'\n  | 'srcSetOptions';\n\ntype FluidImageProps = Omit<HydrogenImageProps, FluidImageExcludedProps> &\n  Pick<HydrogenImageBaseProps, 'data'> & {\n    imageWidths: number[];\n    loader: Loader;\n    normalizedProps: NormalizedProps;\n    passthroughProps: React.ImgHTMLAttributes<HTMLImageElement>;\n    placeholderWidth: number;\n    ref: React.Ref<HTMLImageElement>;\n  };\n\nconst FluidImage = React.forwardRef<HTMLImageElement, FluidImageProps>(\n  (\n    {\n      crop,\n      decoding,\n      imageWidths,\n      loader = shopifyLoader,\n      loading,\n      normalizedProps,\n      passthroughProps,\n      placeholderWidth,\n      sizes,\n      data,\n    },\n    ref,\n  ) => {\n    const fluid = React.useMemo(() => {\n      const sizesArray =\n        imageWidths === undefined\n          ? undefined\n          : generateSizes(imageWidths, normalizedProps.aspectRatio, crop, {\n              width: data?.width ?? undefined,\n              height: data?.height ?? undefined,\n            });\n\n      const placeholderHeight =\n        normalizedProps.aspectRatio && placeholderWidth\n          ? placeholderWidth *\n            (parseAspectRatio(normalizedProps.aspectRatio) ?? 1)\n          : undefined;\n\n      const srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader);\n\n      const src = loader({\n        src: normalizedProps.src,\n        width: placeholderWidth,\n        height: placeholderHeight,\n        crop,\n      });\n\n      return {\n        placeholderHeight,\n        srcSet,\n        src,\n      };\n    }, [crop, data, imageWidths, loader, normalizedProps, placeholderWidth]);\n\n    return (\n      <img\n        ref={ref}\n        alt={normalizedProps.alt}\n        decoding={decoding}\n        height={fluid.placeholderHeight}\n        loading={loading}\n        sizes={sizes}\n        src={fluid.src}\n        srcSet={fluid.srcSet}\n        width={placeholderWidth}\n        {...passthroughProps}\n        style={{\n          width: normalizedProps.width,\n          aspectRatio: normalizedProps.aspectRatio,\n          ...passthroughProps.style,\n        }}\n      />\n    );\n  },\n);\n\n/**\n * The shopifyLoader function is a simple utility function that takes a src, width,\n * height, and crop and returns a string that can be used as the src for an image.\n * It can be used with the Hydrogen Image component or with the next/image component.\n * (or any others that accept equivalent configuration)\n * @param src - The source URL of the image, e.g. `https://cdn.shopify.com/static/sample-images/garnished.jpeg`\n * @param width - The width of the image, e.g. `100`\n * @param height - The height of the image, e.g. `100`\n * @param crop - The crop of the image, e.g. `center`\n * @returns A Shopify image URL with the correct query parameters, e.g. `https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=100&height=100&crop=center`\n *\n * @example\n * ```\n * shopifyLoader({\n *   src: 'https://cdn.shopify.com/static/sample-images/garnished.jpeg',\n *   width: 100,\n *   height: 100,\n *   crop: 'center',\n * })\n * ```\n */\nconst PLACEHOLDER_DOMAIN = 'https://placeholder.shopify.com';\nexport function shopifyLoader({src, width, height, crop}: LoaderParams) {\n  if (!src) {\n    return '';\n  }\n\n  const url = new URL(src, PLACEHOLDER_DOMAIN);\n\n  if (width) {\n    url.searchParams.append('width', Math.round(width).toString());\n  }\n\n  if (height) {\n    url.searchParams.append('height', Math.round(height).toString());\n  }\n\n  if (crop) {\n    url.searchParams.append('crop', crop);\n  }\n  return url.href.replace(PLACEHOLDER_DOMAIN, '');\n}\n\n/**\n * Checks whether the width and height share the same unit type\n * @param width - The width of the image, e.g. 100% | 10px\n * @param height - The height of the image, e.g. auto | 100px\n * @returns Whether the width and height share the same unit type (boolean)\n */\nfunction unitsMatch(\n  width: string | number = '100%',\n  height: string | number = 'auto',\n): boolean {\n  return (\n    getUnitValueParts(width.toString()).unit ===\n    getUnitValueParts(height.toString()).unit\n  );\n}\n\n/**\n * Given a CSS size, returns the unit and number parts of the value\n * @param value - The CSS size, e.g. 100px\n * @returns The unit and number parts of the value, e.g. \\{unit: 'px', number: 100\\}\n */\nfunction getUnitValueParts(value: string): {unit: string; number: number} {\n  const unit = value.replace(/[0-9.]/g, '');\n  const number = parseFloat(value.replace(unit, ''));\n\n  return {\n    unit: unit === '' ? (number === undefined ? 'auto' : 'px') : unit,\n    number,\n  };\n}\n\n/**\n * Given a value, returns the width of the image as an integer in pixels\n * @param value - The width of the image, e.g. 16px | 1rem | 1em | 16\n * @returns The width of the image in pixels, e.g. 16, or undefined if the value is not a fixed unit\n */\nfunction getNormalizedFixedUnit(value?: string | number): number | undefined {\n  if (value === undefined) {\n    return;\n  }\n\n  const {unit, number} = getUnitValueParts(value.toString());\n\n  switch (unit) {\n    case 'em':\n      return number * 16;\n    case 'rem':\n      return number * 16;\n    case 'px':\n      return number;\n    case '':\n      return number;\n    default:\n      return;\n  }\n}\n\n/**\n * This function checks whether a width is fixed or not.\n * @param width - The width of the image, e.g. 100 | '100px' | '100em' | '100rem'\n * @returns Whether the width is fixed or not\n */\nfunction isFixedWidth(width: string | number): boolean {\n  const fixedEndings = /\\d(px|em|rem)$/;\n  return typeof width === 'number' || fixedEndings.test(width);\n}\n\n/**\n * This function generates a srcSet for Shopify images.\n * @param src - The source URL of the image, e.g. https://cdn.shopify.com/static/sample-images/garnished.jpeg\n * @param sizesArray - An array of objects containing the `width`, `height`, and `crop` of the image, e.g. [\\{width: 200, height: 200, crop: 'center'\\}, \\{width: 400, height: 400, crop: 'center'\\}]\n * @param loader - A function that takes a Shopify image URL and returns a Shopify image URL with the correct query parameters\n * @returns A srcSet for Shopify images, e.g. 'https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=200&height=200&crop=center 200w, https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=400&height=400&crop=center 400w'\n */\nexport function generateSrcSet(\n  src?: string,\n  sizesArray?: Array<{width?: number; height?: number; crop?: Crop}>,\n  loader: Loader = shopifyLoader,\n): string {\n  if (!src) {\n    return '';\n  }\n\n  if (sizesArray?.length === 0 || !sizesArray) {\n    return src;\n  }\n\n  return sizesArray\n    .map(\n      (size, i) =>\n        `${loader({\n          src,\n          width: size.width,\n          height: size.height,\n          crop: size.crop,\n        })} ${sizesArray.length === 3 ? `${i + 1}x` : `${size.width ?? 0}w`}`,\n    )\n    .join(`, `);\n}\n\n/**\n * This function generates an array of sizes for Shopify images, for both fixed and responsive images.\n * @param width - The CSS width of the image\n * @param intervals - The number of intervals to generate\n * @param startingWidth - The starting width of the image\n * @param incrementSize - The size of each interval\n * @returns An array of widths\n */\nexport function generateImageWidths(\n  width: string | number = '100%',\n  intervals: number,\n  startingWidth: number,\n  incrementSize: number,\n): number[] {\n  const responsive = Array.from(\n    {length: intervals},\n    (_, i) => i * incrementSize + startingWidth,\n  );\n\n  const fixed = Array.from(\n    {length: 3},\n    (_, i) => (i + 1) * (getNormalizedFixedUnit(width) ?? 0),\n  );\n\n  return isFixedWidth(width) ? fixed : responsive;\n}\n\n/**\n * Simple utility function to convert an aspect ratio CSS string to a decimal, currently only supports values like `1/1`, not `0.5`, or `auto`\n * @param aspectRatio - The aspect ratio of the image, e.g. `1/1`\n * @returns The aspect ratio as a number, e.g. `0.5`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio}\n */\nexport function parseAspectRatio(aspectRatio?: string): number | undefined {\n  if (!aspectRatio) return;\n  const [width, height] = aspectRatio.split('/');\n  return 1 / (Number(width) / Number(height));\n}\n\n// Generate data needed for Imagery loader\nexport function generateSizes(\n  imageWidths?: number[],\n  aspectRatio?: string,\n  crop: Crop = 'center',\n  sourceDimensions?: {width?: number; height?: number},\n):\n  | {\n      width: number;\n      height: number | undefined;\n      crop: Crop;\n    }[]\n  | undefined {\n  if (!imageWidths) return;\n  return imageWidths\n    .map((width: number) => {\n      return {\n        width,\n        height: aspectRatio\n          ? width * (parseAspectRatio(aspectRatio) ?? 1)\n          : undefined,\n        crop,\n      };\n    })\n    .filter(({width, height}) => {\n      if (sourceDimensions?.width && width > sourceDimensions.width) {\n        return false;\n      }\n\n      if (\n        sourceDimensions?.height &&\n        height &&\n        height > sourceDimensions.height\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n  /*\n    Given:\n      ([100, 200], 1/1, 'center')\n    Returns:\n      [{width: 100, height: 100, crop: 'center'},\n      {width: 200, height: 200, crop: 'center'}]\n  */\n}\n", "import {useState, useEffect} from 'react';\n\nconst SCRIPTS_LOADED: Record<string, Promise<boolean>> = {};\n\ntype LoadScriptOptions = {\n  module?: boolean;\n  in?: 'head' | 'body';\n  attributes?: Record<string, string>;\n};\n\nexport function loadScript(\n  src: string,\n  options?: LoadScriptOptions,\n): Promise<boolean> {\n  const isScriptLoaded = SCRIPTS_LOADED[src];\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (isScriptLoaded) {\n    return isScriptLoaded;\n  }\n\n  const promise = new Promise<boolean>((resolve, reject) => {\n    const script = document.createElement('script');\n    if (options?.module) {\n      script.type = 'module';\n    } else {\n      script.type = 'text/javascript';\n    }\n    script.src = src;\n    script.onload = (): void => {\n      resolve(true);\n    };\n    script.onerror = (): void => {\n      reject(false);\n    };\n    if (options?.in === 'head') {\n      document.head.appendChild(script);\n    } else {\n      document.body.appendChild(script);\n    }\n\n    const attributes = options?.attributes;\n    if (attributes) {\n      Object.keys(attributes).forEach((key) => {\n        script.setAttribute(key, attributes[key]);\n      });\n    }\n  });\n\n  SCRIPTS_LOADED[src] = promise;\n\n  return promise;\n}\n\ntype LoadScriptParams = Parameters<typeof loadScript>;\n\n/**\n * The `useLoadScript` hook loads an external script tag in the browser. It allows React components to lazy-load large third-party dependencies.\n */\nexport function useLoadScript(\n  url: LoadScriptParams[0],\n  options?: LoadScriptParams[1],\n): ScriptState {\n  const [status, setStatus] = useState<ScriptState>('loading');\n\n  useEffect(\n    () => {\n      loadScript(url, options)\n        .then(() => setStatus('done'))\n        .catch(() => setStatus('error'));\n    },\n    // Ignore options changes since it won't trigger a new load.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [url],\n  );\n\n  return status;\n}\n\ntype ScriptState = 'loading' | 'done' | 'error';\n", "import {forwardRef, type HTMLAttributes} from 'react';\nimport {shopifyLoader} from './Image.js';\nimport type {Video as VideoType} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nexport interface VideoProps {\n  /** An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/2024-10/objects/video). */\n  data: PartialDeep<VideoType, {recurseIntoArrays: true}>;\n  /** An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL. */\n  previewImageOptions?: Parameters<typeof shopifyLoader>[0];\n  /** Props that will be passed to the `video` element's `source` children elements. */\n  sourceProps?: HTMLAttributes<HTMLSourceElement> & {\n    'data-testid'?: string;\n  };\n}\n\n/**\n * The `Video` component renders a `video` for the Storefront API's [Video object](https://shopify.dev/api/storefront/reference/products/video).\n */\nexport const Video = forwardRef<\n  HTMLVideoElement,\n  JSX.IntrinsicElements['video'] & VideoProps\n>((props, ref): JSX.Element => {\n  const {\n    data,\n    previewImageOptions,\n    id = data.id,\n    playsInline = true,\n    controls = true,\n    sourceProps = {},\n    ...passthroughProps\n  } = props;\n\n  const posterUrl = shopifyLoader({\n    src: data.previewImage?.url ?? '',\n    ...previewImageOptions,\n  });\n\n  if (!data.sources) {\n    throw new Error(`<Video/> requires a 'data.sources' array`);\n  }\n\n  return (\n    // eslint-disable-next-line jsx-a11y/media-has-caption\n    <video\n      {...passthroughProps}\n      id={id}\n      playsInline={playsInline}\n      controls={controls}\n      poster={posterUrl}\n      ref={ref}\n    >\n      {data.sources.map((source) => {\n        if (!(source?.url && source?.mimeType)) {\n          throw new Error(`<Video/> needs 'source.url' and 'source.mimeType'`);\n        }\n        return (\n          <source\n            {...sourceProps}\n            key={source.url}\n            src={source.url}\n            type={source.mimeType}\n          />\n        );\n      })}\n    </video>\n  );\n});\n", "import {useState, useEffect, useCallback} from 'react';\nimport {useLoadScript} from './load-script.js';\nimport type {Model3d} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport type {ModelViewerElement} from '@google/model-viewer/lib/model-viewer.js';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'model-viewer': PartialDeep<\n        ModelViewerElement,\n        {recurseIntoArrays: true}\n      >;\n    }\n  }\n}\n\ntype ModelViewerProps = Omit<\n  PartialDeep<JSX.IntrinsicElements['model-viewer'], {recurseIntoArrays: true}>,\n  'src'\n> &\n  ModelViewerBaseProps;\n\ntype ModelViewerBaseProps = {\n  /** An object with fields that correspond to the Storefront API's [Model3D object](https://shopify.dev/api/storefront/2024-10/objects/model3d). */\n  data: PartialDeep<Model3d, {recurseIntoArrays: true}>;\n  /** The callback to invoke when the 'error' event is triggered. Refer to [error in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-error). */\n  onError?: (event: Event) => void;\n  /** The callback to invoke when the `load` event is triggered. Refer to [load in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-load). */\n  onLoad?: (event: Event) => void;\n  /** The callback to invoke when the 'preload' event is triggered. Refer to [preload in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-preload). */\n  onPreload?: (event: Event) => void;\n  /** The callback to invoke when the 'model-visibility' event is triggered. Refer to [model-visibility in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-modelVisibility). */\n  onModelVisibility?: (event: Event) => void;\n  /** The callback to invoke when the 'progress' event is triggered. Refer to [progress in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-progress). */\n  onProgress?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-status' event is triggered. Refer to [ar-status in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arStatus). */\n  onArStatus?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-tracking' event is triggered. Refer to [ar-tracking in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arTracking). */\n  onArTracking?: (event: Event) => void;\n  /** The callback to invoke when the 'quick-look-button-tapped' event is triggered. Refer to [quick-look-button-tapped in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-quickLookButtonTapped). */\n  onQuickLookButtonTapped?: (event: Event) => void;\n  /** The callback to invoke when the 'camera-change' event is triggered. Refer to [camera-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-events-cameraChange). */\n  onCameraChange?: (event: Event) => void;\n  /** The callback to invoke when the 'environment-change' event is triggered. Refer to [environment-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-lightingandenv-events-environmentChange).  */\n  onEnvironmentChange?: (event: Event) => void;\n  /**  The callback to invoke when the 'play' event is triggered. Refer to [play in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-play). */\n  onPlay?: (event: Event) => void;\n  /**  The callback to invoke when the 'pause' event is triggered. Refer to [pause in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-pause). */\n  onPause?: (event: Event) => void;\n  /** The callback to invoke when the 'scene-graph-ready' event is triggered. Refer to [scene-graph-ready in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-scenegraph-events-sceneGraphReady). */\n  onSceneGraphReady?: (event: Event) => void;\n};\n\n/**\n * The `ModelViewer` component renders a 3D model (with the `model-viewer` custom element) for\n * the Storefront API's [Model3d object](https://shopify.dev/api/storefront/reference/products/model3d).\n *\n * The `model-viewer` custom element is lazily downloaded through a dynamically-injected `<script type=\"module\">` tag when the `<ModelViewer />` component is rendered\n *\n * ModelViewer is using version `1.21.1` of the `@google/model-viewer` library.\n */\nexport function ModelViewer(props: ModelViewerProps): JSX.Element | null {\n  const [modelViewer, setModelViewer] = useState<undefined | HTMLElement>(\n    undefined,\n  );\n  const callbackRef = useCallback((node: HTMLElement) => {\n    setModelViewer(node);\n  }, []);\n  const {data, children, className, ...passthroughProps} = props;\n\n  const modelViewerLoadedStatus = useLoadScript(\n    'https://unpkg.com/@google/model-viewer@v1.12.1/dist/model-viewer.min.js',\n    {\n      module: true,\n    },\n  );\n\n  useEffect(() => {\n    const hydrogenEventListener = {\n      error: passthroughProps.onError,\n      load: passthroughProps.onLoad,\n      preload: passthroughProps.onPreload,\n      'model-visibility': passthroughProps.onModelVisibility,\n      progress: passthroughProps.onProgress,\n      'ar-status': passthroughProps.onArStatus,\n      'ar-tracking': passthroughProps.onArTracking,\n      'quick-look-button-tapped': passthroughProps.onQuickLookButtonTapped,\n      'camera-change': passthroughProps.onCameraChange,\n      'environment-change': passthroughProps.onEnvironmentChange,\n      play: passthroughProps.onPlay,\n      pause: passthroughProps.onPause,\n      'scene-graph-ready': passthroughProps.onSceneGraphReady,\n    };\n\n    if (!modelViewer) {\n      return;\n    }\n    Object.entries(hydrogenEventListener).forEach(\n      ([eventName, callbackFunc]) => {\n        if (callbackFunc) {\n          modelViewer.addEventListener(eventName, callbackFunc);\n        }\n      },\n    );\n\n    return () => {\n      if (modelViewer == null) {\n        return;\n      }\n      Object.entries(hydrogenEventListener).forEach(\n        ([eventName, callbackFunc]) => {\n          if (callbackFunc) {\n            modelViewer.removeEventListener(eventName, callbackFunc);\n          }\n        },\n      );\n    };\n  }, [\n    modelViewer,\n    passthroughProps.onArStatus,\n    passthroughProps.onArTracking,\n    passthroughProps.onCameraChange,\n    passthroughProps.onEnvironmentChange,\n    passthroughProps.onError,\n    passthroughProps.onLoad,\n    passthroughProps.onModelVisibility,\n    passthroughProps.onPause,\n    passthroughProps.onPlay,\n    passthroughProps.onPreload,\n    passthroughProps.onProgress,\n    passthroughProps.onQuickLookButtonTapped,\n    passthroughProps.onSceneGraphReady,\n  ]);\n\n  if (modelViewerLoadedStatus !== 'done') {\n    // TODO: What do we want to display while the model-viewer library loads?\n    return null;\n  }\n\n  if (!data.sources?.[0]?.url) {\n    const sourcesUrlError = `<ModelViewer/> requires 'data.sources' prop to be an array, with an object that has a property 'url' on it. Rendering 'null'`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(sourcesUrlError);\n    } else {\n      console.error(sourcesUrlError);\n      return null;\n    }\n  }\n\n  if (__HYDROGEN_DEV__ && !data.alt) {\n    console.warn(\n      `<ModelViewer/> requires the 'data.alt' prop for accessibility`,\n    );\n  }\n\n  return (\n    <model-viewer\n      ref={callbackRef}\n      {...passthroughProps}\n      // @ts-expect-error src should exist\n      // @eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      class={className}\n      id={passthroughProps.id ?? data.id}\n      src={data.sources[0].url}\n      alt={data.alt ?? null}\n      camera-controls={passthroughProps.cameraControls ?? true}\n      poster={(passthroughProps.poster || data.previewImage?.url) ?? null}\n      autoplay={passthroughProps.autoplay ?? true}\n      loading={passthroughProps.loading}\n      reveal={passthroughProps.reveal}\n      ar={passthroughProps.ar}\n      ar-modes={passthroughProps.arModes}\n      ar-scale={passthroughProps.arScale}\n      // @ts-expect-error arPlacement should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-attributes-arPlacement\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ar-placement={passthroughProps.arPlacement}\n      ios-src={passthroughProps.iosSrc}\n      touch-action={passthroughProps.touchAction}\n      disable-zoom={passthroughProps.disableZoom}\n      orbit-sensitivity={passthroughProps.orbitSensitivity}\n      auto-rotate={passthroughProps.autoRotate}\n      auto-rotate-delay={passthroughProps.autoRotateDelay}\n      // @ts-expect-error rotationPerSecond should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-attributes-rotationPerSecond\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      rotation-per-second={passthroughProps.rotationPerSecond}\n      interaction-policy={passthroughProps.interactionPolicy}\n      interaction-prompt={passthroughProps.interactionPrompt}\n      interaction-prompt-style={passthroughProps.interactionPromptStyle}\n      interaction-prompt-threshold={passthroughProps.interactionPromptThreshold}\n      camera-orbit={passthroughProps.cameraOrbit}\n      camera-target={passthroughProps.cameraTarget}\n      field-of-view={passthroughProps.fieldOfView}\n      max-camera-orbit={passthroughProps.maxCameraOrbit}\n      min-camera-orbit={passthroughProps.minCameraOrbit}\n      max-field-of-view={passthroughProps.maxFieldOfView}\n      min-field-of-view={passthroughProps.minFieldOfView}\n      bounds={passthroughProps.bounds}\n      interpolation-decay={passthroughProps.interpolationDecay ?? 100}\n      skybox-image={passthroughProps.skyboxImage}\n      environment-image={passthroughProps.environmentImage}\n      exposure={passthroughProps.exposure}\n      shadow-intensity={passthroughProps.shadowIntensity ?? 0}\n      shadow-softness={passthroughProps.shadowSoftness ?? 0}\n      animation-name={passthroughProps.animationName}\n      animation-crossfade-duration={passthroughProps.animationCrossfadeDuration}\n      variant-name={passthroughProps.variantName}\n      orientation={passthroughProps.orientation}\n      scale={passthroughProps.scale}\n    >\n      {children}\n    </model-viewer>\n  );\n}\n", "import {Image, type HydrogenImageProps} from './Image.js';\nimport {Video} from './Video.js';\nimport {ExternalVideo} from './ExternalVideo.js';\nimport {ModelViewer} from './ModelViewer.js';\nimport type {MediaEdge as MediaEdgeType} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport type {ModelViewerElement} from '@google/model-viewer/lib/model-viewer.js';\n\ntype BaseProps = React.HTMLAttributes<\n  HTMLImageElement | HTMLVideoElement | HTMLIFrameElement | ModelViewerElement\n>;\nexport interface MediaFileProps extends BaseProps {\n  /** An object with fields that correspond to the Storefront API's [Media object](https://shopify.dev/api/storefront/reference/products/media). */\n  data: PartialDeep<MediaEdgeType['node'], {recurseIntoArrays: true}>;\n  /** The options for the `Image`, `Video`, `ExternalVideo`, or `ModelViewer` components. */\n  mediaOptions?: MediaOptions;\n}\n\ntype MediaOptions = {\n  /** Props that will only apply when an `<Image />` is rendered */\n  image?: Omit<HydrogenImageProps, 'data'>;\n  /** Props that will only apply when a `<Video />` is rendered */\n  video?: Omit<React.ComponentProps<typeof Video>, 'data'>;\n  /** Props that will only apply when an `<ExternalVideo />` is rendered */\n  externalVideo?: Omit<\n    React.ComponentProps<typeof ExternalVideo>['options'],\n    'data'\n  >;\n  /** Props that will only apply when a `<ModelViewer />` is rendered */\n  modelViewer?: Omit<typeof ModelViewer, 'data'>;\n};\n\n/**\n * The `MediaFile` component renders the media for the Storefront API's\n * [Media object](https://shopify.dev/api/storefront/reference/products/media). It renders an `Image`, a\n * `Video`, an `ExternalVideo`, or a `ModelViewer` depending on the `__typename` of the `data` prop.\n */\nexport function MediaFile({\n  data,\n  mediaOptions,\n  ...passthroughProps\n}: MediaFileProps): JSX.Element | null {\n  switch (data.__typename) {\n    case 'MediaImage': {\n      if (!data.image) {\n        const noDataImage = `<MediaFile/>: 'data.image' does not exist for __typename of 'MediaImage'; rendering 'null' by default.`;\n        if (__HYDROGEN_DEV__) {\n          throw new Error(noDataImage);\n        } else {\n          console.warn(noDataImage);\n          return null;\n        }\n      }\n\n      return (\n        <Image\n          {...passthroughProps}\n          {...mediaOptions?.image}\n          data={data.image}\n        />\n      );\n    }\n    case 'Video': {\n      return (\n        <Video {...passthroughProps} {...mediaOptions?.video} data={data} />\n      );\n    }\n    case 'ExternalVideo': {\n      return (\n        <ExternalVideo\n          {...passthroughProps}\n          {...mediaOptions?.externalVideo}\n          data={data}\n        />\n      );\n    }\n    case 'Model3d': {\n      return (\n        // @ts-expect-error There are issues with the inferred HTML attribute types here for ModelViewer (and contentEditable), but I think that's a little bit beyond me at the moment\n        <ModelViewer\n          {...passthroughProps}\n          {...mediaOptions?.modelViewer}\n          data={data}\n        />\n      );\n    }\n    default: {\n      const typenameMissingMessage = `<MediaFile /> requires the '__typename' property to exist on the 'data' prop in order to render the matching sub-component for this type of media.`;\n      if (__HYDROGEN_DEV__) {\n        throw new Error(typenameMissingMessage);\n      } else {\n        console.error(`${typenameMissingMessage}  Rendering 'null' by default`);\n        return null;\n      }\n    }\n  }\n}\n", "import type {\n  Collection,\n  GenericFile,\n  Metafield as MetafieldBaseType,\n  MoneyV2,\n  Page,\n  Product,\n  ProductVariant,\n} from './storefront-api-types.js';\nimport type {PartialDeep, Simplify} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\nimport {RootASTNode as RichTextRootASTNode} from './RichText.types.js';\n\n/**\n * A function that uses `metafield.type` to parse the Metafield's `value` or `reference` or `references` (depending on the `metafield.type`) and places the result in `metafield.parsedValue`\n *\n * TypeScript developers can use the type `ParsedMetafields` from this package to get the returned object's type correct. For example:\n *\n * ```\n * parseMetafield<ParsedMetafields['boolean']>({type: 'boolean', value: 'false'}\n * ```\n */\nexport function parseMetafield<ReturnGeneric>(\n  metafield: PartialDeep<MetafieldBaseType, {recurseIntoArrays: true}>,\n): ReturnGeneric {\n  if (!metafield.type) {\n    const noTypeError = `parseMetafield(): The 'type' field is required in order to parse the Metafield.`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(noTypeError);\n    } else {\n      console.error(`${noTypeError} Returning 'parsedValue' of 'null'`);\n      return {\n        ...metafield,\n        parsedValue: null,\n      } as ReturnGeneric;\n    }\n  }\n\n  switch (metafield.type) {\n    case 'boolean':\n      return {\n        ...metafield,\n        parsedValue: metafield.value === 'true',\n      } as ReturnGeneric;\n\n    case 'collection_reference':\n    case 'file_reference':\n    case 'page_reference':\n    case 'product_reference':\n    case 'variant_reference':\n      return {\n        ...metafield,\n        parsedValue: metafield.reference,\n      } as ReturnGeneric;\n\n    case 'color':\n    case 'multi_line_text_field':\n    case 'single_line_text_field':\n    case 'url':\n      return {\n        ...metafield,\n        parsedValue: metafield.value,\n      } as ReturnGeneric;\n\n    // TODO: 'money' should probably be parsed even further to like `useMoney()`, but that logic needs to be extracted first so it's not a hook\n    case 'dimension':\n    case 'money':\n    case 'json':\n    case 'rating':\n    case 'volume':\n    case 'weight':\n    case 'rich_text_field':\n    case 'list.color':\n    case 'list.dimension':\n    case 'list.number_integer':\n    case 'list.number_decimal':\n    case 'list.rating':\n    case 'list.single_line_text_field':\n    case 'list.url':\n    case 'list.volume':\n    case 'list.weight': {\n      let parsedValue = null;\n      try {\n        parsedValue = parseJSON(metafield.value ?? '');\n      } catch (err) {\n        const parseError = `parseMetafield(): attempted to JSON.parse the 'metafield.value' property, but failed.`;\n        if (__HYDROGEN_DEV__) {\n          throw new Error(parseError);\n        } else {\n          console.error(`${parseError} Returning 'null' for 'parsedValue'`);\n        }\n        parsedValue = null;\n      }\n      return {\n        ...metafield,\n        parsedValue,\n      } as ReturnGeneric;\n    }\n\n    case 'date':\n    case 'date_time':\n      return {\n        ...metafield,\n        parsedValue: new Date(metafield.value ?? ''),\n      } as ReturnGeneric;\n\n    case 'list.date':\n    case 'list.date_time': {\n      const jsonParseValue = parseJSON(metafield?.value ?? '') as string[];\n      return {\n        ...metafield,\n        parsedValue: jsonParseValue.map((dateString) => new Date(dateString)),\n      } as ReturnGeneric;\n    }\n\n    case 'number_decimal':\n    case 'number_integer':\n      return {\n        ...metafield,\n        parsedValue: Number(metafield.value),\n      } as ReturnGeneric;\n\n    case 'list.collection_reference':\n    case 'list.file_reference':\n    case 'list.page_reference':\n    case 'list.product_reference':\n    case 'list.variant_reference':\n      return {\n        ...metafield,\n        parsedValue: flattenConnection(metafield.references ?? undefined),\n      } as ReturnGeneric;\n\n    default: {\n      const typeNotFoundError = `parseMetafield(): the 'metafield.type' you passed in is not supported. Your type: \"${metafield.type}\". If you believe this is an error, please open an issue on GitHub.`;\n      if (__HYDROGEN_DEV__) {\n        throw new Error(typeNotFoundError);\n      } else {\n        console.error(\n          `${typeNotFoundError}  Returning 'parsedValue' of 'null'`,\n        );\n        return {\n          ...metafield,\n          parsedValue: null,\n        } as ReturnGeneric;\n      }\n    }\n  }\n}\n\n/**\n * Parses a JSON string while preventing prototype injection attacks.\n */\nexport function parseJSON(json: string): unknown {\n  if (String(json).includes('__proto__')) {\n    return JSON.parse(json, (k, v) => {\n      if (k !== '__proto__') return v as unknown;\n    }) as unknown;\n  }\n  return JSON.parse(json) as unknown;\n}\n\n// taken from https://shopify.dev/apps/metafields/types\nexport const allMetafieldTypesArray = [\n  'boolean',\n  'collection_reference',\n  'color',\n  'date',\n  'date_time',\n  'dimension',\n  'file_reference',\n  'json',\n  'money',\n  'rich_text_field',\n  'multi_line_text_field',\n  'number_decimal',\n  'number_integer',\n  'page_reference',\n  'product_reference',\n  'rating',\n  'single_line_text_field',\n  'url',\n  'variant_reference',\n  'volume',\n  'weight',\n  // list metafields\n  'list.collection_reference',\n  'list.color',\n  'list.date',\n  'list.date_time',\n  'list.dimension',\n  'list.file_reference',\n  'list.number_integer',\n  'list.number_decimal',\n  'list.page_reference',\n  'list.product_reference',\n  'list.rating',\n  'list.single_line_text_field',\n  'list.url',\n  'list.variant_reference',\n  'list.volume',\n  'list.weight',\n] as const;\n\n/** A union of all the supported `metafield.type`s */\nexport type MetafieldTypeTypes = (typeof allMetafieldTypesArray)[number];\n\n/**\n * A mapping of a Metafield's `type` to the TypeScript type that is returned from `parseMetafield()`\n * For example, when using `parseMetafield()`, the type will be correctly returned when used like the following:\n *\n * ```\n * const parsedMetafield = parseMetafield<ParsedMetafields['boolean']>(metafield);`\n * ```\n * `parsedMetafield.parsedValue`'s type is now `boolean`\n */\nexport type ParsedMetafields<ExtraTypeGeneric = void> = {\n  /** A Metafield that's been parsed, with a `parsedValue` of `boolean` */\n  boolean: Simplify<BooleanParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Collection` object (as defined by the Storefront API) */\n  collection_reference: Simplify<CollectionParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  color: Simplify<ColorParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Date` */\n  date: Simplify<DatesParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Date` */\n  date_time: Simplify<DatesParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  dimension: Simplify<MeasurementParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `GenericFile` object (as defined by the Storefront API) */\n  file_reference: Simplify<FileRefParsedMetafield>;\n  /**\n   * A Metafield that's been parsed, with a `parsedValue` of type `unknown`, unless you pass in the type as a generic. For example:\n   *\n   * ```\n   * ParsedMetafields<MyJsonType>['json']\n   * ```\n   */\n  json: Simplify<JsonParsedMetafield<ExtraTypeGeneric>>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Money` */\n  money: Simplify<MoneyParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  multi_line_text_field: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `number` */\n  number_decimal: Simplify<NumberParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `number` */\n  number_integer: Simplify<NumberParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Page` object (as defined by the Storefront API) */\n  page_reference: Simplify<PageParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Product` object (as defined by the Storefront API) */\n  product_reference: Simplify<ProductParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Rating` */\n  rating: Simplify<RatingParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Rating` */\n  rich_text_field: Simplify<RichTextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  single_line_text_field: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  url: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `ProductVariant` object (as defined by the Storefront API) */\n  variant_reference: Simplify<VariantParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  volume: Simplify<MeasurementParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  weight: Simplify<MeasurementParsedMetafield>;\n  // list metafields\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Collection` objects (as defined by the Storefront API) */\n  'list.collection_reference': Simplify<CollectionListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.color': Simplify<ColorListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of Date objects */\n  'list.date': Simplify<DatesListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of Date objects */\n  'list.date_time': Simplify<DatesListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement` objects */\n  'list.dimension': Simplify<MeasurementListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `GenericFile` objects (as defined by the Storefront API) */\n  'list.file_reference': Simplify<FileListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of numbers */\n  'list.number_integer': Simplify<NumberListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of numbers */\n  'list.number_decimal': Simplify<NumberListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Page` objects (as defined by the Storefront API) */\n  'list.page_reference': Simplify<PageListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Product` objects (as defined by the Storefront API) */\n  'list.product_reference': Simplify<ProductListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Rating`s */\n  'list.rating': Simplify<RatingListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.single_line_text_field': Simplify<TextListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.url': Simplify<TextListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `ProductVariant` objects (as defined by the Storefront API) */\n  'list.variant_reference': Simplify<VariantListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement`s */\n  'list.volume': Simplify<MeasurementListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement`s */\n  'list.weight': Simplify<MeasurementListParsedMetafield>;\n};\n\ninterface ParsedBase extends MetafieldBaseType {\n  type: MetafieldTypeTypes;\n  parsedValue: unknown;\n}\n\ninterface BooleanParsedMetafield extends ParsedBase {\n  type: 'boolean';\n  parsedValue: boolean | null;\n}\ntype CollectionParsedRefMetafield = MetafieldBaseType & {\n  type: 'collection_reference';\n  parsedValue: Collection | null;\n};\ntype ColorParsedMetafield = MetafieldBaseType & {\n  type: 'color';\n  parsedValue: string | null;\n};\ntype DatesParsedMetafield = MetafieldBaseType & {\n  type: 'date' | 'date_time';\n  parsedValue: Date | null;\n};\n\ntype MeasurementParsedMetafield = MetafieldBaseType & {\n  type: 'dimension' | 'weight' | 'volume';\n  parsedValue: Measurement | null;\n};\n\ntype FileRefParsedMetafield = MetafieldBaseType & {\n  type: 'file_reference';\n  parsedValue: GenericFile | null;\n};\n\ntype JsonParsedMetafield<JsonTypeGeneric = void> = MetafieldBaseType & {\n  type: 'json';\n  parsedValue: JsonTypeGeneric extends void ? unknown : JsonTypeGeneric | null;\n};\n\ntype MoneyParsedMetafield = MetafieldBaseType & {\n  type: 'money';\n  parsedValue: MoneyV2 | null;\n};\n\ntype TextParsedMetafield = MetafieldBaseType & {\n  type: 'single_line_text_field' | 'multi_line_text_field' | 'url';\n  parsedValue: string | null;\n};\n\ntype NumberParsedMetafield = MetafieldBaseType & {\n  type: 'number_decimal' | 'number_integer';\n  parsedValue: number | null;\n};\n\ntype PageParsedRefMetafield = MetafieldBaseType & {\n  type: 'page_reference';\n  parsedValue: Page | null;\n};\n\ntype ProductParsedRefMetafield = MetafieldBaseType & {\n  type: 'product_reference';\n  parsedValue: Product | null;\n};\n\ntype RatingParsedMetafield = MetafieldBaseType & {\n  type: 'rating';\n  parsedValue: Rating | null;\n};\n\ntype RichTextParsedMetafield = MetafieldBaseType & {\n  type: 'rich_text_field';\n  parsedValue: RichTextRootASTNode | null;\n};\n\ntype VariantParsedRefMetafield = MetafieldBaseType & {\n  type: 'variant_reference';\n  parsedValue: ProductVariant | null;\n};\n\ntype CollectionListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.collection_reference';\n  parsedValue: Array<Collection> | null;\n};\n\ntype ColorListParsedMetafield = MetafieldBaseType & {\n  type: 'list.color';\n  parsedValue: Array<string> | null;\n};\n\ntype DatesListParsedMetafield = MetafieldBaseType & {\n  type: 'list.date' | 'list.date_time';\n  parsedValue: Array<Date> | null;\n};\n\ntype MeasurementListParsedMetafield = MetafieldBaseType & {\n  type: 'list.dimension' | 'list.weight' | 'list.volume';\n  parsedValue: Array<Measurement> | null;\n};\n\ntype FileListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.file_reference';\n  parsedValue: Array<GenericFile> | null;\n};\n\ntype TextListParsedMetafield = MetafieldBaseType & {\n  type: 'list.single_line_text_field' | 'list.url';\n  parsedValue: Array<string> | null;\n};\n\ntype NumberListParsedMetafield = MetafieldBaseType & {\n  type: 'list.number_decimal' | 'list.number_integer';\n  parsedValue: Array<number> | null;\n};\n\ntype PageListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.page_reference';\n  parsedValue: Array<Page> | null;\n};\n\ntype ProductListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.product_reference';\n  parsedValue: Array<Product> | null;\n};\n\ntype RatingListParsedMetafield = MetafieldBaseType & {\n  type: 'list.rating';\n  parsedValue: Array<Rating> | null;\n};\n\ntype VariantListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.variant_reference';\n  parsedValue: Array<ProductVariant> | null;\n};\n\nexport type Measurement = {\n  unit: string;\n  value: number;\n};\n\nexport interface Rating {\n  value: number;\n  scale_min: number;\n  scale_max: number;\n}\n", "import {createElement, type ReactNode} from 'react';\n\nexport type CustomComponents = {\n  /** The root node of the rich text. Defaults to `<div>` */\n  root?: typeof Root;\n  /** Customize the headings. Each heading has a `level` property from 1-6. Defaults to `<h1>` to `<h6>` */\n  heading?: typeof Heading;\n  /** Customize paragraphs. Defaults to `<p>` */\n  paragraph?: typeof Paragraph;\n  /** Customize how text nodes. They can either be bold or italic. Defaults to `<em>`, `<strong>` or text. */\n  text?: typeof Text;\n  /** Customize links. Defaults to a React Router `<Link>` component in Hydrogen and a `<a>` in Hydrogen React. */\n  link?: typeof RichTextLink;\n  /** Customize lists. They can be either ordered or unordered. Defaults to `<ol>` or `<ul>` */\n  list?: typeof List;\n  /** Customize list items. Defaults to `<li>`. */\n  listItem?: typeof ListItem;\n};\n\nexport const RichTextComponents = {\n  root: Root,\n  heading: Heading,\n  paragraph: Paragraph,\n  text: Text,\n  link: RichTextLink,\n  list: List,\n  'list-item': ListItem,\n};\n\nfunction Root({\n  node,\n}: {\n  node: {\n    type: 'root';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <div>{node.children}</div>;\n}\n\nfunction Heading({\n  node,\n}: {\n  node: {\n    type: 'heading';\n    level: number;\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return createElement(`h${node.level ?? '1'}`, null, node.children);\n}\n\nfunction Paragraph({\n  node,\n}: {\n  node: {\n    type: 'paragraph';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <p>{node.children}</p>;\n}\n\nfunction Text({\n  node,\n}: {\n  node: {\n    type: 'text';\n    italic?: boolean;\n    bold?: boolean;\n    value?: string;\n  };\n}): ReactNode {\n  if (node.bold && node.italic)\n    return (\n      <em>\n        <strong>{node.value}</strong>\n      </em>\n    );\n\n  if (node.bold) return <strong>{node.value}</strong>;\n  if (node.italic) return <em>{node.value}</em>;\n\n  return node.value;\n}\n\nfunction RichTextLink({\n  node,\n}: {\n  node: {\n    type: 'link';\n    url: string;\n    title?: string;\n    target?: string;\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return (\n    <a href={node.url} title={node.title} target={node.target}>\n      {node.children}\n    </a>\n  );\n}\n\nfunction List({\n  node,\n}: {\n  node: {\n    type: 'list';\n    listType: 'unordered' | 'ordered';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  const List = node.listType === 'unordered' ? 'ul' : 'ol';\n  return <List>{node.children}</List>;\n}\n\nfunction ListItem({\n  node,\n}: {\n  node: {\n    type: 'list-item';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <li>{node.children}</li>;\n}\n", "import {createElement, Fragment, type ReactNode, useMemo} from 'react';\nimport type {RichTextASTNode} from './RichText.types.js';\nimport {\n  type CustomComponents,\n  RichTextComponents,\n} from './RichText.components.js';\n\nexport interface RichTextPropsBase<ComponentGeneric extends React.ElementType> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`. */\n  as?: ComponentGeneric;\n  /** The JSON string that correspond to the Storefront API's [RichText format](https://shopify.dev/docs/apps/custom-data/metafields/types#rich-text-formatting). */\n  data: string;\n  /** Customize how rich text components are rendered */\n  components?: CustomComponents;\n  /** Remove rich text formatting and render plain text */\n  plain?: boolean;\n}\n\nexport function RichText<ComponentGeneric extends React.ElementType = 'div'>({\n  as,\n  data,\n  plain,\n  components,\n  ...passthroughProps\n}: RichTextProps<ComponentGeneric>): JSX.Element {\n  try {\n    const Wrapper = as ?? 'div';\n    const parsedData = useMemo(\n      () => JSON.parse(data) as RichTextASTNode,\n      [data],\n    );\n\n    return (\n      <Wrapper {...passthroughProps}>\n        {plain\n          ? richTextToString(parsedData)\n          : serializeRichTextASTNode(components, parsedData)}\n      </Wrapper>\n    );\n  } catch (e) {\n    throw new Error(\n      '[h2:error:RichText] Parsing error. Make sure to pass a JSON string of rich text metafield',\n      {\n        cause: e,\n      },\n    );\n  }\n}\n\n// This article helps understand the typing here https://www.benmvp.com/blog/polymorphic-react-components-typescript/ Ben is the best :)\nexport type RichTextProps<ComponentGeneric extends React.ElementType> =\n  RichTextPropsBase<ComponentGeneric> &\n    Omit<\n      React.ComponentPropsWithoutRef<ComponentGeneric>,\n      keyof RichTextPropsBase<ComponentGeneric>\n    >;\n\nfunction serializeRichTextASTNode(\n  components: CustomComponents = {},\n  node: RichTextASTNode,\n  index = 0,\n): ReactNode {\n  let children;\n  if ('children' in node) {\n    children = node.children.map((child, childIndex) =>\n      serializeRichTextASTNode(components, child, childIndex),\n    );\n  }\n\n  const Component =\n    components[node.type === 'list-item' ? 'listItem' : node.type] ??\n    RichTextComponents[node.type];\n\n  switch (node.type) {\n    case 'root':\n      return createElement(\n        Component as Exclude<CustomComponents['root'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'root',\n            children,\n          },\n        },\n      );\n    case 'heading':\n      return createElement(\n        Component as Exclude<CustomComponents['heading'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'heading',\n            level: node.level,\n            children,\n          },\n        },\n      );\n    case 'paragraph':\n      return createElement(\n        Component as Exclude<CustomComponents['paragraph'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'paragraph',\n            children,\n          },\n        },\n      );\n    case 'text': {\n      const elements = (node.value ?? '')\n        .split('\\n')\n        .flatMap((value, subindex) => {\n          const key = `${index}-${value}-${subindex}`;\n          const textElement = createElement(\n            Component as Exclude<CustomComponents['text'], undefined>,\n            {\n              key,\n              node: {\n                type: 'text',\n                italic: node.italic,\n                bold: node.bold,\n                value,\n              },\n            },\n          );\n\n          // Add a `<br>` before each substring except the first one\n          return subindex === 0\n            ? textElement\n            : [createElement('br', {key: `${key}-br`}), textElement];\n        });\n\n      return elements.length > 1\n        ? createElement(Fragment, {key: index}, elements)\n        : elements[0];\n    }\n    case 'link':\n      return createElement(\n        Component as Exclude<CustomComponents['link'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'link',\n            url: node.url,\n            title: node.title,\n            target: node.target,\n            children,\n          },\n        },\n      );\n    case 'list':\n      return createElement(\n        Component as Exclude<CustomComponents['list'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'list',\n            listType: node.listType,\n            children,\n          },\n        },\n      );\n    case 'list-item':\n      return createElement(\n        Component as Exclude<CustomComponents['listItem'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'list-item',\n            children,\n          },\n        },\n      );\n  }\n}\n\nfunction richTextToString(\n  node: RichTextASTNode,\n  result: string[] = [],\n): string {\n  switch (node.type) {\n    case 'root':\n      node.children.forEach((child) => richTextToString(child, result));\n      break;\n    case 'heading':\n    case 'paragraph':\n      node.children.forEach((child) => richTextToString(child, result));\n      result.push(' ');\n      break;\n    case 'text':\n      result.push(node.value || '');\n      break;\n    case 'link':\n      node.children.forEach((child) => richTextToString(child, result));\n      break;\n    case 'list':\n      node.children.forEach((item) => {\n        if (item.children) {\n          item.children.forEach((child) => richTextToString(child, result));\n        }\n        result.push(' ');\n      });\n      break;\n    default:\n      throw new Error(`Unknown node encountered ${node.type}`);\n  }\n\n  return result.join('').trim();\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport type RichTextPropsForDocs<AsType extends React.ElementType = 'div'> =\n  RichTextPropsBase<AsType>;\n", "import {defaultShopifyContext, useShop} from './ShopifyProvider.js';\nimport {useLoadScript} from './load-script.js';\nimport {parseGid} from './analytics-utils.js';\n\n// By using 'never' in the \"or\" cases below, it makes these props \"exclusive\" and means that you cannot pass both of them; you must pass either one OR the other.\ntype ShopPayButtonProps = ShopPayButtonStyleProps &\n  ShopPayDomainProps &\n  ShopPayChannelAttribution &\n  (ShopPayVariantIds | ShopPayVariantAndQuantities);\n\ntype ShopPayButtonStyleProps = {\n  /** A string of classes to apply to the `div` that wraps the Shop Pay button. */\n  className?: string;\n  /** A string that's applied to the [CSS custom property (variable)](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) `--shop-pay-button-width` for the [Buy with Shop Pay component](https://shopify.dev/custom-storefronts/tools/web-components#buy-with-shop-pay-component). */\n  width?: string;\n};\n\ntype ShopPayDomainProps = {\n  /** The domain of your Shopify storefront URL (eg: `your-store.myshopify.com`). */\n  storeDomain?: string;\n};\n\ntype ShopPayVariantIds = {\n  /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use `variantIdsAndQuantities`. */\n  variantIds: string[];\n  /** An array of variant IDs and quantities to purchase with Shop Pay. */\n  variantIdsAndQuantities?: never;\n};\n\ntype ShopPayVariantAndQuantities = {\n  /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use `variantIdsAndQuantities`. */\n  variantIds?: never;\n  /** An array of variant IDs and quantities to purchase with Shop Pay. */\n  variantIdsAndQuantities: Array<{\n    id: string;\n    quantity: number;\n  }>;\n};\n\ntype ShopPayChannelAttribution = {\n  /** A string that adds channel attribution to the order. Can be either `headless` or `hydrogen` */\n  channel?: 'headless' | 'hydrogen';\n};\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'shop-pay-button': {\n        channel?: string;\n        variants: string;\n        'store-url': string;\n      };\n    }\n  }\n}\n\nconst SHOPJS_URL =\n  'https://cdn.shopify.com/shopifycloud/shop-js/v1.0/client.js';\n\nfunction isChannel(\n  channel: string,\n): channel is Exclude<ShopPayChannelAttribution['channel'], undefined> {\n  return channel === 'headless' || channel === 'hydrogen';\n}\n\n/**\n * The `ShopPayButton` component renders a button that redirects to the Shop Pay checkout.\n * It renders a [`<shop-pay-button>`](https://shopify.dev/custom-storefronts/tools/web-components) custom element, for which it will lazy-load the source code automatically.\n * It relies on the `<ShopProvider>` context provider.\n */\nexport function ShopPayButton({\n  channel,\n  variantIds,\n  className,\n  variantIdsAndQuantities,\n  width,\n  storeDomain: _storeDomain,\n}: ShopPayButtonProps): JSX.Element {\n  const shop = useShop();\n  const storeDomain = _storeDomain || shop?.storeDomain;\n  const shopPayLoadedStatus = useLoadScript(SHOPJS_URL);\n\n  let ids: string[] = [];\n  let channelAttribution: string | undefined;\n\n  if (!storeDomain || storeDomain === defaultShopifyContext.storeDomain) {\n    throw new Error(MissingStoreDomainErrorMessage);\n  }\n\n  if (variantIds && variantIdsAndQuantities) {\n    throw new Error(DoublePropsErrorMessage);\n  }\n\n  if (!variantIds && !variantIdsAndQuantities) {\n    throw new Error(MissingPropsErrorMessage);\n  }\n\n  if (channel) {\n    if (isChannel(channel)) {\n      channelAttribution = channel;\n    } else {\n      throw new Error(InvalidChannelErrorMessage);\n    }\n  }\n\n  if (variantIds) {\n    ids = variantIds.reduce<string[]>((prev, curr) => {\n      const bareId = parseGid(curr).id;\n      if (bareId) {\n        prev.push(bareId);\n      }\n      return prev;\n    }, []);\n  } else if (variantIdsAndQuantities) {\n    ids = variantIdsAndQuantities.reduce<string[]>((prev, curr) => {\n      const bareId = parseGid(curr?.id).id;\n      if (bareId) {\n        prev.push(`${bareId}:${curr?.quantity ?? 1}`);\n      }\n      return prev;\n    }, []);\n  } else {\n    throw new Error(MissingPropsErrorMessage);\n  }\n\n  if (ids.length === 0) {\n    throw new Error(InvalidPropsErrorMessage);\n  }\n\n  const style = width\n    ? ({\n        '--shop-pay-button-width': width,\n      } as React.CSSProperties)\n    : undefined;\n\n  return (\n    <div className={className} style={style}>\n      {shopPayLoadedStatus === 'done' && (\n        <shop-pay-button\n          {...(channelAttribution ? {channel: channelAttribution} : {})}\n          store-url={storeDomain}\n          variants={ids.join(',')}\n        />\n      )}\n    </div>\n  );\n}\n\nexport const MissingStoreDomainErrorMessage =\n  'You must pass a \"storeDomain\" prop to the \"ShopPayButton\" component, or wrap it in a \"ShopifyProvider\" component.';\nexport const InvalidPropsErrorMessage = `You must pass in \"variantIds\" in the form of [\"gid://shopify/ProductVariant/1\"]`;\nexport const MissingPropsErrorMessage = `You must pass in either \"variantIds\" or \"variantIdsAndQuantities\" to ShopPayButton`;\nexport const DoublePropsErrorMessage = `You must provide either a variantIds or variantIdsAndQuantities prop, but not both in the ShopPayButton component`;\nexport const InvalidChannelErrorMessage = `Invalid channel attribution value. Must be either \"headless\" or \"hydrogen\"`;\n", "import {useEffect} from 'react';\nimport {mapSelectedProductOptionToObject} from './getProductOptions.js';\nimport {SelectedOption} from './storefront-api-types.js';\n\nexport function useSelectedOptionInUrlParam(\n  selectedOptions: Pick<SelectedOption, 'name' | 'value'>[],\n): null {\n  useEffect(() => {\n    const optionsSearchParams = new URLSearchParams(\n      mapSelectedProductOptionToObject(selectedOptions || []),\n    );\n    const currentSearchParams = new URLSearchParams(window.location.search);\n\n    // ts ignoring the URLSearchParams not iterable error for now\n    // https://stackoverflow.com/questions/72522489/urlsearchparams-not-accepting-string#answer-72522838\n    // TODO: update ts lib\n    const combinedSearchParams = new URLSearchParams({\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ...Object.fromEntries(currentSearchParams),\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ...Object.fromEntries(optionsSearchParams),\n    });\n\n    if (combinedSearchParams.size > 0) {\n      window.history.replaceState(\n        {},\n        '',\n        `${window.location.pathname}?${combinedSearchParams.toString()}`,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(selectedOptions)]);\n\n  return null;\n}\n", "import {useEffect} from 'react';\nimport {stringify} from 'worktop/cookie';\nimport {SHOPIFY_Y, SHOPIFY_S} from './cart-constants.js';\nimport {buildUUID, getShopifyCookies} from './cookies-utils.js';\n\nconst longTermLength = 60 * 60 * 24 * 360 * 1; // ~1 year expiry\nconst shortTermLength = 60 * 30; // 30 mins\n\ntype UseShopifyCookiesOptions = {\n  /**\n   * If set to `false`, Shopify cookies will be removed.\n   * If set to `true`, Shopify unique user token cookie will have cookie expiry of 1 year.\n   * Defaults to false.\n   **/\n  hasUserConsent?: boolean;\n  /**\n   * The domain scope of the cookie. Defaults to empty string.\n   **/\n  domain?: string;\n  /**\n   * The checkout domain of the shop. Defaults to empty string. If set, the cookie domain will check if it can be set with the checkout domain.\n   */\n  checkoutDomain?: string;\n};\n\nexport function useShopifyCookies(options?: UseShopifyCookiesOptions): void {\n  const {\n    hasUserConsent = false,\n    domain = '',\n    checkoutDomain = '',\n  } = options || {};\n  useEffect(() => {\n    const cookies = getShopifyCookies(document.cookie);\n\n    /**\n     * Setting cookie with domain\n     *\n     * If no domain is provided, the cookie will be set for the current host.\n     * For Shopify, we need to ensure this domain is set with a leading dot.\n     */\n\n    // Use override domain or current host\n    let currentDomain = domain || window.document.location.host;\n\n    if (checkoutDomain) {\n      const checkoutDomainParts = checkoutDomain.split('.').reverse();\n      const currentDomainParts = currentDomain.split('.').reverse();\n      const sameDomainParts: Array<string> = [];\n      checkoutDomainParts.forEach((part, index) => {\n        if (part === currentDomainParts[index]) {\n          sameDomainParts.push(part);\n        }\n      });\n\n      currentDomain = sameDomainParts.reverse().join('.');\n    }\n\n    // Reset domain if localhost\n    if (/^localhost/.test(currentDomain)) currentDomain = '';\n\n    // Shopify checkout only consumes cookies set with leading dot domain\n    const domainWithLeadingDot = currentDomain\n      ? /^\\./.test(currentDomain)\n        ? currentDomain\n        : `.${currentDomain}`\n      : '';\n\n    /**\n     * Set user and session cookies and refresh the expiry time\n     */\n    if (hasUserConsent) {\n      setCookie(\n        SHOPIFY_Y,\n        cookies[SHOPIFY_Y] || buildUUID(),\n        longTermLength,\n        domainWithLeadingDot,\n      );\n      setCookie(\n        SHOPIFY_S,\n        cookies[SHOPIFY_S] || buildUUID(),\n        shortTermLength,\n        domainWithLeadingDot,\n      );\n    } else {\n      setCookie(SHOPIFY_Y, '', 0, domainWithLeadingDot);\n      setCookie(SHOPIFY_S, '', 0, domainWithLeadingDot);\n    }\n  }, [options, hasUserConsent, domain, checkoutDomain]);\n}\n\nfunction setCookie(\n  name: string,\n  value: string,\n  maxage: number,\n  domain: string,\n): void {\n  document.cookie = stringify(name, value, {\n    maxage,\n    domain,\n    samesite: 'Lax',\n    path: '/',\n  });\n}\n", "import {\n  createStorefrontClient as createStorefrontUtilities,\n  getShopifyCookies,\n  SHOPIFY_S,\n  SHOPIFY_Y,\n  SHOPIFY_STOREFRONT_ID_HEADER,\n  SHOPIFY_STOREFRONT_Y_HEADER,\n  SHOPIFY_STOREFRONT_S_HEADER,\n  type StorefrontClientProps,\n} from '@shopify/hydrogen-react';\nimport type {WritableDeep} from 'type-fest';\nimport {fetchWithServerCache} from './cache/server-fetch';\nimport {\n  SDK_VARIANT_HEADER,\n  SDK_VARIANT_SOURCE_HEADER,\n  SDK_VERSION_HEADER,\n  STOREFRONT_ACCESS_TOKEN_HEADER,\n  STOREFRONT_REQUEST_GROUP_ID_HEADER,\n} from './constants';\nimport {\n  CacheNone,\n  CacheLong,\n  CacheShort,\n  CacheDefault,\n  CacheCustom,\n  generateCacheControlHeader,\n  type CachingStrategy,\n} from './cache/strategies';\nimport {generateUUID} from './utils/uuid';\nimport {parseJSON} from './utils/parse-json';\nimport {\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {\n  ClientReturn,\n  ClientVariablesInRestParams,\n  GenericVariables,\n} from '@shopify/hydrogen-codegen';\nimport {warnOnce} from './utils/warning';\nimport {LIB_VERSION} from './version';\nimport {\n  minifyQuery,\n  assertQuery,\n  assertMutation,\n  throwErrorWithGqlLink,\n  GraphQLError,\n  type GraphQLApiResponse,\n  type GraphQLErrorOptions,\n} from './utils/graphql';\nimport {\n  getCallerStackLine,\n  withSyncStack,\n  type StackInfo,\n} from './utils/callsites';\nimport type {WaitUntil, StorefrontHeaders} from './types';\n\nexport type I18nBase = {\n  language: LanguageCode;\n  country: CountryCode;\n};\n\n// When passing GraphQLError through Remix' `json` or `defer`,\n// the class instance is lost and it becomes a plain JSON object.\n// Therefore, we need make TS think this is a plain object instead of\n// a class to make it work in server and client.\n// Also, Remix' `Jsonify` type is broken and can't infer types of classes properly.\ntype JsonGraphQLError = ReturnType<GraphQLError['toJSON']>; // Equivalent to `Jsonify<GraphQLError>[]`\nexport type StorefrontApiErrors = JsonGraphQLError[] | undefined;\n\ntype StorefrontError = {\n  errors?: StorefrontApiErrors;\n};\n\n/**\n * Wraps all the returned utilities from `createStorefrontClient`.\n */\nexport type StorefrontClient<TI18n extends I18nBase> = {\n  storefront: Storefront<TI18n>;\n};\n\n/**\n * Maps all the queries found in the project to variables and return types.\n */\nexport interface StorefrontQueries {\n  // Example of how a generated query type looks like:\n  // '#graphql query q1 {...}': {return: Q1Query; variables: Q1QueryVariables};\n}\n\n/**\n * Maps all the mutations found in the project to variables and return types.\n */\nexport interface StorefrontMutations {\n  // Example of how a generated mutation type looks like:\n  // '#graphql mutation m1 {...}': {return: M1Mutation; variables: M1MutationVariables};\n}\n\n// These are the variables that are automatically added to the storefront API.\n// We use this type to make parameters optional in storefront client\n// when these are the only variables that can be passed.\ntype AutoAddedVariableNames = 'country' | 'language';\n\ntype StorefrontCommonExtraParams = {\n  headers?: HeadersInit;\n  storefrontApiVersion?: string;\n  displayName?: string;\n};\n\n/**\n * Interface to interact with the Storefront API.\n */\nexport type Storefront<TI18n extends I18nBase = I18nBase> = {\n  query: <\n    OverrideReturnType extends any = never,\n    RawGqlString extends string = string,\n  >(\n    query: RawGqlString,\n    ...options: ClientVariablesInRestParams<\n      StorefrontQueries,\n      RawGqlString,\n      StorefrontCommonExtraParams & Pick<StorefrontQueryOptions, 'cache'>,\n      AutoAddedVariableNames\n    >\n  ) => Promise<\n    ClientReturn<StorefrontQueries, RawGqlString, OverrideReturnType> &\n      StorefrontError\n  >;\n  mutate: <\n    OverrideReturnType extends any = never,\n    RawGqlString extends string = string,\n  >(\n    mutation: RawGqlString,\n    ...options: ClientVariablesInRestParams<\n      StorefrontMutations,\n      RawGqlString,\n      StorefrontCommonExtraParams,\n      AutoAddedVariableNames\n    >\n  ) => Promise<\n    ClientReturn<StorefrontMutations, RawGqlString, OverrideReturnType> &\n      StorefrontError\n  >;\n  cache?: Cache;\n  CacheNone: typeof CacheNone;\n  CacheLong: typeof CacheLong;\n  CacheShort: typeof CacheShort;\n  CacheCustom: typeof CacheCustom;\n  generateCacheControlHeader: typeof generateCacheControlHeader;\n  getPublicTokenHeaders: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPublicTokenHeaders'];\n  getPrivateTokenHeaders: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPrivateTokenHeaders'];\n  getShopifyDomain: ReturnType<\n    typeof createStorefrontUtilities\n  >['getShopifyDomain'];\n  getApiUrl: ReturnType<\n    typeof createStorefrontUtilities\n  >['getStorefrontApiUrl'];\n  i18n: TI18n;\n};\n\ntype HydrogenClientProps<TI18n> = {\n  /** Storefront API headers. If on Oxygen, use `getStorefrontHeaders()` */\n  storefrontHeaders?: StorefrontHeaders;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The globally unique identifier for the Shop */\n  storefrontId?: string;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n};\n\nexport type CreateStorefrontClientOptions<TI18n extends I18nBase> =\n  HydrogenClientProps<TI18n> & StorefrontClientProps;\n\ntype StorefrontQueryOptions = StorefrontCommonExtraParams & {\n  query: string;\n  mutation?: never;\n  cache?: CachingStrategy;\n};\n\ntype StorefrontMutationOptions = StorefrontCommonExtraParams & {\n  query?: never;\n  mutation: string;\n  cache?: never;\n};\n\nconst defaultI18n: I18nBase = {language: 'EN', country: 'US'};\n\n/**\n *  This function extends `createStorefrontClient` from [Hydrogen React](/docs/api/hydrogen-react/2024-10/utilities/createstorefrontclient). The additional arguments enable internationalization (i18n), caching, and other features particular to Remix and Oxygen.\n *\n *  Learn more about [data fetching in Hydrogen](/docs/custom-storefronts/hydrogen/data-fetching/fetch-data).\n */\nexport function createStorefrontClient<TI18n extends I18nBase>(\n  options: CreateStorefrontClientOptions<TI18n>,\n): StorefrontClient<TI18n> {\n  const {\n    storefrontHeaders,\n    cache,\n    waitUntil,\n    i18n,\n    storefrontId,\n    logErrors = true,\n    ...clientOptions\n  } = options;\n  const H2_PREFIX_WARN = '[h2:warn:createStorefrontClient] ';\n\n  if (process.env.NODE_ENV === 'development' && !cache) {\n    warnOnce(\n      H2_PREFIX_WARN +\n        'Storefront API client created without a cache instance. This may slow down your sub-requests.',\n    );\n  }\n\n  const {\n    getPublicTokenHeaders,\n    getPrivateTokenHeaders,\n    getStorefrontApiUrl,\n    getShopifyDomain,\n  } = createStorefrontUtilities(clientOptions);\n\n  const getHeaders = clientOptions.privateStorefrontToken\n    ? getPrivateTokenHeaders\n    : getPublicTokenHeaders;\n\n  const defaultHeaders = getHeaders({\n    contentType: 'json',\n    buyerIp: storefrontHeaders?.buyerIp || '',\n  });\n\n  defaultHeaders[STOREFRONT_REQUEST_GROUP_ID_HEADER] =\n    storefrontHeaders?.requestGroupId || generateUUID();\n\n  if (storefrontId) defaultHeaders[SHOPIFY_STOREFRONT_ID_HEADER] = storefrontId;\n  if (LIB_VERSION) defaultHeaders['user-agent'] = `Hydrogen ${LIB_VERSION}`;\n\n  if (storefrontHeaders && storefrontHeaders.cookie) {\n    const cookies = getShopifyCookies(storefrontHeaders.cookie ?? '');\n\n    if (cookies[SHOPIFY_Y])\n      defaultHeaders[SHOPIFY_STOREFRONT_Y_HEADER] = cookies[SHOPIFY_Y];\n    if (cookies[SHOPIFY_S])\n      defaultHeaders[SHOPIFY_STOREFRONT_S_HEADER] = cookies[SHOPIFY_S];\n  }\n\n  // Remove any headers that are identifiable to the user or request\n  const cacheKeyHeader = JSON.stringify({\n    'content-type': defaultHeaders['content-type'],\n    'user-agent': defaultHeaders['user-agent'],\n    [SDK_VARIANT_HEADER]: defaultHeaders[SDK_VARIANT_HEADER],\n    [SDK_VARIANT_SOURCE_HEADER]: defaultHeaders[SDK_VARIANT_SOURCE_HEADER],\n    [SDK_VERSION_HEADER]: defaultHeaders[SDK_VERSION_HEADER],\n    [STOREFRONT_ACCESS_TOKEN_HEADER]:\n      defaultHeaders[STOREFRONT_ACCESS_TOKEN_HEADER],\n  });\n\n  async function fetchStorefrontApi<T = any>({\n    query,\n    mutation,\n    variables,\n    cache: cacheOptions,\n    headers = [],\n    storefrontApiVersion,\n    displayName,\n    stackInfo,\n  }: {variables?: GenericVariables; stackInfo?: StackInfo} & (\n    | StorefrontQueryOptions\n    | StorefrontMutationOptions\n  )): Promise<T & StorefrontError> {\n    const userHeaders =\n      headers instanceof Headers\n        ? Object.fromEntries(headers.entries())\n        : Array.isArray(headers)\n        ? Object.fromEntries(headers)\n        : headers;\n\n    const document = query ?? mutation;\n    const queryVariables = {...variables};\n\n    if (i18n) {\n      if (!variables?.country && /\\$country/.test(document)) {\n        queryVariables.country = i18n.country;\n      }\n\n      if (!variables?.language && /\\$language/.test(document)) {\n        queryVariables.language = i18n.language;\n      }\n    }\n\n    const url = getStorefrontApiUrl({storefrontApiVersion});\n    const graphqlData = JSON.stringify({\n      query: document,\n      variables: queryVariables,\n    });\n    const requestInit = {\n      method: 'POST',\n      headers: {...defaultHeaders, ...userHeaders},\n      body: graphqlData,\n    } satisfies RequestInit;\n\n    const cacheKey = [\n      url,\n      requestInit.method,\n      cacheKeyHeader,\n      requestInit.body,\n    ];\n\n    const [body, response] = await fetchWithServerCache(url, requestInit, {\n      cacheInstance: mutation ? undefined : cache,\n      cache: cacheOptions || CacheDefault(),\n      cacheKey,\n      waitUntil,\n      // Check if the response body has GraphQL errors:\n      // https://spec.graphql.org/June2018/#sec-Response-Format\n      shouldCacheResponse: (body: any) => !body?.errors,\n      // Optional information for the subrequest profiler:\n      debugInfo: {\n        requestId: requestInit.headers[STOREFRONT_REQUEST_GROUP_ID_HEADER],\n        displayName,\n        url,\n        stackInfo,\n        graphql: graphqlData,\n        purpose: storefrontHeaders?.purpose,\n      },\n    });\n\n    const errorOptions: GraphQLErrorOptions<T> = {\n      url,\n      response,\n      type: mutation ? 'mutation' : 'query',\n      query: document,\n      queryVariables,\n      errors: undefined,\n    };\n\n    if (!response.ok) {\n      /**\n       * The Storefront API might return a string error, or a JSON-formatted {error: string}.\n       * We try both and conform them to a single {errors} format.\n       */\n      let errors;\n      let bodyText = body;\n      try {\n        bodyText ??= await response.text();\n        errors = parseJSON(bodyText);\n      } catch (_e) {\n        errors = [\n          {message: bodyText ?? 'Could not parse Storefront API response'},\n        ];\n      }\n\n      throwErrorWithGqlLink({...errorOptions, errors});\n    }\n\n    const {data, errors} = body as GraphQLApiResponse<T>;\n\n    const gqlErrors = errors?.map(\n      ({message, ...rest}) =>\n        new GraphQLError(message, {\n          ...(rest as WritableDeep<typeof rest>),\n          clientOperation: `storefront.${errorOptions.type}`,\n          requestId: response.headers.get('x-request-id'),\n          queryVariables,\n          query: document,\n        }),\n    );\n\n    return formatAPIResult(data, gqlErrors);\n  }\n\n  return {\n    storefront: {\n      /**\n       * Sends a GraphQL query to the Storefront API.\n       *\n       * Example:\n       *\n       * ```js\n       * async function loader ({context: {storefront}}) {\n       *   const data = await storefront.query('query { ... }', {\n       *     variables: {},\n       *     cache: storefront.CacheLong()\n       *   });\n       * }\n       * ```\n       */\n      query(query, options?) {\n        query = minifyQuery(query);\n        assertQuery(query, 'storefront.query');\n\n        const stackOffset = getStackOffset?.(query);\n\n        return withSyncStack(\n          fetchStorefrontApi({\n            ...options,\n            query,\n            stackInfo: getCallerStackLine?.(stackOffset),\n          }),\n          {stackOffset, logErrors},\n        );\n      },\n      /**\n       * Sends a GraphQL mutation to the Storefront API.\n       *\n       * Example:\n       *\n       * ```js\n       * async function loader ({context: {storefront}}) {\n       *   await storefront.mutate('mutation { ... }', {\n       *     variables: {},\n       *   });\n       * }\n       * ```\n       */\n      mutate(mutation, options?) {\n        mutation = minifyQuery(mutation);\n        assertMutation(mutation, 'storefront.mutate');\n\n        const stackOffset = getStackOffset?.(mutation);\n\n        return withSyncStack(\n          fetchStorefrontApi({\n            ...options,\n            mutation,\n            stackInfo: getCallerStackLine?.(stackOffset),\n          }),\n          {stackOffset, logErrors},\n        );\n      },\n      cache,\n      CacheNone,\n      CacheLong,\n      CacheShort,\n      CacheCustom,\n      generateCacheControlHeader,\n      getPublicTokenHeaders,\n      getPrivateTokenHeaders,\n      getShopifyDomain,\n      getApiUrl: getStorefrontApiUrl,\n      i18n: (i18n ?? defaultI18n) as TI18n,\n    },\n  };\n}\n\nconst getStackOffset =\n  process.env.NODE_ENV === 'development'\n    ? (query: string) => {\n        let stackOffset = 0;\n        if (/fragment CartApi(Query|Mutation) on Cart/.test(query)) {\n          // The cart handler is wrapping storefront.query/mutate,\n          // so we need to go up one more stack frame to show\n          // the caller in /subrequest-profiler\n          stackOffset = 1;\n        }\n\n        return stackOffset;\n      }\n    : undefined;\n\nexport function formatAPIResult<T>(\n  data: T,\n  errors: StorefrontApiErrors,\n): T & StorefrontError {\n  return {\n    ...data,\n    ...(errors && {errors}),\n  };\n}\n\nexport type CreateStorefrontClientForDocs<TI18n extends I18nBase> = {\n  storefront?: StorefrontForDoc<TI18n>;\n};\n\nexport type StorefrontForDoc<TI18n extends I18nBase = I18nBase> = {\n  /** The function to run a query on Storefront API. */\n  query?: <TData = any>(\n    query: string,\n    options: StorefrontQueryOptionsForDocs,\n  ) => Promise<TData & StorefrontError>;\n  /** The function to run a mutation on Storefront API. */\n  mutate?: <TData = any>(\n    mutation: string,\n    options: StorefrontMutationOptionsForDocs,\n  ) => Promise<TData & StorefrontError>;\n  /** The cache instance passed in from the `createStorefrontClient` argument. */\n  cache?: Cache;\n  /** Re-export of [`CacheNone`](/docs/api/hydrogen/2024-10/utilities/cachenone). */\n  CacheNone?: typeof CacheNone;\n  /** Re-export of [`CacheLong`](/docs/api/hydrogen/2024-10/utilities/cachelong). */\n  CacheLong?: typeof CacheLong;\n  /** Re-export of [`CacheShort`](/docs/api/hydrogen/2024-10/utilities/cacheshort). */\n  CacheShort?: typeof CacheShort;\n  /** Re-export of [`CacheCustom`](/docs/api/hydrogen/2024-10/utilities/cachecustom). */\n  CacheCustom?: typeof CacheCustom;\n  /** Re-export of [`generateCacheControlHeader`](/docs/api/hydrogen/2024-10/utilities/generatecachecontrolheader). */\n  generateCacheControlHeader?: typeof generateCacheControlHeader;\n  /** Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. See [`getPublicTokenHeaders` in Hydrogen React](/docs/api/hydrogen-react/2024-10/utilities/createstorefrontclient#:~:text=%27graphql%27.-,getPublicTokenHeaders,-(props%3F%3A) for more details. */\n  getPublicTokenHeaders?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPublicTokenHeaders'];\n  /** Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint for API calls made from a server. See [`getPrivateTokenHeaders` in  Hydrogen React](/docs/api/hydrogen-react/2024-10/utilities/createstorefrontclient#:~:text=storefrontApiVersion-,getPrivateTokenHeaders,-(props%3F%3A) for more details.*/\n  getPrivateTokenHeaders?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getPrivateTokenHeaders'];\n  /** Creates the fully-qualified URL to your myshopify.com domain. See [`getShopifyDomain` in  Hydrogen React](/docs/api/hydrogen-react/2024-10/utilities/createstorefrontclient#:~:text=StorefrontClientReturn-,getShopifyDomain,-(props%3F%3A) for more details. */\n  getShopifyDomain?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getShopifyDomain'];\n  /** Creates the fully-qualified URL to your store's GraphQL endpoint. See [`getStorefrontApiUrl` in  Hydrogen React](/docs/api/hydrogen-react/2024-10/utilities/createstorefrontclient#:~:text=storeDomain-,getStorefrontApiUrl,-(props%3F%3A) for more details.*/\n  getApiUrl?: ReturnType<\n    typeof createStorefrontUtilities\n  >['getStorefrontApiUrl'];\n  /** The `i18n` object passed in from the `createStorefrontClient` argument. */\n  i18n?: TI18n;\n};\n\nexport type StorefrontQueryOptionsForDocs = {\n  /** The variables for the GraphQL query statement. */\n  variables?: Record<string, unknown>;\n  /** The cache strategy for this query. Default to max-age=1, stale-while-revalidate=86399. */\n  cache?: CachingStrategy;\n  /** Additional headers for this query. */\n  headers?: HeadersInit;\n  /** Override the Storefront API version for this query. */\n  storefrontApiVersion?: string;\n  /** The name of the query for debugging in the Subrequest Profiler. */\n  displayName?: string;\n};\n\nexport type StorefrontMutationOptionsForDocs = {\n  /** The variables for the GraphQL mutation statement. */\n  variables?: Record<string, unknown>;\n  /** Additional headers for this query. */\n  headers?: HeadersInit;\n  /** Override the Storefront API version for this query. */\n  storefrontApiVersion?: string;\n  /** The name of the query for debugging in the Subrequest Profiler. */\n  displayName?: string;\n};\n", "/**\n * Override options for a cache strategy.\n */\nexport interface AllCacheOptions {\n  /**\n   * The caching mode, generally `public`, `private`, or `no-store`.\n   */\n  mode?: string;\n  /**\n   * The maximum amount of time in seconds that a resource will be considered fresh. See `max-age` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#:~:text=Response%20Directives-,max%2Dage,-The%20max%2Dage).\n   */\n  maxAge?: number;\n  /**\n   * Indicate that the cache should serve the stale response in the background while revalidating the cache. See `stale-while-revalidate` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#stale-while-revalidate).\n   */\n  staleWhileRevalidate?: number;\n  /**\n   * Similar to `maxAge` but specific to shared caches. See `s-maxage` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#s-maxage).\n   */\n  sMaxAge?: number;\n  /**\n   * Indicate that the cache should serve the stale response if an error occurs while revalidating the cache. See `stale-if-error` in the [MDN docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#stale-if-error).\n   */\n  staleIfError?: number;\n}\n\n/**\n * Use the `CachingStrategy` to define a custom caching mechanism for your data. Or use one of the pre-defined caching strategies: CacheNone, CacheShort, CacheLong.\n */\nexport type CachingStrategy = AllCacheOptions;\n\nexport type NoStoreStrategy = {\n  mode: string;\n};\n\nconst PUBLIC = 'public';\nconst PRIVATE = 'private';\nexport const NO_STORE = 'no-store';\n\nconst optionMapping: {\n  [key: string]: string;\n} = {\n  maxAge: 'max-age',\n  staleWhileRevalidate: 'stale-while-revalidate',\n  sMaxAge: 's-maxage',\n  staleIfError: 'stale-if-error',\n};\n\nexport function generateCacheControlHeader(\n  cacheOptions: CachingStrategy,\n): string {\n  const cacheControl: string[] = [];\n  Object.keys(cacheOptions).forEach((key: string) => {\n    if (key === 'mode') {\n      cacheControl.push(cacheOptions[key] as string);\n    } else if (optionMapping[key]) {\n      cacheControl.push(\n        `${optionMapping[key]}=${cacheOptions[key as keyof CachingStrategy]}`,\n      );\n    }\n  });\n  return cacheControl.join(', ');\n}\n\n/**\n *\n * @public\n */\nexport function CacheNone(): NoStoreStrategy {\n  return {\n    mode: NO_STORE,\n  };\n}\n\nfunction guardExpirableModeType(overrideOptions?: CachingStrategy) {\n  if (\n    overrideOptions?.mode &&\n    overrideOptions?.mode !== PUBLIC &&\n    overrideOptions?.mode !== PRIVATE\n  ) {\n    throw Error(\"'mode' must be either 'public' or 'private'\");\n  }\n}\n\n/**\n *\n * @public\n */\nexport function CacheShort(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 1,\n    staleWhileRevalidate: 9,\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @public\n */\nexport function CacheLong(overrideOptions?: CachingStrategy): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 3600, // 1 hour\n    staleWhileRevalidate: 82800, // 23 Hours\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @private\n */\nexport function CacheDefault(\n  overrideOptions?: CachingStrategy,\n): AllCacheOptions {\n  guardExpirableModeType(overrideOptions);\n  return {\n    mode: PUBLIC,\n    maxAge: 1,\n    staleWhileRevalidate: 86399, // 1 second less than 24 hours\n    ...overrideOptions,\n  };\n}\n\n/**\n *\n * @public\n */\nexport function CacheCustom(overrideOptions: CachingStrategy): AllCacheOptions {\n  return overrideOptions as AllCacheOptions;\n}\n", "export function parseJSON(json: any) {\n  if (String(json).includes('__proto__')) return JSON.parse(json, noproto);\n  return JSON.parse(json);\n}\nfunction noproto(k: string, v: string) {\n  if (k !== '__proto__') return v;\n}\n", "import type {CachingStrategy} from './strategies';\nimport {CacheDefault, generateCacheControlHeader} from './strategies';\n\nfunction logCacheApiStatus(\n  status: string | null,\n  request: Request,\n  response?: Response,\n) {\n  // const url = request.url;\n  // if (!/Product\\(/.test(url)) return;\n  // // eslint-disable-next-line no-console\n  // console.log(status, 'cacheKey', url.substring(0, 50));\n  // if (response) {\n  //   let headersJson: Record<string, string> = {};\n  //   response.headers.forEach((value, key) => {\n  //     headersJson[key] = value;\n  //   });\n  //   const responseDate = response.headers.get('cache-put-date');\n  //   if (responseDate) {\n  //     const [age] = calculateAge(response, responseDate);\n  //     headersJson['age'] = age.toString();\n  //   }\n  //   // eslint-disable-next-line no-console\n  //   console.log(`${status} response headers: `, headersJson);\n  // }\n}\n\nfunction getCacheControlSetting(\n  userCacheOptions?: CachingStrategy,\n  options?: CachingStrategy,\n): CachingStrategy {\n  if (userCacheOptions && options) {\n    return {\n      ...userCacheOptions,\n      ...options,\n    };\n  } else {\n    return userCacheOptions || CacheDefault();\n  }\n}\n\nfunction generateDefaultCacheControlHeader(\n  userCacheOptions?: CachingStrategy,\n): string {\n  return generateCacheControlHeader(getCacheControlSetting(userCacheOptions));\n}\n\n/**\n * Get an item from the cache. If a match is found, returns a tuple\n * containing the `JSON.parse` version of the response as well\n * as the response itself so it can be checked for staleness.\n */\nasync function getItem(\n  cache: Cache,\n  request: Request,\n): Promise<Response | undefined> {\n  if (!cache) return;\n\n  const response = await cache.match(request);\n  if (!response) {\n    logCacheApiStatus('MISS', request);\n    return;\n  }\n\n  logCacheApiStatus('HIT', request, response);\n\n  return response;\n}\n\n/**\n * Put an item into the cache.\n */\nasync function setItem(\n  cache: Cache,\n  request: Request,\n  response: Response,\n  userCacheOptions: CachingStrategy,\n) {\n  if (!cache) return;\n\n  /**\n   * We are manually managing staled request by adding this workaround.\n   * Why? cache control header support is dependent on hosting platform\n   *\n   * For example:\n   *\n   * Cloudflare's Cache API does not support `stale-while-revalidate`.\n   * Cloudflare cache control header has a very odd behaviour.\n   * Say we have the following cache control header on a request:\n   *\n   *   public, max-age=15, stale-while-revalidate=30\n   *\n   * When there is a cache.match HIT, the cache control header would become\n   *\n   *   public, max-age=14400, stale-while-revalidate=30\n   *\n   * == `stale-while-revalidate` workaround ==\n   * Update response max-age so that:\n   *\n   *   max-age = max-age + stale-while-revalidate\n   *\n   * For example:\n   *\n   *   public, max-age=1, stale-while-revalidate=9\n   *                    |\n   *                    V\n   *   public, max-age=10, stale-while-revalidate=9\n   *\n   * Store the following information in the response header:\n   *\n   *   cache-put-date   - Timestamp string of when this request is PUT into cache\n   *\n   * `isStale` function will use the above information to test for stale-ness of a cached response\n   */\n\n  const cacheControl = getCacheControlSetting(userCacheOptions);\n\n  // The padded cache-control to mimic stale-while-revalidate\n  const paddedCacheControlString = generateDefaultCacheControlHeader(\n    getCacheControlSetting(cacheControl, {\n      maxAge:\n        (cacheControl.maxAge || 0) + (cacheControl.staleWhileRevalidate || 0),\n    }),\n  );\n  // The cache-control we want to set on response\n  const cacheControlString = generateDefaultCacheControlHeader(\n    getCacheControlSetting(cacheControl),\n  );\n\n  // CF will override cache-control, so we need to keep a non-modified real-cache-control\n  // cache-control is still necessary for mini-oxygen\n  response.headers.set('cache-control', paddedCacheControlString);\n  response.headers.set('real-cache-control', cacheControlString);\n  response.headers.set('cache-put-date', String(Date.now()));\n\n  logCacheApiStatus('PUT', request, response);\n  await cache.put(request, response);\n}\n\nasync function deleteItem(cache: Cache, request: Request) {\n  if (!cache) return;\n\n  logCacheApiStatus('DELETE', request);\n  await cache.delete(request);\n}\n\nfunction calculateAge(response: Response, responseDate: string) {\n  const cacheControl = response.headers.get('real-cache-control');\n  let responseMaxAge = 0;\n\n  if (cacheControl) {\n    const maxAgeMatch = cacheControl.match(/max-age=(\\d*)/);\n    if (maxAgeMatch && maxAgeMatch.length > 1) {\n      responseMaxAge = parseFloat(maxAgeMatch[1]);\n    }\n  }\n\n  const ageInMs = Date.now() - Number(responseDate as string);\n  return [ageInMs / 1000, responseMaxAge];\n}\n\n/**\n * Manually check the response to see if it's stale.\n */\nfunction isStale(request: Request, response: Response) {\n  const responseDate = response.headers.get('cache-put-date');\n\n  if (!responseDate) {\n    return false;\n  }\n\n  const [age, responseMaxAge] = calculateAge(response, responseDate);\n  const result = age > responseMaxAge;\n\n  if (result) {\n    logCacheApiStatus('STALE', request, response);\n  }\n\n  return result;\n}\n\n/**\n *\n * @private\n */\nexport const CacheAPI = {\n  get: getItem,\n  set: setItem,\n  delete: deleteItem,\n  generateDefaultCacheControlHeader,\n  isStale,\n};\n", "import {parseJSON} from '../utils/parse-json';\nimport {CacheAPI} from './api';\nimport {\n  CacheDefault,\n  type CachingStrategy,\n  type AllCacheOptions,\n} from './strategies.js';\n\n/**\n * Wrapper Cache functions for sub queries\n */\n\n/**\n * Cache API is weird. We just need a full URL, so we make one up.\n */\nexport function getKeyUrl(key: string) {\n  return `https://shopify.dev/?${key}`;\n}\n\nfunction getCacheOption(userCacheOptions?: CachingStrategy): AllCacheOptions {\n  return userCacheOptions || CacheDefault();\n}\n\nexport function generateSubRequestCacheControlHeader(\n  userCacheOptions?: CachingStrategy,\n): string {\n  return CacheAPI.generateDefaultCacheControlHeader(\n    getCacheOption(userCacheOptions),\n  );\n}\n\n/**\n * Get an item from the cache. If a match is found, returns a tuple\n * containing the `JSON.parse` version of the response as well\n * as the response itself so it can be checked for staleness.\n * @private\n */\nexport async function getItemFromCache<T = any>(\n  cache: Cache,\n  key: string,\n): Promise<undefined | [T | string, Response]> {\n  if (!cache) return;\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n\n  const response = await CacheAPI.get(cache, request);\n\n  if (!response) {\n    return;\n  }\n\n  const text = await response.text();\n  try {\n    return [parseJSON(text), response];\n  } catch {\n    return [text, response];\n  }\n}\n\n/**\n * Put an item into the cache.\n * @private\n */\nexport async function setItemInCache(\n  cache: Cache,\n  key: string,\n  value: any,\n  userCacheOptions?: CachingStrategy,\n) {\n  if (!cache) return;\n\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n  const response = new Response(JSON.stringify(value));\n\n  await CacheAPI.set(\n    cache,\n    request,\n    response,\n    getCacheOption(userCacheOptions),\n  );\n}\n\n/**\n *\n * @private\n */\nexport async function deleteItemFromCache(cache: Cache, key: string) {\n  if (!cache) return;\n\n  const url = getKeyUrl(key);\n  const request = new Request(url);\n\n  await CacheAPI.delete(cache, request);\n}\n\n/**\n * Manually check the response to see if it's stale.\n * @private\n */\nexport function isStale(key: string, response: Response) {\n  return CacheAPI.isStale(new Request(getKeyUrl(key)), response);\n}\n", "type QueryKey = string | readonly unknown[];\n\nexport function hashKey(queryKey: QueryKey): string {\n  const rawKeys = Array.isArray(queryKey) ? queryKey : [queryKey];\n  let hash = '';\n\n  // Keys could be in the following shape:\n  //\n  // From `storefront.query`:\n  // ['api-endpoint', 'method', 'headers', 'query']\n  //\n  // From `createWithCache`:\n  // ['string', {}, 1, []]\n  for (const key of rawKeys) {\n    if (key != null) {\n      if (typeof key === 'object') {\n        hash += JSON.stringify(key);\n      } else {\n        hash += key.toString();\n      }\n    }\n  }\n\n  return encodeURIComponent(hash);\n}\n", "import {\n  NO_STORE,\n  CacheShort,\n  generateCacheControlHeader,\n  type CachingStrategy,\n} from './strategies';\nimport {\n  getItemFromCache,\n  getKeyUrl,\n  isStale,\n  setItemInCache,\n} from './sub-request';\nimport {type StackInfo} from '../utils/callsites';\nimport {hashKey} from '../utils/hash';\nimport type {WaitUntil} from '../types';\n\n/**\n * The cache key is used to uniquely identify a value in the cache.\n */\nexport type CacheKey = string | readonly unknown[];\n\nexport type DebugOptions = {\n  url?: string;\n  requestId?: string | null;\n  graphql?: string | null;\n  purpose?: string | null;\n  stackInfo?: StackInfo;\n  displayName?: string;\n};\n\ntype CachedDebugInfo = {\n  displayName?: string;\n  url?: string;\n  responseInit?: {\n    status: number;\n    statusText: string;\n    headers?: [string, string][];\n  };\n};\n\nexport type AddDebugDataParam = {\n  displayName?: string;\n  response?: Pick<Response, 'url' | 'status' | 'statusText' | 'headers'>;\n};\n\nexport type CacheActionFunctionParam = {\n  addDebugData: (info: AddDebugDataParam) => void;\n};\n\ntype WithCacheOptions<T = unknown> = {\n  strategy?: CachingStrategy | null;\n  cacheInstance?: Cache;\n  shouldCacheResult: (value: T) => boolean;\n  waitUntil?: WaitUntil;\n  debugInfo?: DebugOptions;\n};\n\n// Lock to prevent revalidating the same sub-request\n// in the same isolate. Note that different isolates\n// in the same colo could duplicate the revalidation\n// since this is only an in-memory lock.\n// https://github.com/Shopify/oxygen-platform/issues/625\nconst swrLock = new Set<string>();\n\n/**\n * Implementation of withCache.\n * @private\n */\nexport async function runWithCache<T = unknown>(\n  cacheKey: CacheKey,\n  actionFn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n  {\n    strategy = CacheShort(),\n    cacheInstance,\n    shouldCacheResult = () => true,\n    waitUntil,\n    debugInfo,\n  }: WithCacheOptions<T>,\n): Promise<T> {\n  const startTime = Date.now();\n  const key = hashKey([\n    // '__HYDROGEN_CACHE_ID__', // TODO purgeQueryCacheOnBuild\n    ...(typeof cacheKey === 'string' ? [cacheKey] : cacheKey),\n  ]);\n\n  let cachedDebugInfo: CachedDebugInfo | undefined;\n  let userDebugInfo: CachedDebugInfo | undefined;\n\n  const addDebugData = (info: AddDebugDataParam) => {\n    userDebugInfo = {\n      displayName: info.displayName,\n      url: info.response?.url,\n      responseInit: {\n        status: info.response?.status || 0,\n        statusText: info.response?.statusText || '',\n        headers: Array.from(info.response?.headers.entries() || []),\n      },\n    };\n  };\n\n  const mergeDebugInfo = () => ({\n    ...cachedDebugInfo,\n    ...debugInfo,\n    url:\n      userDebugInfo?.url ||\n      debugInfo?.url ||\n      cachedDebugInfo?.url ||\n      getKeyUrl(key),\n    displayName:\n      debugInfo?.displayName ||\n      userDebugInfo?.displayName ||\n      cachedDebugInfo?.displayName,\n  });\n\n  const logSubRequestEvent =\n    process.env.NODE_ENV === 'development'\n      ? ({\n          result,\n          cacheStatus,\n          overrideStartTime,\n        }: {\n          result?: any;\n          cacheStatus?: 'MISS' | 'HIT' | 'STALE' | 'PUT';\n          overrideStartTime?: number;\n        }) => {\n          globalThis.__H2O_LOG_EVENT?.({\n            ...mergeDebugInfo(),\n            eventType: 'subrequest',\n            startTime: overrideStartTime || startTime,\n            endTime: Date.now(),\n            cacheStatus,\n            responsePayload: (result && result[0]) || result,\n            responseInit: (result && result[1]) || userDebugInfo?.responseInit,\n            cache: {\n              status: cacheStatus,\n              strategy: generateCacheControlHeader(strategy || {}),\n              key,\n            },\n            waitUntil,\n          });\n        }\n      : undefined;\n\n  if (!cacheInstance || !strategy || strategy.mode === NO_STORE) {\n    const result = await actionFn({addDebugData});\n    // Log non-cached requests\n    logSubRequestEvent?.({result});\n    return result;\n  }\n\n  type CachedItem = {\n    value: Awaited<T>;\n    debugInfo?: CachedDebugInfo;\n  };\n\n  const storeInCache = (value: CachedItem['value']) =>\n    setItemInCache(\n      cacheInstance,\n      key,\n      {\n        value,\n        debugInfo:\n          process.env.NODE_ENV === 'development' ? mergeDebugInfo() : undefined,\n      } satisfies CachedItem,\n      strategy,\n    );\n\n  const cachedItem = await getItemFromCache<CachedItem>(cacheInstance, key);\n  // console.log('--- Cache', cachedItem ? 'HIT' : 'MISS');\n\n  if (cachedItem && typeof cachedItem[0] !== 'string') {\n    const [{value: cachedResult, debugInfo}, cacheInfo] = cachedItem;\n    cachedDebugInfo = debugInfo;\n\n    const cacheStatus = isStale(key, cacheInfo) ? 'STALE' : 'HIT';\n\n    if (!swrLock.has(key) && cacheStatus === 'STALE') {\n      swrLock.add(key);\n\n      // Important: Run revalidation asynchronously.\n      const revalidatingPromise = Promise.resolve().then(async () => {\n        const revalidateStartTime = Date.now();\n        try {\n          const result = await actionFn({addDebugData});\n\n          if (shouldCacheResult(result)) {\n            await storeInCache(result);\n\n            // Log PUT requests with the revalidate start time\n            logSubRequestEvent?.({\n              result,\n              cacheStatus: 'PUT',\n              overrideStartTime: revalidateStartTime,\n            });\n          }\n        } catch (error: any) {\n          if (error.message) {\n            error.message = 'SWR in sub-request failed: ' + error.message;\n          }\n\n          console.error(error);\n        } finally {\n          swrLock.delete(key);\n        }\n      });\n\n      // Asynchronously wait for it in workers\n      waitUntil?.(revalidatingPromise);\n    }\n\n    // Log HIT/STALE requests\n    logSubRequestEvent?.({\n      result: cachedResult,\n      cacheStatus,\n    });\n\n    return cachedResult;\n  }\n\n  const result = await actionFn({addDebugData});\n\n  // Log MISS requests\n  logSubRequestEvent?.({\n    result,\n    cacheStatus: 'MISS',\n  });\n\n  /**\n   * Important: Do this async\n   */\n  if (shouldCacheResult(result)) {\n    const cacheStoringPromise = Promise.resolve().then(async () => {\n      const putStartTime = Date.now();\n      await storeInCache(result);\n      logSubRequestEvent?.({\n        result,\n        cacheStatus: 'PUT',\n        overrideStartTime: putStartTime,\n      });\n    });\n\n    waitUntil?.(cacheStoringPromise);\n  }\n\n  return result;\n}\n", "import {CacheShort, CachingStrategy} from './strategies.js';\nimport {\n  type CacheKey,\n  runWithCache,\n  type DebugOptions,\n} from './run-with-cache.js';\nimport type {WaitUntil} from '../types.js';\nimport {parseJSON} from '../utils/parse-json.js';\n\nexport type FetchCacheOptions<T = any> = {\n  cache?: CachingStrategy;\n  cacheInstance?: Cache;\n  cacheKey?: CacheKey;\n  shouldCacheResponse: (body: T, response: Response) => boolean;\n  waitUntil?: WaitUntil;\n  debugInfo?: DebugOptions;\n};\n\ntype SerializableResponse = [any, ResponseInit];\n\nfunction toSerializableResponse(\n  body: any,\n  response: Response,\n): SerializableResponse {\n  return [\n    body,\n    {\n      status: response.status,\n      statusText: response.statusText,\n      headers: Array.from(response.headers.entries()),\n    },\n  ];\n}\n\nfunction fromSerializableResponse([body, init]: SerializableResponse) {\n  return [body, new Response(body, init)] as const;\n}\n\n/**\n * `fetch` equivalent that stores responses in cache.\n * Useful for calling third-party APIs that need to be cached.\n * @private\n */\nexport async function fetchWithServerCache<T = unknown>(\n  url: string,\n  requestInit: Request | RequestInit,\n  {\n    cacheInstance,\n    cache: cacheOptions,\n    cacheKey = [url, requestInit],\n    shouldCacheResponse,\n    waitUntil,\n    debugInfo,\n  }: FetchCacheOptions,\n): Promise<readonly [T, Response]> {\n  if (!cacheOptions && (!requestInit.method || requestInit.method === 'GET')) {\n    cacheOptions = CacheShort();\n  }\n\n  return runWithCache(\n    cacheKey,\n    async () => {\n      const response = await fetch(url, requestInit);\n      if (!response.ok) {\n        // Skip caching and consuming the response body\n        return response;\n      }\n\n      let data: any = await response.text().catch(() => '');\n\n      try {\n        if (data) data = parseJSON(data);\n      } catch {}\n\n      return toSerializableResponse(data, response);\n    },\n    {\n      cacheInstance,\n      waitUntil,\n      strategy: cacheOptions ?? null,\n      debugInfo,\n      shouldCacheResult: (payload) => {\n        return 'ok' in payload\n          ? false\n          : shouldCacheResponse(...fromSerializableResponse(payload));\n      },\n    },\n  ).then((payload) => {\n    return 'ok' in payload\n      ? ([null, payload] as const)\n      : fromSerializableResponse(payload);\n  });\n}\n", "export const STOREFRONT_REQUEST_GROUP_ID_HEADER =\n  'Custom-Storefront-Request-Group-ID';\nexport const STOREFRONT_ACCESS_TOKEN_HEADER =\n  'X-Shopify-Storefront-Access-Token';\nexport const SDK_VARIANT_HEADER = 'X-SDK-Variant';\nexport const SDK_VARIANT_SOURCE_HEADER = 'X-SDK-Variant-Source';\nexport const SDK_VERSION_HEADER = 'X-SDK-Version';\n", "/*\n * Generate a UUID using crypto and fallback to Math.random if crypto is not available.\n */\nexport function generateUUID() {\n  if (typeof crypto !== 'undefined' && !!crypto.randomUUID) {\n    return crypto.randomUUID();\n  } else {\n    return `weak-${Math.random().toString(16).substring(2)}`;\n  }\n}\n", "const warnings = new Set<string>();\nexport const warnOnce = (string: string) => {\n  if (!warnings.has(string)) {\n    console.warn(string);\n    warnings.add(string);\n  }\n};\n\nconst errors = new Set<string>();\nexport const errorOnce = (string: string) => {\n  if (!errors.has(string)) {\n    console.error(new Error(string));\n    errors.add(string);\n  }\n};\n", "export const LIB_VERSION = '2024.10.1';\n", "import type {StorefrontApiResponseOk} from '@shopify/hydrogen-react';\nimport type {GenericVariables} from '@shopify/hydrogen-codegen';\n\nexport function extractQueryName(query: string) {\n  return query.match(/(query|mutation)\\s+([^({]*)/)?.[0]?.trim();\n}\n\nexport function minifyQuery<T extends string>(string: T) {\n  return string\n    .replace(/\\s*#.*$/gm, '') // Remove GQL comments\n    .replace(/\\s+/gm, ' ') // Minify spaces\n    .trim() as T;\n}\n\nconst IS_QUERY_RE = /(^|}\\s)query[\\s({]/im;\nconst IS_MUTATION_RE = /(^|}\\s)mutation[\\s({]/im;\n\nexport function assertQuery(query: string, callerName: string) {\n  if (!IS_QUERY_RE.test(query)) {\n    throw new Error(`[h2:error:${callerName}] Can only execute queries`);\n  }\n}\n\nexport function assertMutation(query: string, callerName: string) {\n  if (!IS_MUTATION_RE.test(query)) {\n    throw new Error(`[h2:error:${callerName}] Can only execute mutations`);\n  }\n}\n\nexport type GraphQLApiResponse<T> = StorefrontApiResponseOk<T>;\n\nexport type GraphQLErrorOptions<T> = {\n  url: string;\n  response: Response;\n  errors: GraphQLApiResponse<T>['errors'];\n  type: 'query' | 'mutation';\n  query: string;\n  queryVariables: GenericVariables;\n  ErrorConstructor?: ErrorConstructor;\n  client?: string;\n};\n\n// Reference: https://github.com/graphql/graphql-js/blob/main/src/error/GraphQLError.ts#L218-L242\nexport class GraphQLError extends Error {\n  /**\n   * If an error can be associated to a particular point in the requested\n   * GraphQL document, it should contain a list of locations.\n   */\n  locations?: Array<{line: number; column: number}>;\n  /**\n   * If an error can be associated to a particular field in the GraphQL result,\n   * it _must_ contain an entry with the key `path` that details the path of\n   * the response field which experienced the error. This allows clients to\n   * identify whether a null result is intentional or caused by a runtime error.\n   */\n  path?: Array<string | number>;\n  /**\n   * Reserved for implementors to extend the protocol however they see fit,\n   * and hence there are no additional restrictions on its contents.\n   */\n  extensions?: {[key: string]: unknown};\n\n  constructor(\n    message?: string,\n    options: Pick<\n      GraphQLError,\n      'locations' | 'path' | 'extensions' | 'stack' | 'cause'\n    > & {\n      query?: string;\n      queryVariables?: GenericVariables;\n      requestId?: string | null;\n      clientOperation?: string;\n    } = {},\n  ) {\n    const h2Prefix = options.clientOperation\n      ? `[h2:error:${options.clientOperation}] `\n      : '';\n\n    const enhancedMessage =\n      h2Prefix +\n      message +\n      (options.requestId ? ` - Request ID: ${options.requestId}` : '');\n\n    super(enhancedMessage);\n    this.name = 'GraphQLError';\n    this.extensions = options.extensions;\n    this.locations = options.locations;\n    this.path = options.path;\n    this.stack = options.stack || undefined;\n\n    try {\n      this.cause = JSON.stringify({\n        ...(typeof options.cause === 'object' ? options.cause : {}),\n        requestId: options.requestId,\n        ...(process.env.NODE_ENV === 'development' && {\n          path: options.path,\n          extensions: options.extensions,\n          graphql: h2Prefix &&\n            options.query && {\n              query: options.query,\n              variables: JSON.stringify(options.queryVariables),\n            },\n        }),\n      });\n    } catch {\n      if (options.cause) this.cause = options.cause;\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.name;\n  }\n\n  /**\n   * Note: `toString()` is internally used by `console.log(...)` / `console.error(...)`\n   * when ingesting logs in Oxygen production. Therefore, we want to make sure that\n   * the error message is as informative as possible instead of `[object Object]`.\n   */\n  override toString() {\n    let result = `${this.name}: ${this.message}`;\n\n    if (this.path) {\n      try {\n        result += ` | path: ${JSON.stringify(this.path)}`;\n      } catch {}\n    }\n\n    if (this.extensions) {\n      try {\n        result += ` | extensions: ${JSON.stringify(this.extensions)}`;\n      } catch {}\n    }\n\n    result += '\\n';\n\n    if (this.stack) {\n      // Remove the message line from the stack.\n      result += `${this.stack.slice(this.stack.indexOf('\\n') + 1)}\\n`;\n    }\n\n    return result;\n  }\n\n  /**\n   * Note: toJSON` is internally used by `JSON.stringify(...)`.\n   * The most common scenario when this error instance is going to be stringified is\n   * when it's passed to Remix' `json` and `defer` functions: e.g. `defer({promise: storefront.query(...)})`.\n   * In this situation, we don't want to expose private error information to the browser so we only\n   * do it in development.\n   */\n  toJSON() {\n    const formatted: Pick<\n      GraphQLError,\n      'name' | 'message' | 'path' | 'extensions' | 'locations' | 'stack'\n    > = {name: 'Error', message: ''};\n\n    if (process.env.NODE_ENV === 'development') {\n      formatted.name = this.name;\n      formatted.message = 'Development: ' + this.message;\n      if (this.path) formatted.path = this.path;\n      if (this.locations) formatted.locations = this.locations;\n      if (this.extensions) formatted.extensions = this.extensions;\n      // Skip stack on purpose because we don't want to expose it to the browser.\n    }\n\n    return formatted;\n  }\n}\n\nexport function throwErrorWithGqlLink<T>({\n  url,\n  response,\n  errors,\n  type,\n  query,\n  queryVariables,\n  ErrorConstructor = Error,\n  client = 'storefront',\n}: GraphQLErrorOptions<T>): never {\n  const errorMessage =\n    (typeof errors === 'string'\n      ? errors\n      : errors?.map?.((error) => error.message).join('\\n')) ||\n    `URL: ${url}\\nAPI response error: ${response.status}`;\n\n  const gqlError = new GraphQLError(errorMessage, {\n    query,\n    queryVariables,\n    cause: {errors},\n    clientOperation: `${client}.${type}`,\n    requestId: response.headers.get('x-request-id'),\n  });\n\n  throw new ErrorConstructor(gqlError.message, {cause: gqlError.cause});\n}\n", "/**\n * Ensures that the error of an async rejected promise\n * contains the entire synchronous stack trace.\n */\nexport function withSyncStack<T>(\n  promise: Promise<T>,\n  options: {\n    stackOffset?: number;\n    logErrors?: boolean | ((error?: Error) => boolean);\n  } = {},\n): Promise<T> {\n  const syncError = new Error();\n  const getSyncStack = (message: string, name = 'Error') => {\n    // Remove error message, caller function and current function from the stack.\n    const syncStack = (syncError.stack ?? '')\n      .split('\\n')\n      .slice(3 + (options.stackOffset ?? 0))\n      .join('\\n')\n      // Sometimes stack traces show loaders with a number suffix due to ESBuild.\n      .replace(/ at loader(\\d+) \\(/, (all, m1) => all.replace(m1, ''));\n\n    return `${name}: ${message}\\n` + syncStack;\n  };\n\n  return promise\n    .then((result: any) => {\n      if (result?.errors && Array.isArray(result.errors)) {\n        const logErrors =\n          typeof options.logErrors === 'function'\n            ? options.logErrors\n            : () => options.logErrors ?? false;\n\n        result.errors.forEach((error: Error) => {\n          if (error) {\n            error.stack = getSyncStack(error.message, error.name);\n            if (logErrors(error)) console.error(error);\n          }\n        });\n      }\n\n      return result;\n    })\n    .catch((error: Error) => {\n      if (error) error.stack = getSyncStack(error.message, error.name);\n      throw error;\n    });\n}\n\nexport type StackInfo = {\n  file?: string;\n  func?: string;\n  line?: number;\n  column?: number;\n};\n\n/**\n * Finds the stack line of a caller function without using sourcemaps.\n * @param {number} stackOffset - The number of stack frames to skip.\n * @returns {StackInfo | undefined}\n */\nexport const getCallerStackLine =\n  process.env.NODE_ENV === 'development'\n    ? (stackOffset = 0) => {\n        let stackInfo: StackInfo | undefined = undefined;\n        const original = Error.prepareStackTrace;\n\n        // Accessing sourcemaps slows down execution time significantly.\n        // Overwrite the prepareStackTrace function to avoid accessing\n        // sourcemaps and just store what we need.\n        Error.prepareStackTrace = (_, callsites) => {\n          // The first callsite is `getCallerStackLine` itself.\n          // The second one is the immediate caller function (e.g. `withCache`).\n          // Skip both and find the first ancestor.\n          const cs = callsites[2 + stackOffset];\n\n          stackInfo = cs && {\n            file: cs.getFileName() ?? undefined,\n            func: cs.getFunctionName() ?? undefined,\n            line: cs.getLineNumber() ?? undefined,\n            column: cs.getColumnNumber() ?? undefined,\n          };\n\n          return '';\n        };\n\n        // Create and access stack to run the previous function\n        const err = {stack: ''};\n        Error.captureStackTrace(err);\n        err.stack;\n\n        Error.prepareStackTrace = original;\n\n        return stackInfo as StackInfo | undefined;\n      }\n    : undefined;\n", "export type CrossRuntimeRequest = {\n  url?: string;\n  method?: string;\n  headers: {\n    get?: (key: string) => string | null | undefined;\n    [key: string]: any;\n  };\n};\n\nexport function getHeader(request: CrossRuntimeRequest, key: string) {\n  return getHeaderValue(request.headers, key);\n}\n\nexport function getHeaderValue(\n  headers: CrossRuntimeRequest['headers'],\n  key: string,\n) {\n  const value = headers?.get?.(key) ?? headers?.[key];\n  return typeof value === 'string' ? value : null;\n}\n\nexport function getDebugHeaders(request?: CrossRuntimeRequest) {\n  return {\n    requestId: request ? getHeader(request, 'request-id') : undefined,\n    purpose: request ? getHeader(request, 'purpose') : undefined,\n  };\n}\n", "import {type CachingStrategy} from './strategies';\nimport {type CrossRuntimeRequest, getDebugHeaders} from '../utils/request';\nimport {getCallerStackLine} from '../utils/callsites';\nimport {\n  CacheActionFunctionParam,\n  CacheKey,\n  runWithCache,\n} from './run-with-cache';\nimport {fetchWithServerCache} from './server-fetch';\nimport type {WaitUntil} from '../types';\n\ntype CreateWithCacheOptions = {\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil: WaitUntil;\n  /** The `request` object is used by the Subrequest profiler, and to access certain headers for debugging */\n  request: CrossRuntimeRequest;\n};\n\ntype WithCacheRunOptions<T> = {\n  /** The cache key for this run */\n  cacheKey: CacheKey;\n  /**\n   * Use the `CachingStrategy` to define a custom caching mechanism for your data.\n   * Or use one of the pre-defined caching strategies: [`CacheNone`](/docs/api/hydrogen/utilities/cachenone), [`CacheShort`](/docs/api/hydrogen/utilities/cacheshort), [`CacheLong`](/docs/api/hydrogen/utilities/cachelong).\n   */\n  cacheStrategy: CachingStrategy;\n  /** Useful to avoid accidentally caching bad results */\n  shouldCacheResult: (value: T) => boolean;\n};\n\ntype WithCacheFetchOptions<T> = {\n  displayName?: string;\n  /**\n   * Use the `CachingStrategy` to define a custom caching mechanism for your data.\n   * Or use one of the pre-defined caching strategies: [`CacheNone`](/docs/api/hydrogen/utilities/cachenone), [`CacheShort`](/docs/api/hydrogen/utilities/cacheshort), [`CacheLong`](/docs/api/hydrogen/utilities/cachelong).\n   */\n  cacheStrategy?: CachingStrategy;\n  /** The cache key for this fetch */\n  cacheKey?: CacheKey;\n  /** Useful to avoid e.g. caching a successful response that contains an error in the body */\n  shouldCacheResponse: (body: T, response: Response) => boolean;\n};\n\nexport type WithCache = {\n  run: <T>(\n    options: WithCacheRunOptions<T>,\n    fn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n  ) => Promise<T>;\n  fetch: <T>(\n    url: string,\n    requestInit: RequestInit,\n    options: WithCacheFetchOptions<T>,\n  ) => Promise<{data: T | null; response: Response}>;\n};\n\nexport function createWithCache(\n  cacheOptions: CreateWithCacheOptions,\n): WithCache {\n  const {cache, waitUntil, request} = cacheOptions;\n\n  return {\n    run: <T>(\n      {cacheKey, cacheStrategy, shouldCacheResult}: WithCacheRunOptions<T>,\n      fn: ({addDebugData}: CacheActionFunctionParam) => T | Promise<T>,\n    ): Promise<T> => {\n      return runWithCache(cacheKey, fn, {\n        shouldCacheResult,\n        strategy: cacheStrategy,\n        cacheInstance: cache,\n        waitUntil,\n        debugInfo: {\n          ...getDebugHeaders(request),\n          stackInfo: getCallerStackLine?.(),\n        },\n      });\n    },\n\n    fetch: <T>(\n      url: string,\n      requestInit: RequestInit,\n      options: WithCacheFetchOptions<T>,\n    ): Promise<{data: T | null; response: Response}> => {\n      return fetchWithServerCache<T | null>(url, requestInit ?? {}, {\n        waitUntil,\n        cacheKey: [url, requestInit],\n        cacheInstance: cache,\n        debugInfo: {\n          url,\n          ...getDebugHeaders(request),\n          stackInfo: getCallerStackLine?.(),\n          displayName: options?.displayName,\n        },\n        cache: options.cacheStrategy,\n        ...options,\n      }).then(([data, response]) => ({data, response}));\n    },\n  };\n}\n", "type CacheMatch = {\n  body: Uint8Array;\n  timestamp: number;\n  status: number;\n  headers: [string, string][];\n};\n\n/**\n * This is a limited implementation of an in-memory cache.\n * It only supports the `cache-control` header.\n * It does NOT support `age` or `expires` headers.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Cache\n */\nexport class InMemoryCache implements Cache {\n  #store: Map<string, CacheMatch>;\n\n  constructor() {\n    this.#store = new Map();\n  }\n\n  add(request: RequestInfo): Promise<void> {\n    throw new Error('Method not implemented. Use `put` instead.');\n  }\n\n  addAll(requests: RequestInfo[]): Promise<void> {\n    throw new Error('Method not implemented. Use `put` instead.');\n  }\n\n  matchAll(\n    request?: RequestInfo,\n    options?: CacheQueryOptions,\n  ): Promise<readonly Response[]> {\n    throw new Error('Method not implemented. Use `match` instead.');\n  }\n\n  async put(request: Request, response: Response) {\n    if (request.method !== 'GET') {\n      throw new TypeError('Cannot cache response to non-GET request.');\n    }\n\n    if (response.status === 206) {\n      throw new TypeError(\n        'Cannot cache response to a range request (206 Partial Content).',\n      );\n    }\n\n    if (response.headers.get('vary')?.includes('*')) {\n      throw new TypeError(\"Cannot cache response with 'Vary: *' header.\");\n    }\n\n    this.#store.set(request.url, {\n      body: new Uint8Array(await response.arrayBuffer()),\n      status: response.status,\n      headers: [...response.headers],\n      timestamp: Date.now(),\n    });\n  }\n\n  async match(request: Request) {\n    if (request.method !== 'GET') return;\n\n    const match = this.#store.get(request.url);\n\n    if (!match) {\n      return;\n    }\n\n    const {body, timestamp, ...metadata} = match;\n\n    const headers = new Headers(metadata.headers);\n    const cacheControl =\n      headers.get('cache-control') || headers.get('real-cache-control') || '';\n    const maxAge = parseInt(\n      cacheControl.match(/max-age=(\\d+)/)?.[1] || '0',\n      10,\n    );\n    const swr = parseInt(\n      cacheControl.match(/stale-while-revalidate=(\\d+)/)?.[1] || '0',\n      10,\n    );\n    const age = (Date.now() - timestamp) / 1000;\n\n    const isMiss = age > maxAge + swr;\n\n    if (isMiss) {\n      this.#store.delete(request.url);\n      return;\n    }\n\n    const isStale = age > maxAge;\n\n    headers.set('cache', isStale ? 'STALE' : 'HIT');\n    headers.set('date', new Date(timestamp).toUTCString());\n\n    return new Response(body, {\n      status: metadata.status ?? 200,\n      headers,\n    });\n  }\n\n  async delete(request: Request) {\n    if (this.#store.has(request.url)) {\n      this.#store.delete(request.url);\n      return true;\n    }\n    return false;\n  }\n\n  keys(request?: Request) {\n    const cacheKeys = [] as Request[];\n\n    for (const url of this.#store.keys()) {\n      if (!request || request.url === url) {\n        cacheKeys.push(new Request(url));\n      }\n    }\n\n    return Promise.resolve(cacheKeys);\n  }\n}\n", "export function getRedirectUrl(requestUrl?: string): string | undefined {\n  if (!requestUrl) return;\n\n  const {pathname, search} = new URL(requestUrl);\n  const redirectFrom = pathname + search;\n\n  const searchParams = new URLSearchParams(search);\n  const redirectTo =\n    searchParams.get('return_to') || searchParams.get('redirect');\n\n  if (redirectTo) {\n    if (isLocalPath(requestUrl, redirectTo)) {\n      return redirectTo;\n    } else {\n      console.warn(\n        `Cross-domain redirects are not supported. Tried to redirect from ${redirectFrom} to ${redirectTo}`,\n      );\n    }\n  }\n}\n\nfunction isLocalPath(requestUrl: string, redirectUrl: string) {\n  // We don't want to redirect cross domain,\n  // doing so could create phishing vulnerability\n  // Test for protocols, e.g. https://, http://, //\n  // and uris: mailto:, tel:, javascript:, etc.\n  try {\n    return (\n      new URL(requestUrl).origin === new URL(redirectUrl, requestUrl).origin\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/** Ensure redirect url are always using request origin so we never redirect cross domain. Return the full url with request origin.\n *\n * @param requestUrl - Use to find app origin\n * @param defaultUrl - The default URL to redirect to.\n * @param redirectUrl - Relative or absolute URL of redirect. If the absolute URL is cross domain return undefined.\n * */\nexport function ensureLocalRedirectUrl({\n  requestUrl,\n  defaultUrl,\n  redirectUrl,\n}: {\n  requestUrl: string;\n  defaultUrl: string;\n  redirectUrl?: string;\n}): string {\n  const fromUrl = requestUrl;\n  const defautlUrl = buildURLObject(requestUrl, defaultUrl);\n  const toUrl = redirectUrl\n    ? buildURLObject(requestUrl, redirectUrl)\n    : defautlUrl;\n\n  if (isLocalPath(requestUrl, toUrl.toString())) {\n    return toUrl.toString();\n  } else {\n    console.warn(\n      `Cross-domain redirects are not supported. Tried to redirect from ${fromUrl} to ${toUrl}. Default url ${defautlUrl} is used instead.`,\n    );\n    return defautlUrl.toString();\n  }\n}\n\nfunction buildURLObject(\n  requestUrl: string,\n  relativeOrAbsoluteUrl: string,\n): URL {\n  return isAbsoluteUrl(relativeOrAbsoluteUrl)\n    ? new URL(relativeOrAbsoluteUrl)\n    : new URL(relativeOrAbsoluteUrl, new URL(requestUrl).origin);\n}\n\nfunction isAbsoluteUrl(url: string) {\n  try {\n    new URL(url);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n", "import type {UrlRedirectConnection} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {I18nBase, Storefront} from '../storefront';\nimport {getRedirectUrl} from '../utils/get-redirect-url';\n\ntype StorefrontRedirect = {\n  /** The [Storefront client](/docs/api/hydrogen/2024-10/utilities/createstorefrontclient) instance */\n  storefront: Storefront<I18nBase>;\n  /** The [MDN Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) object that was passed to the `server.ts` request handler. */\n  request: Request;\n  /** The [MDN Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object created by `handleRequest` */\n  response?: Response;\n  /** By default the `/admin` route is redirected to the Shopify Admin page for the current storefront. Disable this redirect by passing `true`. */\n  noAdminRedirect?: boolean;\n  /** By default, query parameters are not used to match redirects. Set this to `true` if you'd like redirects to be query parameter sensitive */\n  matchQueryParams?: boolean;\n};\n\n/**\n * Queries the Storefront API to see if there is any redirect\n * created for the current route and performs it. Otherwise,\n * it returns the response passed in the parameters. Useful for\n * conditionally redirecting after a 404 response.\n *\n * @see {@link https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect Creating URL redirects in Shopify}\n */\nexport async function storefrontRedirect(\n  options: StorefrontRedirect,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    noAdminRedirect,\n    matchQueryParams,\n    response = new Response('Not Found', {status: 404}),\n  } = options;\n\n  const url = new URL(request.url);\n  const {pathname, searchParams} = url;\n  const isSoftNavigation = searchParams.has('_data');\n\n  searchParams.delete('redirect');\n  searchParams.delete('return_to');\n  searchParams.delete('_data');\n\n  const redirectFrom = (\n    matchQueryParams ? url.toString().replace(url.origin, '') : pathname\n  ).toLowerCase();\n\n  if (url.pathname === '/admin' && !noAdminRedirect) {\n    return createRedirectResponse(\n      `${storefront.getShopifyDomain()}/admin`,\n      isSoftNavigation,\n      searchParams,\n      matchQueryParams,\n    );\n  }\n\n  try {\n    const {urlRedirects} = await storefront.query<{\n      urlRedirects: UrlRedirectConnection;\n    }>(REDIRECT_QUERY, {\n      // The admin doesn't allow redirects to have a\n      // trailing slash, so strip them all off\n      variables: {query: 'path:' + redirectFrom.replace(/\\/+$/, '')},\n    });\n\n    const location = urlRedirects?.edges?.[0]?.node?.target;\n\n    if (location) {\n      return createRedirectResponse(\n        location,\n        isSoftNavigation,\n        searchParams,\n        matchQueryParams,\n      );\n    }\n\n    const redirectTo = getRedirectUrl(request.url);\n\n    if (redirectTo) {\n      return createRedirectResponse(\n        redirectTo,\n        isSoftNavigation,\n        searchParams,\n        matchQueryParams,\n      );\n    }\n  } catch (error) {\n    console.error(\n      `Failed to fetch redirects from Storefront API for route ${redirectFrom}`,\n      error,\n    );\n  }\n\n  return response;\n}\n\nconst TEMP_DOMAIN = 'https://example.com';\n\nfunction createRedirectResponse(\n  location: string,\n  isSoftNavigation: boolean,\n  searchParams: URLSearchParams,\n  matchQueryParams?: boolean,\n) {\n  const url = new URL(location, TEMP_DOMAIN);\n\n  if (!matchQueryParams) {\n    for (const [key, value] of searchParams) {\n      // The redirect destination might include query params, so merge the\n      // original query params with the redirect destination query params\n      url.searchParams.append(key, value);\n    }\n  }\n\n  if (isSoftNavigation) {\n    return new Response(null, {\n      status: 200,\n      headers: {\n        'X-Remix-Redirect': url.toString().replace(TEMP_DOMAIN, ''),\n        'X-Remix-Status': '301',\n      },\n    });\n  } else {\n    return new Response(null, {\n      status: 301,\n      headers: {location: url.toString().replace(TEMP_DOMAIN, '')},\n    });\n  }\n}\n\nconst REDIRECT_QUERY = `#graphql\n  query redirects($query: String) {\n    urlRedirects(first: 1, query: $query) {\n      edges {\n        node {\n          target\n        }\n      }\n    }\n  }\n`;\n", "import type {LoaderFunctionArgs} from '@remix-run/server-runtime';\nimport type {Storefront} from '../storefront';\nimport type {CustomerAccount} from '../customer/types';\n\ntype GraphiQLLoader = (args: LoaderFunctionArgs) => Promise<Response>;\n\nexport const graphiqlLoader: GraphiQLLoader = async function graphiqlLoader({\n  request,\n  context,\n}: LoaderFunctionArgs) {\n  // For some reason, types are properly recognized by the editor,\n  // but not at build time on CI. Cast types here to ensure it builds.\n  const storefront = context.storefront as undefined | Storefront;\n  const customerAccount = context.customerAccount as\n    | undefined\n    | CustomerAccount;\n\n  const url = new URL(request.url);\n\n  if (!storefront) {\n    throw new Error(\n      `GraphiQL: Hydrogen's storefront client must be injected in the loader context.`,\n    );\n  }\n\n  const schemas: {\n    [key: string]: {\n      name: string;\n      value?: object;\n      accessToken?: string;\n      authHeader: string;\n      apiUrl: string;\n      icon: string;\n    };\n  } = {};\n\n  if (storefront) {\n    const authHeader = 'X-Shopify-Storefront-Access-Token';\n    schemas.storefront = {\n      name: 'Storefront API',\n      authHeader,\n      accessToken: storefront.getPublicTokenHeaders()[authHeader],\n      apiUrl: storefront.getApiUrl(),\n      icon: 'SF',\n    };\n  }\n\n  if (customerAccount) {\n    // CustomerAccount API does not support introspection to the same URL.\n    // Read it from a file using the asset server:\n    const customerAccountSchema = await (\n      await fetch(url.origin + '/graphiql/customer-account.schema.json')\n    ).json();\n\n    const accessToken = await customerAccount.getAccessToken();\n\n    if (customerAccountSchema) {\n      schemas['customer-account'] = {\n        name: 'Customer Account API',\n        value: customerAccountSchema,\n        authHeader: 'Authorization',\n        accessToken,\n        apiUrl: customerAccount.getApiUrl(),\n        icon: 'CA',\n      };\n    }\n  }\n\n  // GraphiQL icon from their GitHub repo\n  const favicon = `https://avatars.githubusercontent.com/u/12972006?s=48&v=4`;\n\n  // Add code highlighting to the HTML template\n  const html = String.raw;\n\n  return new Response(\n    html`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n        <head>\n          <title>GraphiQL</title>\n          <link rel=\"icon\" type=\"image/x-icon\" href=\"${favicon}\" />\n          <style>\n            body {\n              height: 100%;\n              margin: 0;\n              width: 100%;\n              overflow: hidden;\n              background-color: hsl(219, 29%, 18%);\n            }\n\n            #graphiql {\n              height: 100vh;\n            }\n\n            #graphiql > .placeholder {\n              color: slategray;\n              width: fit-content;\n              margin: 40px auto;\n              font-family: Arial;\n            }\n\n            .graphiql-api-toolbar-label {\n              position: absolute;\n              bottom: -6px;\n              right: -4px;\n              font-size: 8px;\n            }\n          </style>\n\n          <script\n            crossorigin\n            src=\"https://unpkg.com/react@18/umd/react.development.js\"\n          ></script>\n          <script\n            crossorigin\n            src=\"https://unpkg.com/react-dom@18/umd/react-dom.development.js\"\n          ></script>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://unpkg.com/graphiql@3/graphiql.min.css\"\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://unpkg.com/@graphiql/plugin-explorer/dist/style.css\"\n          />\n        </head>\n\n        <body>\n          <div id=\"graphiql\">\n            <div class=\"placeholder\">Loading GraphiQL...</div>\n          </div>\n\n          <script\n            src=\"https://unpkg.com/graphiql@3/graphiql.min.js\"\n            type=\"application/javascript\"\n            crossorigin=\"anonymous\"\n          ></script>\n          <script\n            src=\"https://unpkg.com/@graphiql/plugin-explorer/dist/index.umd.js\"\n            type=\"application/javascript\"\n            crossorigin=\"anonymous\"\n          ></script>\n\n          <script>\n            const windowUrl = new URL(document.URL);\n            const startingSchemaKey =\n              windowUrl.searchParams.get('schema') || 'storefront';\n\n            let query = '{ shop { name } }';\n            if (windowUrl.searchParams.has('query')) {\n              query = decodeURIComponent(\n                windowUrl.searchParams.get('query') ?? query,\n              );\n            }\n\n            // Prettify query\n            query = GraphiQL.GraphQL.print(GraphiQL.GraphQL.parse(query));\n\n            let variables;\n            if (windowUrl.searchParams.has('variables')) {\n              variables = decodeURIComponent(\n                windowUrl.searchParams.get('variables') ?? '',\n              );\n            }\n\n            // Prettify variables\n            if (variables) {\n              variables = JSON.stringify(JSON.parse(variables), null, 2);\n            }\n\n            const schemas = ${JSON.stringify(schemas)};\n            let lastActiveTabIndex = -1;\n            let lastTabAmount = -1;\n\n            const root = ReactDOM.createRoot(\n              document.getElementById('graphiql'),\n            );\n\n            root.render(React.createElement(RootWrapper));\n\n            const TAB_STATE_KEY = 'graphiql:tabState';\n            const storage = {\n              getTabState: () =>\n                JSON.parse(localStorage.getItem(TAB_STATE_KEY)),\n              setTabState: (state) =>\n                localStorage.setItem(TAB_STATE_KEY, JSON.stringify(state)),\n            };\n\n            let nextSchemaKey;\n\n            function RootWrapper() {\n              const [activeSchema, setActiveSchema] =\n                React.useState(startingSchemaKey);\n\n              const schema = schemas[activeSchema];\n              if (!schema) {\n                throw new Error('No schema found for ' + activeSchema);\n              }\n\n              const keys = Object.keys(schemas);\n\n              return React.createElement(\n                GraphiQL,\n                {\n                  fetcher: GraphiQL.createFetcher({\n                    url: schema.apiUrl,\n                    headers: {[schema.authHeader]: schema.accessToken},\n                  }),\n                  defaultEditorToolsVisibility: true,\n                  query,\n                  variables,\n                  schema: schema.value,\n                  plugins: [GraphiQLPluginExplorer.explorerPlugin()],\n                  onTabChange: (state) => {\n                    const {activeTabIndex, tabs} = state;\n                    const activeTab = tabs[activeTabIndex];\n\n                    if (\n                      activeTabIndex === lastActiveTabIndex &&\n                      lastTabAmount === tabs.length\n                    ) {\n                      if (\n                        nextSchemaKey &&\n                        activeTab &&\n                        activeTab.schemaKey !== nextSchemaKey\n                      ) {\n                        activeTab.schemaKey = nextSchemaKey;\n                        nextSchemaKey = undefined;\n\n                        // Sync state to localStorage. GraphiQL resets the state\n                        // asynchronously, so we need to do it in a timeout.\n                        storage.setTabState(state);\n                        setTimeout(() => storage.setTabState(state), 500);\n                      }\n\n                      // React rerrendering, skip\n                      return;\n                    }\n\n                    if (activeTab) {\n                      if (!activeTab.schemaKey) {\n                        // Creating a new tab\n                        if (lastTabAmount < tabs.length) {\n                          activeTab.schemaKey = activeSchema;\n                          storage.setTabState(state);\n                        }\n                      }\n\n                      const nextSchema = activeTab.schemaKey || 'storefront';\n\n                      if (nextSchema !== activeSchema) {\n                        setActiveSchema(nextSchema);\n                      }\n                    }\n\n                    lastActiveTabIndex = activeTabIndex;\n                    lastTabAmount = tabs.length;\n                  },\n                  toolbar: {\n                    additionalComponent: function () {\n                      const schema = schemas[activeSchema];\n\n                      return React.createElement(\n                        GraphiQL.React.ToolbarButton,\n                        {\n                          onClick: () => {\n                            const activeKeyIndex = keys.indexOf(activeSchema);\n                            nextSchemaKey =\n                              keys[(activeKeyIndex + 1) % keys.length];\n\n                            // This triggers onTabChange\n                            if (nextSchemaKey) setActiveSchema(nextSchemaKey);\n                          },\n                          label: 'Toggle between different API schemas',\n                        },\n                        React.createElement(\n                          'div',\n                          {\n                            key: 'api-wrapper',\n                            className: 'graphiql-toolbar-icon',\n                            style: {position: 'relative', fontWeight: 'bolder'},\n                          },\n                          [\n                            React.createElement(\n                              'div',\n                              {key: 'icon', style: {textAlign: 'center'}},\n                              [\n                                schema.icon,\n                                React.createElement(\n                                  'div',\n                                  {\n                                    key: 'icon-label',\n                                    className: 'graphiql-api-toolbar-label',\n                                  },\n                                  'API',\n                                ),\n                              ],\n                            ),\n                          ],\n                        ),\n                      );\n                    },\n                  },\n                },\n                [\n                  React.createElement(\n                    GraphiQL.Logo,\n                    {\n                      key: 'Logo replacement',\n                    },\n                    [\n                      React.createElement(\n                        'div',\n                        {\n                          key: 'Logo wrapper',\n                          style: {display: 'flex', alignItems: 'center'},\n                        },\n                        [\n                          React.createElement(\n                            'div',\n                            {\n                              key: 'api',\n                              className: 'graphiql-logo',\n                              style: {\n                                paddingRight: 0,\n                                whiteSpace: 'nowrap',\n                              },\n                            },\n                            [schema.name],\n                          ),\n                          React.createElement(GraphiQL.Logo, {key: 'logo'}),\n                        ],\n                      ),\n                    ],\n                  ),\n                ],\n              );\n            }\n          </script>\n        </body>\n      </html>\n    `,\n    {status: 200, headers: {'content-type': 'text/html'}},\n  );\n};\n", "import {createElement, Fragment, lazy, Suspense, useMemo} from 'react';\nimport {\n  type Location,\n  type Params,\n  useLocation,\n  useMatches,\n} from '@remix-run/react';\nimport {generateSeoTags, type SeoConfig} from './generate-seo-tags';\n\nimport type {LoaderFunction, SerializeFrom} from '@remix-run/server-runtime';\n\nconst SeoLogger = lazy(() => import('./log-seo-tags'));\n\nexport interface SeoHandleFunction<\n  Loader extends LoaderFunction | unknown = unknown,\n> {\n  (args: {\n    data: Loader extends LoaderFunction ? SerializeFrom<Loader> : unknown;\n    id: string;\n    params: Params;\n    pathname: Location['pathname'];\n    search: Location['search'];\n    hash: Location['hash'];\n    key: string;\n  }): Partial<SeoConfig>;\n}\n\ninterface SeoProps {\n  /** Enable debug mode that prints SEO properties for route in the console */\n  debug?: boolean;\n}\n\ntype SeoWrapper = undefined | {seo: any};\n\n/**\n * @deprecated - use `getSeoMeta` instead\n */\nexport function Seo({debug}: SeoProps) {\n  const matches = useMatches();\n  const location = useLocation();\n\n  console.warn(\n    '[h2:warn:Seo] The `<Seo/>` component is deprecated. Use `getSeoMeta` instead.\\nSee: https://shopify.dev/docs/api/hydrogen/2024-10/utilities/getseometa',\n  );\n\n  // Capture the seo and jsonLd configs from the route matches\n  const seoConfig = useMemo(() => {\n    return (\n      matches\n        .flatMap((match) => {\n          const {handle, ...routeMatch} = match;\n          const routeData = {...routeMatch, ...location};\n          const handleSeo = (handle as SeoWrapper)?.seo;\n          const loaderSeo = (routeMatch?.data as SeoWrapper)?.seo;\n\n          if (!handleSeo && !loaderSeo) {\n            return [];\n          }\n\n          // if seo is defined in the handle, invoke it with the route data\n          if (handleSeo) {\n            return recursivelyInvokeOrReturn(handleSeo, routeData);\n          } else {\n            return [loaderSeo];\n          }\n        })\n        // merge route seo (priority) with the root seo if both are present\n        // jsonLd definitions are instead concatenated because there can be\n        // multiple jsonLd tags on any given root+route. e.g root renders Organization\n        // schema and a product page renders Product schema\n        .reduce((acc, current) => {\n          // remove seo properties with falsy values\n          Object.keys(current).forEach(\n            (key) => !current[key] && delete current[key],\n          );\n\n          const {jsonLd} = current;\n\n          if (!jsonLd) {\n            return {...acc, ...current};\n          }\n\n          // concatenate jsonLds if present\n          if (!acc?.jsonLd) {\n            return {...acc, ...current, jsonLd: [jsonLd]};\n          } else {\n            if (Array.isArray(jsonLd)) {\n              return {\n                ...acc,\n                ...current,\n                jsonLd: [...acc.jsonLd, ...jsonLd],\n              };\n            } else {\n              return {\n                ...acc,\n                ...current,\n                jsonLd: [...acc.jsonLd, jsonLd],\n              };\n            }\n          }\n        }, {} as SeoConfig)\n    );\n  }, [matches, location]);\n\n  // Generate seo and jsonLd tags from the route seo configs\n  // and return the jsx elements as html\n  const {html, loggerMarkup} = useMemo(() => {\n    const headTags = generateSeoTags(seoConfig);\n    const html = headTags.map((tag) => {\n      if (tag.tag === 'script') {\n        return createElement(tag.tag, {\n          ...tag.props,\n          key: tag.key,\n          dangerouslySetInnerHTML: {__html: tag.children},\n        });\n      }\n\n      return createElement(tag.tag, {...tag.props, key: tag.key}, tag.children);\n    });\n\n    const loggerMarkup = createElement(\n      Suspense,\n      {fallback: null},\n      createElement(SeoLogger, {headTags}),\n    );\n\n    return {html, loggerMarkup};\n  }, [seoConfig]);\n\n  return createElement(Fragment, null, html, debug && loggerMarkup);\n}\n\n/**\n * Recursively invoke a function or return the value\n * @param value\n * @param rest\n * @returns\n */\nexport function recursivelyInvokeOrReturn<T, R extends any[]>(\n  value: T | ((...rest: R) => T),\n  ...rest: R\n): T | Record<string, T> {\n  if (value instanceof Function) {\n    return recursivelyInvokeOrReturn<T, R>(value(...rest), ...rest);\n  }\n\n  let result: Record<string, T> = {};\n\n  if (Array.isArray(value)) {\n    result = value.reduce((acc, item) => {\n      return [...acc, recursivelyInvokeOrReturn(item)];\n    }, []);\n\n    return result;\n  }\n\n  if (value instanceof Object) {\n    const entries = Object.entries(value);\n\n    entries.forEach(([key, val]) => {\n      // @ts-expect-error\n      result[key] = recursivelyInvokeOrReturn<T, R>(val, ...rest);\n    });\n\n    return result;\n  }\n\n  return value;\n}\n", "// This is taken from remix: https://github.com/remix-run/remix/blob/main/packages/remix-server-runtime/markup.ts\n\nconst ESCAPE_LOOKUP: {[match: string]: string} = {\n  '&': '\\\\u0026',\n  '>': '\\\\u003e',\n  '<': '\\\\u003c',\n  '\\u2028': '\\\\u2028',\n  '\\u2029': '\\\\u2029',\n};\n\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\n\nexport function escapeHtml(html: string) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\n", "import type {ComponentPropsWithoutRef} from 'react';\nimport type {Maybe} from '@shopify/hydrogen-react/storefront-api-types';\nimport type {Thing, WithContext} from 'schema-dts';\nimport {escapeHtml} from './escape';\n\nconst ERROR_PREFIX = 'Error in SEO input: ';\n\n// TODO: Refactor this into more reusable validators or use a library like zod to do this if we decide to use it in\n// other places. @cartogram\nexport const schema = {\n  title: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`title` should be a string'));\n      }\n\n      if (typeof value === 'string' && value.length > 120) {\n        throw new Error(\n          ERROR_PREFIX.concat(\n            '`title` should not be longer than 120 characters',\n          ),\n        );\n      }\n\n      return value;\n    },\n  },\n  description: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(\n          ERROR_PREFIX.concat('`description` should be a string'),\n        );\n      }\n\n      if (typeof value === 'string' && value.length > 155) {\n        throw new Error(\n          ERROR_PREFIX.concat(\n            '`description` should not be longer than 155 characters',\n          ),\n        );\n      }\n\n      return value;\n    },\n  },\n  url: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`url` should be a string'));\n      }\n\n      if (typeof value === 'string' && !value.startsWith('http')) {\n        throw new Error(ERROR_PREFIX.concat('`url` should be a valid URL'));\n      }\n\n      return value;\n    },\n  },\n  handle: {\n    validate: <T>(value: Maybe<T>): NonNullable<T> => {\n      if (typeof value !== 'string') {\n        throw new Error(ERROR_PREFIX.concat('`handle` should be a string'));\n      }\n\n      if (typeof value === 'string' && !value.startsWith('@')) {\n        throw new Error(ERROR_PREFIX.concat('`handle` should start with `@`'));\n      }\n\n      return value;\n    },\n  },\n};\n\nexport interface SeoConfig {\n  /**\n   * The `title` HTML element defines the document's title that is shown in a browser's title bar or a page's tab. It\n   * only contains text; tags within the element are ignored.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title\n   */\n  title?: Maybe<string>;\n  /**\n   * Generate the title from a template that includes a `%s` placeholder for the title.\n   *\n   * @example\n   * ```js\n   * {\n   *   title: 'My Page',\n   *   titleTemplate: 'My Site - %s',\n   * }\n   * ```\n   */\n  titleTemplate?: Maybe<string> | null;\n  /**\n   * The media associated with the given page (images, videos, etc). If you pass a string, it will be used as the\n   * `og:image` meta tag. If you pass an object or an array of objects, that will be used to generate `og:<type of\n   * media>` meta tags. The `url` property should be the URL of the media. The `height` and `width` properties are\n   * optional and should be the height and width of the media. The `altText` property is optional and should be a\n   * description of the media.\n   *\n   * @example\n   * ```js\n   * {\n   *   media: [\n   *     {\n   *       url: 'https://example.com/image.jpg',\n   *       type: 'image',\n   *       height: '400',\n   *       width: '400',\n   *       altText: 'A custom snowboard with an alpine color pallet.',\n   *     }\n   *   ]\n   * }\n   * ```\n   *\n   */\n  media?:\n    | Maybe<string>\n    | Partial<SeoMedia>\n    | (Partial<SeoMedia> | Maybe<string>)[];\n  /**\n   * The description of the page. This is used in the `name=\"description\"` meta tag as well as the `og:description` meta\n   * tag.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta\n   */\n  description?: Maybe<string>;\n  /**\n   * The canonical URL of the page. This is used to tell search engines which URL is the canonical version of a page.\n   * This is useful when you have multiple URLs that point to the same page. The value here will be used in the\n   * `rel=\"canonical\"` link tag as well as the `og:url` meta tag.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\n   */\n  url?: Maybe<string>;\n  /**\n   * The handle is used to generate the `twitter:site` and `twitter:creator` meta tags. Include the `@` symbol in the\n   * handle.\n   *\n   * @example\n   * ```js\n   * {\n   *   handle: '@shopify'\n   * }\n   * ```\n   */\n  handle?: Maybe<string>;\n  /**\n   * The `jsonLd` property is used to generate the `application/ld+json` script tag. This is used to provide structured\n   * data to search engines. The value should be an object that conforms to the schema.org spec. The `type` property\n   * should be the type of schema you are using. The `type` property is required and should be one of the following:\n   *\n   * - `Product`\n   * - `ItemList`\n   * - `Organization`\n   * - `WebSite`\n   * - `WebPage`\n   * - `BlogPosting`\n   * - `Thing`\n   *\n   * The value is validated via [schema-dts](https://www.npmjs.com/package/schema-dts)\n   *\n   * @example\n   * ```js\n   * {\n   *   jsonLd: {\n   *     '@context': 'https://schema.org',\n   *     '@type': 'Product',\n   *     name: 'My Product',\n   *     image: 'https://hydrogen.shop/image.jpg',\n   *     description: 'A product that is great',\n   *     sku: '12345',\n   *     mpn: '12345',\n   *     brand: {\n   *       '@type': 'Thing',\n   *       name: 'My Brand',\n   *     },\n   *     aggregateRating: {\n   *       '@type': 'AggregateRating',\n   *       ratingValue: '4.5',\n   *       reviewCount: '100',\n   *     },\n   *     offers: {\n   *       '@type': 'Offer',\n   *       priceCurrency: 'USD',\n   *       price: '100',\n   *       priceValidUntil: '2020-11-05',\n   *       itemCondition: 'https://schema.org/NewCondition',\n   *       availability: 'https://schema.org/InStock',\n   *       seller: {\n   *         '@type': 'Organization',\n   *         name: 'My Brand',\n   *       },\n   *     },\n   *   }\n   * }\n   * ```\n   *\n   * @see https://schema.org/docs/schemas.html\n   * @see https://developers.google.com/search/docs/guides/intro-structured-data\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\n   *\n   */\n  jsonLd?: WithContext<Thing> | WithContext<Thing>[];\n  /**\n   * The `alternates` property is used to specify the language and geographical targeting when you have multiple\n   * versions of the same page in different languages. The `url` property tells search engines about these variations\n   * and helps them to serve the correct version to their users.\n   *\n   * @example\n   * ```js\n   * {\n   *   alternates: [\n   *     {\n   *       language: 'en-US',\n   *       url: 'https://hydrogen.shop/en-us',\n   *       default: true,\n   *     },\n   *     {\n   *       language: 'fr-CA',\n   *       url: 'https://hydrogen.shop/fr-ca',\n   *     },\n   *   ]\n   * }\n   * ```\n   *\n   * @see https://support.google.com/webmasters/answer/189077?hl=en\n   */\n  alternates?: LanguageAlternate | LanguageAlternate[];\n  /**\n   * The `robots` property is used to specify the robots meta tag. This is used to tell search engines which pages\n   * should be indexed and which should not.\n   *\n   * @see https://developers.google.com/search/reference/robots_meta_tag\n   */\n  robots?: RobotsOptions;\n}\n\n/**\n * @see https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag\n */\nexport interface RobotsOptions {\n  /**\n   * Set the maximum size of an image preview for this page in a search results Can be one of the following:\n   *\n   * - `none` - No image preview is to be shown.\n   * - `standard` - A default image preview may be shown.\n   * - `large` - A larger image preview, up to the width of the viewport, may be shown.\n   *\n   * If no value is specified a default image preview size is used.\n   */\n  maxImagePreview?: 'none' | 'standard' | 'large';\n  /**\n   * A number representing the maximum of amount characters to use as a textual snippet for a search result. This value\n   * can also be set to one of the following special values:\n   *\n   * - 0 - No snippet is to be shown. Equivalent to nosnippet.\n   * - 1 - The Search engine will choose the snippet length that it believes is most effective to help users discover\n   *   your content and direct users to your site\n   * - -1 - No limit on the number of characters that can be shown in the snippet.\n   */\n  maxSnippet?: number;\n  /**\n   * The maximum number of seconds for videos on this page to show in search results. This value can also be set to one\n   * of the following special values:\n   *\n   * - 0 - A static image may be used with the `maxImagePreview` setting.\n   * - 1 - There is no limit to the size of the video preview.\n   *\n   * This applies to all forms of search results (at Google: web search, Google Images, Google Videos, Discover,\n   * Assistant).\n   */\n  maxVideoPreview?: number;\n  /**\n   * Do not show a cached link in search results.\n   */\n  noArchive?: boolean;\n  /**\n   * Do not follow the links on this page.\n   *\n   * @see https://developers.google.com/search/docs/advanced/guidelines/qualify-outbound-links\n   */\n  noFollow?: boolean;\n  /**\n   * Do not index images on this page.\n   */\n  noImageIndex?: boolean;\n  /**\n   * Do not show this page, media, or resource in search results.\n   */\n  noIndex?: boolean;\n  /**\n   * Do not show a text snippet or video preview in the search results for this page.\n   */\n  noSnippet?: boolean;\n  /**\n   * Do not offer translation of this page in search results.\n   */\n  noTranslate?: boolean;\n  /**\n   * Do not show this page in search results after the specified date/time.\n   */\n  unavailableAfter?: string;\n}\n\nexport interface LanguageAlternate {\n  /**\n   * Language code for the alternate page. This is used to generate the hreflang meta tag property.\n   */\n  language: string;\n  /**\n   * Whether the alternate page is the default page. This will add the `x-default` attribution to the language code.\n   */\n  default?: boolean;\n  /**\n   * The url of the alternate page. This is used to generate the hreflang meta tag property.\n   */\n  url: string;\n}\n\nexport type SeoMedia = {\n  /**\n   * Used to generate og:<type of media> meta tag\n   */\n  type: 'image' | 'video' | 'audio';\n  /**\n   * The url value populates both url and secure_url and is used to infer the og:<type of media>:type meta tag.\n   */\n  url: Maybe<string> | undefined;\n  /**\n   * The height in pixels of the media. This is used to generate the og:<type of media>:height meta tag.\n   */\n  height: Maybe<number> | undefined;\n  /**\n   * The width in pixels of the media. This is used to generate the og:<type of media>:width meta tag.\n   */\n  width: Maybe<number> | undefined;\n  /**\n   * The alt text for the media. This is used to generate the og:<type of media>:alt meta tag.\n   */\n  altText: Maybe<string> | undefined;\n};\n\ntype TagKey = 'title' | 'base' | 'meta' | 'link' | 'script';\n\nexport interface CustomHeadTagObject {\n  tag: TagKey;\n  props: Record<string, unknown>;\n  children?: string;\n  key: string;\n}\n\n/**\n * The `generateSeoTags` function generates the SEO title, meta, link and script (JSON Linking Data) tags for a page. It\n * pairs well with the SEO component in `@shopify/hydrogen` when building a Hydrogen Remix app, but can be used on its\n * own if you want to generate the tags yourself.\n */\nexport function generateSeoTags(seoInput: SeoConfig): CustomHeadTagObject[] {\n  const tagResults: CustomHeadTagObject[] = [];\n\n  for (const seoKey of Object.keys(seoInput)) {\n    switch (seoKey) {\n      case 'title': {\n        const content = validate(schema.title, seoInput.title);\n        const title = renderTitle(seoInput?.titleTemplate, content);\n\n        if (!title) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('title', {title}),\n          generateTag('meta', {property: 'og:title', content: title}),\n          generateTag('meta', {name: 'twitter:title', content: title}),\n        );\n\n        break;\n      }\n\n      case 'description': {\n        const content = validate(schema.description, seoInput.description);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('meta', {\n            name: 'description',\n            content,\n          }),\n          generateTag('meta', {\n            property: 'og:description',\n            content,\n          }),\n          generateTag('meta', {\n            name: 'twitter:description',\n            content,\n          }),\n        );\n\n        break;\n      }\n\n      case 'url': {\n        const content = validate(schema.url, seoInput.url);\n\n        if (!content) {\n          break;\n        }\n\n        const urlWithoutParams = content.split('?')[0];\n        const urlWithoutTrailingSlash = urlWithoutParams.replace(/\\/$/, '');\n\n        tagResults.push(\n          generateTag('link', {\n            rel: 'canonical',\n            href: urlWithoutTrailingSlash,\n          }),\n          generateTag('meta', {\n            property: 'og:url',\n            content: urlWithoutTrailingSlash,\n          }),\n        );\n\n        break;\n      }\n\n      case 'handle': {\n        const content = validate(schema.handle, seoInput.handle);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          generateTag('meta', {name: 'twitter:site', content}),\n          generateTag('meta', {name: 'twitter:creator', content}),\n        );\n\n        break;\n      }\n\n      case 'media': {\n        let content;\n        const values = ensureArray(seoInput.media);\n\n        for (const media of values) {\n          if (typeof media === 'string') {\n            tagResults.push(\n              generateTag('meta', {name: 'og:image', content: media}),\n            );\n          }\n\n          if (media && typeof media === 'object') {\n            const type = media.type || 'image';\n\n            // Order matters here when adding multiple media tags @see https://ogp.me/#array\n            const normalizedMedia = media\n              ? {\n                  url: media?.url,\n                  secure_url: media?.url,\n                  type: inferMimeType(media.url),\n                  width: media?.width,\n                  height: media?.height,\n                  alt: media?.altText,\n                }\n              : {};\n\n            for (const key of Object.keys(normalizedMedia)) {\n              if (normalizedMedia[key as keyof typeof normalizedMedia]) {\n                content = normalizedMedia[\n                  key as keyof typeof normalizedMedia\n                ] as string;\n\n                tagResults.push(\n                  generateTag(\n                    'meta',\n                    {\n                      property: `og:${type}:${key}`,\n                      content,\n                    },\n                    normalizedMedia.url as string,\n                  ),\n                );\n              }\n            }\n          }\n        }\n        break;\n      }\n\n      case 'jsonLd': {\n        const jsonLdBlocks = ensureArray(seoInput.jsonLd);\n        let index = 0;\n        for (const block of jsonLdBlocks) {\n          if (typeof block !== 'object') {\n            continue;\n          }\n\n          const tag = generateTag(\n            'script',\n            {\n              type: 'application/ld+json',\n              children: JSON.stringify(block, (k, value) => {\n                return typeof value === 'string' ? escapeHtml(value) : value;\n              }),\n            },\n            // @ts-expect-error\n            `json-ld-${block?.['@type'] || block?.name || index++}`,\n          );\n\n          tagResults.push(tag);\n        }\n\n        break;\n      }\n\n      case 'alternates': {\n        const alternates = ensureArray(seoInput.alternates);\n\n        for (const alternate of alternates) {\n          if (!alternate) {\n            continue;\n          }\n\n          const {language, url, default: defaultLang} = alternate;\n\n          const hrefLang = language\n            ? `${language}${defaultLang ? '-default' : ''}`\n            : undefined;\n\n          tagResults.push(\n            generateTag('link', {\n              rel: 'alternate',\n              hrefLang,\n              href: url,\n            }),\n          );\n        }\n\n        break;\n      }\n\n      case 'robots': {\n        if (!seoInput.robots) {\n          break;\n        }\n\n        const {\n          maxImagePreview,\n          maxSnippet,\n          maxVideoPreview,\n          noArchive,\n          noFollow,\n          noImageIndex,\n          noIndex,\n          noSnippet,\n          noTranslate,\n          unavailableAfter,\n        } = seoInput.robots;\n\n        const robotsParams = [\n          noArchive && 'noarchive',\n          noImageIndex && 'noimageindex',\n          noSnippet && 'nosnippet',\n          noTranslate && `notranslate`,\n          maxImagePreview && `max-image-preview:${maxImagePreview}`,\n          maxSnippet && `max-snippet:${maxSnippet}`,\n          maxVideoPreview && `max-video-preview:${maxVideoPreview}`,\n          unavailableAfter && `unavailable_after:${unavailableAfter}`,\n        ];\n\n        let robotsParam =\n          (noIndex ? 'noindex' : 'index') +\n          ',' +\n          (noFollow ? 'nofollow' : 'follow');\n\n        for (let param of robotsParams) {\n          if (param) {\n            robotsParam += `,${param}`;\n          }\n        }\n\n        tagResults.push(\n          generateTag('meta', {name: 'robots', content: robotsParam}),\n        );\n\n        break;\n      }\n\n      default: {\n        // TODO: We should be able to catch unaccounted for keys at compile time\n        // let exhaustiveCheck: never = seoKey;\n\n        break;\n      }\n    }\n  }\n\n  return tagResults.flat().sort((a, b) => a.key.localeCompare(b.key));\n}\n\nexport function generateTag<T extends TagKey>(\n  tagName: T,\n  input: ComponentPropsWithoutRef<T>,\n  group?: string,\n): CustomHeadTagObject {\n  const tag: CustomHeadTagObject = {tag: tagName, props: {}, key: ''};\n\n  // title tags don't have props so move to children\n  if (tagName === 'title') {\n    tag.children = input.title as string;\n    tag.key = generateKey(tag);\n\n    return tag;\n  }\n\n  // also move the input children to children and delete it\n  if (tagName === 'script') {\n    tag.children = typeof input.children === 'string' ? input.children : '';\n    tag.key = generateKey(tag, group);\n    delete input.children;\n    tag.props = input;\n    return tag;\n  }\n\n  // the rest goes on props\n  tag.props = input;\n\n  // remove empty props\n  Object.keys(tag.props).forEach(\n    (key) => !tag.props[key] && delete tag.props[key],\n  );\n\n  tag.key = generateKey(tag, group);\n\n  return tag;\n}\n\n//**\n// * Generate a unique key for a tag\n// * @param tag - a generated tag object\n// * @param group? - the group the tag belongs to\n// * @returns - a unique key to be used for react\n// */\nexport function generateKey(tag: CustomHeadTagObject, group?: string) {\n  const {tag: tagName, props} = tag;\n\n  if (tagName === 'title') {\n    // leading 0 moves title to the top when sorting\n    return '0-title';\n  }\n\n  if (tagName === 'meta') {\n    // leading 0 moves meta to the top when sorting exclude secure_url from the logic because the content is the same as\n    // url\n    const priority =\n      props.content === group &&\n      typeof props.property === 'string' &&\n      !props.property.endsWith('secure_url') &&\n      '0';\n    const groupName = [group, priority];\n\n    return [tagName, ...groupName, props.property || props.name]\n      .filter((x) => x)\n      .join('-');\n  }\n\n  if (tagName === 'link') {\n    const key = [tagName, props.rel, props.hrefLang || props.media]\n      .filter((x) => x)\n      .join('-');\n\n    // replace spaces with dashes, needed for media prop\n    return key.replace(/\\s+/g, '-');\n  }\n\n  if (tagName === 'script') {\n    return `${tagName}-${group}`;\n  }\n\n  return `${tagName}-${props.type}`;\n}\n\nexport function renderTitle<T extends CustomHeadTagObject['children']>(\n  template?:\n    | string\n    | ((title: string) => string | undefined)\n    | undefined\n    | null,\n  title?: T | null,\n): string | undefined {\n  if (!title) {\n    return undefined;\n  }\n\n  if (!template) {\n    return title;\n  }\n\n  if (typeof template === 'function') {\n    return template(title);\n  }\n\n  return template.replace('%s', title ?? '');\n}\n\nexport function inferMimeType(url: Maybe<string> | undefined) {\n  const ext = url && url.split('.').pop();\n\n  switch (ext) {\n    case 'svg':\n      return 'image/svg+xml';\n    case 'png':\n      return 'image/png';\n    case 'gif':\n      return 'image/gif';\n    case 'swf':\n      return 'application/x-shockwave-flash';\n    case 'mp3':\n      return 'audio/mpeg';\n    case 'jpg':\n    case 'jpeg':\n    default:\n      return 'image/jpeg';\n  }\n}\n\nexport type SchemaType =\n  | 'Product'\n  | 'ItemList'\n  | 'Organization'\n  | 'WebSite'\n  | 'WebPage'\n  | 'BlogPosting'\n  | 'Thing';\n\nexport function ensureArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n\nexport function validate<T>(\n  schema: {validate: <T>(data: T) => NonNullable<T>},\n  data: T,\n): T {\n  try {\n    return schema.validate<T>(data);\n  } catch (error: unknown) {\n    console.warn((error as Error).message);\n    return data;\n  }\n}\n", "import {\n  ensureArray,\n  inferMimeType,\n  renderTitle,\n  schema,\n  validate,\n  type SeoConfig,\n} from './generate-seo-tags';\nimport {MetaFunction} from '@remix-run/react';\n\nexport type GetSeoMetaReturn = ReturnType<MetaFunction>;\n\ntype GetSeoMetaTypeForDocs = {\n  /** `getSeoMeta` takes an arbitrary number of configuration object parameters. Values in each object are overwritten based on the object order. \\`jsonLd\\` properties are preserved between each configuration object. */\n  seoInputs: SeoConfig[];\n};\n\ntype SeoKey = keyof SeoConfig;\n\ntype Optional<T> = T | null | undefined;\n\n/**\n * Generate a Remix meta array from one or more SEO configuration objects. This is useful to pass SEO configuration for the parent route(s) and the current route. Similar to `Object.assign()`, each property is overwritten based on the object order. The exception is `jsonLd`, which is preserved so that each route has it's own independent jsonLd meta data.\n */\nexport function getSeoMeta(\n  ...seoInputs: Optional<SeoConfig>[]\n): GetSeoMetaReturn {\n  let tagResults: GetSeoMetaReturn = [];\n\n  const dedupedSeoInput =\n    seoInputs.reduce((acc, current) => {\n      if (!current) return acc as SeoConfig;\n\n      // remove seo properties with falsy values\n      Object.keys(current).forEach(\n        (key) => !current[key as SeoKey] && delete current[key as SeoKey],\n      );\n\n      const {jsonLd} = current;\n\n      if (!jsonLd) {\n        return {...acc, ...current} as SeoConfig;\n      }\n\n      // concatenate jsonLds if present\n      if (!acc?.jsonLd) {\n        return {...acc, ...current, jsonLd: [jsonLd]} as SeoConfig;\n      } else {\n        return {\n          ...acc,\n          ...current,\n          jsonLd: ensureArray(acc.jsonLd).concat(jsonLd),\n        };\n      }\n    }, {}) || ({} as SeoConfig);\n\n  for (const seoKey of Object.keys(dedupedSeoInput)) {\n    switch (seoKey) {\n      case 'title': {\n        const content = validate(schema.title, dedupedSeoInput.title);\n        const title = renderTitle(dedupedSeoInput?.titleTemplate, content);\n\n        if (!title) {\n          break;\n        }\n\n        tagResults.push(\n          {title},\n          {property: 'og:title', content: title},\n          {property: 'twitter:title', content: title},\n        );\n\n        break;\n      }\n\n      case 'description': {\n        const content = validate(\n          schema.description,\n          dedupedSeoInput.description,\n        );\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          {\n            name: 'description',\n            content,\n          },\n          {\n            property: 'og:description',\n            content,\n          },\n          {\n            property: 'twitter:description',\n            content,\n          },\n        );\n\n        break;\n      }\n\n      case 'url': {\n        const content = validate(schema.url, dedupedSeoInput.url);\n\n        if (!content) {\n          break;\n        }\n\n        const urlWithoutParams = content.split('?')[0];\n        const urlWithoutTrailingSlash = urlWithoutParams.replace(/\\/$/, '');\n\n        tagResults.push(\n          {\n            tagName: 'link',\n            rel: 'canonical',\n            href: urlWithoutTrailingSlash,\n          },\n          {\n            property: 'og:url',\n            content: urlWithoutTrailingSlash,\n          },\n        );\n\n        break;\n      }\n\n      case 'handle': {\n        const content = validate(schema.handle, dedupedSeoInput.handle);\n\n        if (!content) {\n          break;\n        }\n\n        tagResults.push(\n          {property: 'twitter:site', content},\n          {property: 'twitter:creator', content},\n        );\n\n        break;\n      }\n\n      case 'media': {\n        let content;\n        const values = ensureArray(dedupedSeoInput.media);\n\n        for (const media of values) {\n          if (typeof media === 'string') {\n            tagResults.push({property: 'og:image', content: media});\n          }\n\n          if (media && typeof media === 'object') {\n            const type = media.type || 'image';\n\n            // Order matters here when adding multiple media tags @see https://ogp.me/#array\n            const normalizedMedia = media\n              ? {\n                  url: media?.url,\n                  secure_url: media?.url,\n                  type: inferMimeType(media.url),\n                  width: media?.width,\n                  height: media?.height,\n                  alt: media?.altText,\n                }\n              : {};\n\n            for (const key of Object.keys(normalizedMedia)) {\n              if (normalizedMedia[key as keyof typeof normalizedMedia]) {\n                content = normalizedMedia[\n                  key as keyof typeof normalizedMedia\n                ] as string;\n\n                tagResults.push({\n                  property: `og:${type}:${key}`,\n                  content,\n                });\n              }\n            }\n          }\n        }\n        break;\n      }\n\n      case 'jsonLd': {\n        const jsonLdBlocks = ensureArray(dedupedSeoInput.jsonLd);\n        let index = 0;\n        for (const block of jsonLdBlocks) {\n          if (typeof block !== 'object' || Object.keys(block).length === 0) {\n            continue;\n          }\n\n          tagResults.push({\n            'script:ld+json': block,\n          });\n        }\n\n        break;\n      }\n\n      case 'alternates': {\n        const alternates = ensureArray(dedupedSeoInput.alternates);\n\n        for (const alternate of alternates) {\n          if (!alternate) {\n            continue;\n          }\n\n          const {language, url, default: defaultLang} = alternate;\n\n          const hrefLang = language\n            ? `${language}${defaultLang ? '-default' : ''}`\n            : undefined;\n\n          tagResults.push({\n            tagName: 'link',\n            rel: 'alternate',\n            hrefLang,\n            href: url,\n          });\n        }\n\n        break;\n      }\n\n      case 'robots': {\n        if (!dedupedSeoInput.robots) {\n          break;\n        }\n\n        const {\n          maxImagePreview,\n          maxSnippet,\n          maxVideoPreview,\n          noArchive,\n          noFollow,\n          noImageIndex,\n          noIndex,\n          noSnippet,\n          noTranslate,\n          unavailableAfter,\n        } = dedupedSeoInput.robots;\n\n        const robotsParams = [\n          noArchive && 'noarchive',\n          noImageIndex && 'noimageindex',\n          noSnippet && 'nosnippet',\n          noTranslate && `notranslate`,\n          maxImagePreview && `max-image-preview:${maxImagePreview}`,\n          maxSnippet && `max-snippet:${maxSnippet}`,\n          maxVideoPreview && `max-video-preview:${maxVideoPreview}`,\n          unavailableAfter && `unavailable_after:${unavailableAfter}`,\n        ];\n\n        let robotsParam =\n          (noIndex ? 'noindex' : 'index') +\n          ',' +\n          (noFollow ? 'nofollow' : 'follow');\n\n        for (let param of robotsParams) {\n          if (param) {\n            robotsParam += `,${param}`;\n          }\n        }\n\n        tagResults.push({name: 'robots', content: robotsParam});\n\n        break;\n      }\n\n      default: {\n        // TODO: We should be able to catch unaccounted for keys at compile time\n        // let exhaustiveCheck: never = seoKey;\n\n        break;\n      }\n    }\n  }\n\n  return tagResults;\n}\n", "import {\n  createElement,\n  useEffect,\n  useMemo,\n  useRef,\n  forwardRef,\n  useState,\n  type Ref,\n  type FC,\n} from 'react';\nimport type {\n  Maybe,\n  PageInfo,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {flattenConnection} from '@shopify/hydrogen-react';\nimport {\n  Link,\n  type LinkProps,\n  useNavigation,\n  useLocation,\n  useNavigate,\n} from '@remix-run/react';\n\ndeclare global {\n  interface Window {\n    // Use a global variable to keep track\n    // of when the page finishes hydrating\n    __hydrogenHydrated?: boolean;\n  }\n}\n\ntype Connection<NodesType> =\n  | {\n      nodes: Array<NodesType>;\n      pageInfo: PageInfo;\n    }\n  | {\n      edges: Array<{\n        node: NodesType;\n      }>;\n      pageInfo: PageInfo;\n    };\n\ntype PaginationState<NodesType> = {\n  pagination?: {\n    [key: string]: {\n      nodes: Array<NodesType>;\n      pageInfo?: PageInfo | null;\n    };\n  };\n};\n\ninterface PaginationInfo<NodesType> {\n  /** The paginated array of nodes. You should map over and render this array. */\n  nodes: Array<NodesType>;\n  /** The `<NextLink>` is a helper component that makes it easy to navigate to the next page of paginated data. Alternatively you can build your own `<Link>` component: `<Link to={nextPageUrl} state={state} preventScrollReset />` */\n  NextLink: FC<Omit<LinkProps, 'to'> & {ref?: Ref<HTMLAnchorElement>}>;\n  /** The `<PreviousLink>` is a helper component that makes it easy to navigate to the previous page of paginated data. Alternatively you can build your own `<Link>` component: `<Link to={previousPageUrl} state={state} preventScrollReset />` */\n  PreviousLink: FC<Omit<LinkProps, 'to'> & {ref?: Ref<HTMLAnchorElement>}>;\n  /** The URL to the previous page of paginated data. Use this prop to build your own `<Link>` component. */\n  previousPageUrl: string;\n  /** The URL to the next page of paginated data. Use this prop to build your own `<Link>` component. */\n  nextPageUrl: string;\n  /** True if the cursor has next paginated data */\n  hasNextPage: boolean;\n  /** True if the cursor has previous paginated data */\n  hasPreviousPage: boolean;\n  /** True if we are in the process of fetching another page of data */\n  isLoading: boolean;\n  /** The `state` property is important to use when building your own `<Link>` component if you want paginated data to continuously append to the page. This means that every time the user clicks \"Next page\", the next page of data will be apppended inline with the previous page. If you want the whole page to re-render with only the next page results, do not pass the `state` prop to the Remix `<Link>` component. */\n  state: {\n    nodes: Array<NodesType>;\n    pageInfo: {\n      endCursor: Maybe<string> | undefined;\n      startCursor: Maybe<string> | undefined;\n      hasPreviousPage: boolean;\n    };\n  };\n}\n\ntype PaginationProps<NodesType> = {\n  /** The response from `storefront.query` for a paginated request. Make sure the query is passed pagination variables and that the query has `pageInfo` with `hasPreviousPage`, `hasNextpage`, `startCursor`, and `endCursor` defined. */\n  connection: Connection<NodesType>;\n  /** A render prop that includes pagination data and helpers. */\n  children: PaginationRenderProp<NodesType>;\n  /** A namespace for the pagination component to avoid URL param conflicts when using multiple `Pagination` components on a single page. */\n  namespace?: string;\n};\n\ntype PaginationRenderProp<NodesType> = FC<PaginationInfo<NodesType>>;\n\n/**\n *\n * The [Storefront API uses cursors](https://shopify.dev/docs/api/usage/pagination-graphql) to paginate through lists of data\n * and the \\`<Pagination />\\` component makes it easy to paginate data from the Storefront API.\n *\n * @prop connection The response from `storefront.query` for a paginated request. Make sure the query is passed pagination variables and that the query has `pageInfo` with `hasPreviousPage`, `hasNextpage`, `startCursor`, and `endCursor` defined.\n * @prop children A render prop that includes pagination data and helpers.\n */\nexport function Pagination<NodesType>({\n  connection,\n  children = () => {\n    console.warn('<Pagination> requires children to work properly');\n    return null;\n  },\n  namespace = '',\n}: PaginationProps<NodesType>): ReturnType<FC> {\n  const [isLoading, setIsLoading] = useState(false);\n  const transition = useNavigation();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Reset loading state once the transition state is idle\n  useEffect(() => {\n    if (transition.state === 'idle') {\n      setIsLoading(false);\n    }\n  }, [transition.state]);\n\n  const {\n    endCursor,\n    hasNextPage,\n    hasPreviousPage,\n    nextPageUrl,\n    nodes,\n    previousPageUrl,\n    startCursor,\n  } = usePagination<NodesType>(connection, namespace);\n\n  const state = useMemo(\n    () => ({\n      ...location.state,\n      pagination: {\n        ...(location.state?.pagination || {}),\n        [namespace]: {\n          pageInfo: {\n            endCursor,\n            hasPreviousPage,\n            hasNextPage,\n            startCursor,\n          },\n          nodes,\n        },\n      },\n    }),\n    [\n      endCursor,\n      hasNextPage,\n      hasPreviousPage,\n      startCursor,\n      nodes,\n      namespace,\n      location.state,\n    ],\n  );\n\n  const NextLink = useMemo(\n    () =>\n      forwardRef<HTMLAnchorElement, Omit<LinkProps, 'to'>>(function NextLink(\n        props,\n        ref,\n      ) {\n        return hasNextPage\n          ? createElement(Link, {\n              preventScrollReset: true,\n              ...props,\n              to: nextPageUrl,\n              state,\n              replace: true,\n              ref,\n              onClick: () => setIsLoading(true),\n            })\n          : null;\n      }),\n    [hasNextPage, nextPageUrl, state],\n  );\n\n  const PreviousLink = useMemo(\n    () =>\n      forwardRef<HTMLAnchorElement, Omit<LinkProps, 'to'>>(function PrevLink(\n        props,\n        ref,\n      ) {\n        return hasPreviousPage\n          ? createElement(Link, {\n              preventScrollReset: true,\n              ...props,\n              to: previousPageUrl,\n              state,\n              replace: true,\n              ref,\n              onClick: () => setIsLoading(true),\n            })\n          : null;\n      }),\n    [hasPreviousPage, previousPageUrl, state],\n  );\n\n  return children({\n    state,\n    hasNextPage,\n    hasPreviousPage,\n    isLoading,\n    nextPageUrl,\n    nodes,\n    previousPageUrl,\n    NextLink,\n    PreviousLink,\n  });\n}\n\nfunction getParamsWithoutPagination(\n  paramsString?: string,\n  state?: PaginationState<any>,\n) {\n  const params = new URLSearchParams(paramsString);\n\n  // Get all namespaces from state\n  const activeNamespaces = Object.keys(state?.pagination || {});\n\n  activeNamespaces.forEach((namespace) => {\n    // Clean up cursor and direction params for both namespaced and non-namespaced pagination\n    const namespacePrefix = namespace === '' ? '' : `${namespace}_`;\n    const cursorParam = `${namespacePrefix}cursor`;\n    const directionParam = `${namespacePrefix}direction`;\n    params.delete(cursorParam);\n    params.delete(directionParam);\n  });\n\n  return params.toString();\n}\n\nfunction makeError(prop: string) {\n  throw new Error(\n    `The Pagination component requires ${\n      '`' + prop + '`'\n    } to be a part of your query. See the guide on how to setup your query to include ${\n      '`' + prop + '`'\n    }: https://shopify.dev/docs/custom-storefronts/hydrogen/data-fetching/pagination#setup-the-paginated-query`,\n  );\n}\n\n/**\n * Get cumulative pagination logic for a given connection\n */\nexport function usePagination<NodesType>(\n  connection: Connection<NodesType>,\n  namespace: string = '',\n): Omit<\n  PaginationInfo<NodesType>,\n  'isLoading' | 'state' | 'NextLink' | 'PreviousLink'\n> & {\n  startCursor: Maybe<string> | undefined;\n  endCursor: Maybe<string> | undefined;\n} {\n  if (!connection.pageInfo) {\n    makeError('pageInfo');\n  }\n\n  if (typeof connection.pageInfo.startCursor === 'undefined') {\n    makeError('pageInfo.startCursor');\n  }\n\n  if (typeof connection.pageInfo.endCursor === 'undefined') {\n    makeError('pageInfo.endCursor');\n  }\n\n  if (typeof connection.pageInfo.hasNextPage === 'undefined') {\n    makeError('pageInfo.hasNextPage');\n  }\n\n  if (typeof connection.pageInfo.hasPreviousPage === 'undefined') {\n    makeError('pageInfo.hasPreviousPage');\n  }\n\n  const transition = useNavigation();\n  const navigate = useNavigate();\n  const {state, search, pathname} = useLocation() as {\n    state?: PaginationState<NodesType>;\n    search?: string;\n    pathname?: string;\n  };\n\n  const cursorParam = namespace ? `${namespace}_cursor` : 'cursor';\n  const directionParam = namespace ? `${namespace}_direction` : 'direction';\n\n  const params = new URLSearchParams(search);\n  const direction = params.get(directionParam);\n  const isPrevious = direction === 'previous';\n\n  const nodes = useMemo(() => {\n    if (\n      !globalThis?.window?.__hydrogenHydrated ||\n      !state?.pagination?.[namespace]?.nodes\n    ) {\n      return flattenConnection(connection);\n    }\n\n    if (isPrevious) {\n      return [\n        ...flattenConnection(connection),\n        ...(state.pagination[namespace].nodes || []),\n      ];\n    } else {\n      return [\n        ...(state.pagination[namespace].nodes || []),\n        ...flattenConnection(connection),\n      ];\n    }\n  }, [state, connection, namespace]);\n\n  const currentPageInfo = useMemo(() => {\n    const hydrogenHydrated = globalThis?.window?.__hydrogenHydrated;\n    const stateInfo = state?.pagination?.[namespace]?.pageInfo;\n\n    let pageStartCursor =\n      !hydrogenHydrated || stateInfo?.startCursor === undefined\n        ? connection.pageInfo.startCursor\n        : stateInfo.startCursor;\n\n    let pageEndCursor =\n      !hydrogenHydrated || stateInfo?.endCursor === undefined\n        ? connection.pageInfo.endCursor\n        : stateInfo.endCursor;\n\n    let previousPageExists =\n      !hydrogenHydrated || stateInfo?.hasPreviousPage === undefined\n        ? connection.pageInfo.hasPreviousPage\n        : stateInfo.hasPreviousPage;\n\n    let nextPageExists =\n      !hydrogenHydrated || stateInfo?.hasNextPage === undefined\n        ? connection.pageInfo.hasNextPage\n        : stateInfo.hasNextPage;\n\n    // Update page info based on current connection\n    if (state?.pagination?.[namespace]?.nodes) {\n      if (isPrevious) {\n        pageStartCursor = connection.pageInfo.startCursor;\n        previousPageExists = connection.pageInfo.hasPreviousPage;\n      } else {\n        pageEndCursor = connection.pageInfo.endCursor;\n        nextPageExists = connection.pageInfo.hasNextPage;\n      }\n    }\n\n    return {\n      startCursor: pageStartCursor,\n      endCursor: pageEndCursor,\n      hasPreviousPage: previousPageExists,\n      hasNextPage: nextPageExists,\n    };\n  }, [\n    isPrevious,\n    state,\n    namespace,\n    connection.pageInfo.hasNextPage,\n    connection.pageInfo.hasPreviousPage,\n    connection.pageInfo.startCursor,\n    connection.pageInfo.endCursor,\n  ]);\n\n  // Keep track of the current URL state, to compare whenever the URL changes\n  const urlRef = useRef({\n    params: getParamsWithoutPagination(search, state),\n    pathname,\n  });\n\n  useEffect(() => {\n    // Set a global variable to keep track of when the page finishes hydrating.\n    // We can't use local state or a ref because it will be reset on soft navigations\n    // to the page. This variable allows us to use the SSR'd data on the first render,\n    // preventing hydration errors. On soft navigations, like browser back/forward\n    // navigation, instead of using the SSR'd data, we use the data from location state.\n    window.__hydrogenHydrated = true;\n  }, []);\n\n  useEffect(() => {\n    const currentParams = getParamsWithoutPagination(search, state);\n    const previousParams = urlRef.current.params;\n    const pathChanged = pathname !== urlRef.current.pathname;\n    const nonPaginationParamsChanged = currentParams !== previousParams;\n\n    if (\n      // Only clean up if the base URL or non-pagination params change\n      (pathChanged || nonPaginationParamsChanged) &&\n      // And we're not on the initial load\n      !(transition.state === 'idle' && !transition.location)\n    ) {\n      urlRef.current = {\n        pathname,\n        params: getParamsWithoutPagination(search, state),\n      };\n      navigate(`${pathname}?${getParamsWithoutPagination(search, state)}`, {\n        replace: true,\n        preventScrollReset: true,\n        state: {nodes: undefined, pageInfo: undefined},\n      });\n    }\n  }, [pathname, search, state]);\n\n  const previousPageUrl = useMemo(() => {\n    const params = new URLSearchParams(search);\n    params.set(directionParam, 'previous');\n    currentPageInfo.startCursor &&\n      params.set(cursorParam, currentPageInfo.startCursor);\n    return `?${params.toString()}`;\n  }, [search, currentPageInfo.startCursor]);\n\n  const nextPageUrl = useMemo(() => {\n    const params = new URLSearchParams(search);\n    params.set(directionParam, 'next');\n    currentPageInfo.endCursor &&\n      params.set(cursorParam, currentPageInfo.endCursor);\n    return `?${params.toString()}`;\n  }, [search, currentPageInfo.endCursor]);\n\n  return {...currentPageInfo, previousPageUrl, nextPageUrl, nodes};\n}\n\n/**\n * @param request The request object passed to your Remix loader function.\n * @param options Options for how to configure the pagination variables. Includes the ability to change how many nodes are within each page as well as a namespace to avoid URL param conflicts when using multiple `Pagination` components on a single page.\n *\n * @returns Variables to be used with the `storefront.query` function\n */\nexport function getPaginationVariables(\n  request: Request,\n  options: {pageBy: number; namespace?: string} = {pageBy: 20},\n) {\n  if (typeof request?.url === 'undefined') {\n    throw new Error(\n      'getPaginationVariables must be called with the Request object passed to your loader function',\n    );\n  }\n\n  const {pageBy, namespace = ''} = options;\n  const searchParams = new URLSearchParams(new URL(request.url).search);\n\n  const cursorParam = namespace ? `${namespace}_cursor` : 'cursor';\n  const directionParam = namespace ? `${namespace}_direction` : 'direction';\n\n  const cursor = searchParams.get(cursorParam) ?? undefined;\n  const direction =\n    searchParams.get(directionParam) === 'previous' ? 'previous' : 'next';\n  const isPrevious = direction === 'previous';\n\n  const prevPage = {\n    last: pageBy,\n    startCursor: cursor ?? null,\n  };\n\n  const nextPage = {\n    first: pageBy,\n    endCursor: cursor ?? null,\n  };\n\n  const variables = isPrevious ? prevPage : nextPage;\n\n  return variables;\n}\n", "import {LIB_VERSION} from '../version';\n\nexport const DEFAULT_CUSTOMER_API_VERSION = '2024-10';\nexport const USER_AGENT = `Shopify Hydrogen ${LIB_VERSION}`;\n// This is a static api client id: https://shopify.dev/docs/api/customer#useaccesstoken-propertydetail-audience\nexport const CUSTOMER_API_CLIENT_ID = '30243aa5-17c1-465a-8493-944bcc4e88aa';\nexport const CUSTOMER_ACCOUNT_SESSION_KEY = 'customerAccount';\nexport const BUYER_SESSION_KEY = 'buyer';\n", "export class BadRequest extends Response {\n  constructor(message?: string, helpMessage?: string, headers?: HeadersInit) {\n    // A lot of things can go wrong when configuring the customer account api\n    // oauth flow. In dev mode, log a helper message.\n    if (helpMessage && process.env.NODE_ENV === 'development') {\n      console.error('Customer Account API Error: ' + helpMessage);\n    }\n\n    super(`Bad request: ${message}`, {status: 400, headers});\n  }\n}\n", "import type {HydrogenSession} from '../types';\nimport {BadRequest} from './BadRequest';\nimport {\n  USER_AGENT,\n  CUSTOMER_API_CLIENT_ID,\n  CUSTOMER_ACCOUNT_SESSION_KEY,\n  BUYER_SESSION_KEY,\n} from './constants';\n\ntype H2OEvent = Parameters<NonNullable<typeof __H2O_LOG_EVENT>>[0];\n\nexport interface Locks {\n  refresh?: Promise<any>;\n}\n\nexport const logSubRequestEvent =\n  process.env.NODE_ENV === 'development'\n    ? ({\n        url,\n        response,\n        startTime,\n        query,\n        variables,\n        ...debugInfo\n      }: {\n        url: H2OEvent['url'];\n        response: Response;\n        startTime: H2OEvent['startTime'];\n        query?: string;\n        variables?: Record<string, any> | null;\n      } & Partial<H2OEvent>) => {\n        globalThis.__H2O_LOG_EVENT?.({\n          ...debugInfo,\n          eventType: 'subrequest',\n          url,\n          startTime,\n          graphql: query\n            ? JSON.stringify({query, variables, schema: 'customer-account'})\n            : undefined,\n          responseInit: {\n            status: response.status || 0,\n            statusText: response.statusText || '',\n            headers: Array.from(response.headers.entries() || []),\n          },\n        });\n      }\n    : undefined;\n\nexport function redirect(\n  path: string,\n  options: {status?: number; headers?: {}} = {},\n) {\n  const headers = options.headers\n    ? new Headers(options.headers)\n    : new Headers({});\n  headers.set('location', path);\n\n  return new Response(null, {status: options.status || 302, headers});\n}\n\nexport interface AccessTokenResponse {\n  access_token: string;\n  expires_in: number;\n  id_token: string;\n  refresh_token: string;\n  error?: string;\n  error_description?: string;\n}\n\nexport async function refreshToken({\n  session,\n  customerAccountId,\n  customerAccountTokenExchangeUrl,\n  httpsOrigin,\n  debugInfo,\n  exchangeForStorefrontCustomerAccessToken,\n}: {\n  session: HydrogenSession;\n  customerAccountId: string;\n  customerAccountTokenExchangeUrl: string;\n  httpsOrigin: string;\n  debugInfo?: Partial<H2OEvent>;\n  exchangeForStorefrontCustomerAccessToken: () => Promise<void>;\n}) {\n  const newBody = new URLSearchParams();\n\n  const customerAccount = session.get(CUSTOMER_ACCOUNT_SESSION_KEY);\n  const refreshToken = customerAccount?.refreshToken;\n  const idToken = customerAccount?.idToken;\n\n  if (!refreshToken)\n    throw new BadRequest(\n      'Unauthorized',\n      'No refreshToken found in the session. Make sure your session is configured correctly and passed to `createCustomerAccountClient`.',\n    );\n\n  newBody.append('grant_type', 'refresh_token');\n  newBody.append('refresh_token', refreshToken);\n  newBody.append('client_id', customerAccountId);\n\n  const headers = {\n    'content-type': 'application/x-www-form-urlencoded',\n    'User-Agent': USER_AGENT,\n    Origin: httpsOrigin,\n  };\n\n  const startTime = new Date().getTime();\n  const url = customerAccountTokenExchangeUrl;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers,\n    body: newBody,\n  });\n\n  logSubRequestEvent?.({\n    displayName: 'Customer Account API: access token refresh',\n    url,\n    startTime,\n    response,\n    ...debugInfo,\n  });\n\n  if (!response.ok) {\n    const text = await response.text();\n    throw new Response(text, {\n      status: response.status,\n      headers: {\n        'Content-Type': 'text/html; charset=utf-8',\n      },\n    });\n  }\n\n  const {\n    access_token,\n    expires_in,\n    refresh_token,\n  }: Omit<AccessTokenResponse, 'id_token'> = await response.json();\n\n  const accessToken = await exchangeAccessToken(\n    access_token,\n    customerAccountId,\n    customerAccountTokenExchangeUrl,\n    httpsOrigin,\n    debugInfo,\n  );\n\n  session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n    accessToken,\n    // Store the date in future the token expires, separated by two minutes\n    expiresAt:\n      new Date(new Date().getTime() + (expires_in - 120) * 1000).getTime() + '',\n    refreshToken: refresh_token,\n    idToken,\n  });\n\n  await exchangeForStorefrontCustomerAccessToken();\n}\n\nexport function clearSession(session: HydrogenSession): void {\n  session.unset(CUSTOMER_ACCOUNT_SESSION_KEY);\n  session.unset(BUYER_SESSION_KEY);\n}\n\nexport async function checkExpires({\n  locks,\n  expiresAt,\n  session,\n  customerAccountId,\n  customerAccountTokenExchangeUrl,\n  httpsOrigin,\n  debugInfo,\n  exchangeForStorefrontCustomerAccessToken,\n}: {\n  locks: Locks;\n  expiresAt: string;\n  session: HydrogenSession;\n  customerAccountId: string;\n  customerAccountTokenExchangeUrl: string;\n  httpsOrigin: string;\n  debugInfo?: Partial<H2OEvent>;\n  exchangeForStorefrontCustomerAccessToken: () => Promise<void>;\n}) {\n  if (parseInt(expiresAt, 10) - 1000 < new Date().getTime()) {\n    try {\n      // Makes sure that only one refresh request is sent at a time\n      if (!locks.refresh)\n        locks.refresh = refreshToken({\n          session,\n          customerAccountId,\n          customerAccountTokenExchangeUrl,\n          httpsOrigin,\n          debugInfo,\n          exchangeForStorefrontCustomerAccessToken,\n        });\n\n      await locks.refresh;\n      delete locks.refresh;\n    } catch (error) {\n      clearSession(session);\n\n      if (error && (error as Response).status !== 401) {\n        throw error;\n      } else {\n        throw new BadRequest(\n          'Unauthorized',\n          'Login before querying the Customer Account API.',\n        );\n      }\n    }\n  }\n}\n\nexport function generateCodeVerifier() {\n  const rando = generateRandomCode();\n  return base64UrlEncode(rando);\n}\n\nexport async function generateCodeChallenge(codeVerifier: string) {\n  const digestOp = await crypto.subtle.digest(\n    {name: 'SHA-256'},\n    new TextEncoder().encode(codeVerifier),\n  );\n  const hash = convertBufferToString(digestOp);\n  return base64UrlEncode(hash);\n}\n\nexport function generateRandomCode() {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return String.fromCharCode.apply(null, Array.from(array));\n}\n\nfunction base64UrlEncode(str: string) {\n  const base64 = btoa(str);\n  // This is to ensure that the encoding does not have +, /, or = characters in it.\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction convertBufferToString(hash: ArrayBuffer) {\n  const uintArray = new Uint8Array(hash);\n  const numberArray = Array.from(uintArray);\n  return String.fromCharCode(...numberArray);\n}\n\nexport function generateState() {\n  const timestamp = Date.now().toString();\n  const randomString = Math.random().toString(36).substring(2);\n  return timestamp + randomString;\n}\n\nexport async function exchangeAccessToken(\n  authAccessToken: string | undefined,\n  customerAccountId: string,\n  customerAccountTokenExchangeUrl: string,\n  httpsOrigin: string,\n  debugInfo?: Partial<H2OEvent>,\n) {\n  const clientId = customerAccountId;\n\n  if (!authAccessToken)\n    throw new BadRequest(\n      'Unauthorized',\n      'oAuth access token was not provided during token exchange.',\n    );\n\n  const body = new URLSearchParams();\n\n  body.append('grant_type', 'urn:ietf:params:oauth:grant-type:token-exchange');\n  body.append('client_id', clientId);\n  body.append('audience', CUSTOMER_API_CLIENT_ID);\n  body.append('subject_token', authAccessToken);\n  body.append(\n    'subject_token_type',\n    'urn:ietf:params:oauth:token-type:access_token',\n  );\n  body.append('scopes', 'https://api.customers.com/auth/customer.graphql');\n\n  const headers = {\n    'content-type': 'application/x-www-form-urlencoded',\n    'User-Agent': USER_AGENT,\n    Origin: httpsOrigin,\n  };\n\n  const startTime = new Date().getTime();\n  const url = customerAccountTokenExchangeUrl;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers,\n    body,\n  });\n\n  logSubRequestEvent?.({\n    displayName: 'Customer Account API: access token exchange',\n    url,\n    startTime,\n    response,\n    ...debugInfo,\n  });\n\n  const data: AccessTokenResponse = await response.json();\n\n  if (data.error) {\n    throw new BadRequest(data.error_description);\n  }\n\n  return data.access_token;\n}\n\nexport function getNonce(token: string) {\n  return decodeJwt(token).payload.nonce;\n}\n\nfunction decodeJwt(token: string) {\n  const [header, payload, signature] = token.split('.');\n\n  const decodedHeader = JSON.parse(atob(header));\n  const decodedPayload = JSON.parse(atob(payload));\n\n  return {\n    header: decodedHeader,\n    payload: decodedPayload,\n    signature,\n  };\n}\n", "export function generateNonce(): string {\n  return toHexString(randomUint8Array());\n}\n\nfunction randomUint8Array() {\n  try {\n    return crypto.getRandomValues(new Uint8Array(16));\n  } catch (e) {\n    return new Uint8Array(16).map(() => (Math.random() * 255) | 0);\n  }\n}\n\nfunction toHexString(byteArray: Uint8Array) {\n  return Array.from(byteArray, function (byte) {\n    return ('0' + (byte & 0xff).toString(16)).slice(-2);\n  }).join('');\n}\n", "export enum URL_TYPE {\n  CA_BASE_URL = 'CA_BASE_URL',\n  CA_BASE_AUTH_URL = 'CA_BASE_AUTH_URL',\n  GRAPHQL = 'GRAPHQL',\n  AUTH = 'AUTH',\n  LOGIN_SCOPE = 'LOGIN_SCOPE',\n  TOKEN_EXCHANGE = 'TOKEN_EXCHANGE',\n  LOGOUT = 'LOGOUT',\n}\n\nexport function createCustomerAccountHelper(\n  customerApiVersion: string,\n  deprecatedCustomerAccountUrl?: string,\n  shopId?: string,\n) {\n  const customerAccountUrl = shopId\n    ? `https://shopify.com/${shopId}`\n    : deprecatedCustomerAccountUrl;\n\n  const customerAccountAuthUrl = shopId\n    ? `https://shopify.com/authentication/${shopId}`\n    : `${deprecatedCustomerAccountUrl}/auth`;\n\n  return function getCustomerAccountUrl(urlType: URL_TYPE): string {\n    switch (urlType) {\n      case URL_TYPE.CA_BASE_URL:\n        // @ts-expect-error\n        return customerAccountUrl;\n      case URL_TYPE.CA_BASE_AUTH_URL:\n        return customerAccountAuthUrl;\n      case URL_TYPE.GRAPHQL:\n        return `${customerAccountUrl}/account/customer/api/${customerApiVersion}/graphql`;\n      case URL_TYPE.AUTH:\n        return `${customerAccountAuthUrl}/oauth/authorize`;\n      case URL_TYPE.LOGIN_SCOPE:\n        return shopId\n          ? 'openid email customer-account-api:full'\n          : 'openid email https://api.customers.com/auth/customer.graphql';\n      case URL_TYPE.TOKEN_EXCHANGE:\n        return `${customerAccountAuthUrl}/oauth/token`;\n      case URL_TYPE.LOGOUT:\n        return `${customerAccountAuthUrl}/logout`;\n    }\n  };\n}\n", "import type {GenericVariables} from '@shopify/hydrogen-codegen';\nimport type {WritableDeep} from 'type-fest';\nimport {\n  DEFAULT_CUSTOMER_API_VERSION,\n  CUSTOMER_ACCOUNT_SESSION_KEY,\n  BUYER_SESSION_KEY,\n  USER_AGENT,\n} from './constants';\nimport {\n  clearSession,\n  generateCodeChallenge,\n  generateCodeVerifier,\n  generateState,\n  checkExpires,\n  exchangeAccessToken,\n  AccessTokenResponse,\n  getNonce,\n  redirect,\n  Locks,\n  logSubRequestEvent,\n} from './auth.helpers';\nimport {BadRequest} from './BadRequest';\nimport {generateNonce} from '../csp/nonce';\nimport {\n  minifyQuery,\n  assertQuery,\n  assertMutation,\n  throwErrorWithGqlLink,\n  type GraphQLErrorOptions,\n  GraphQLError,\n} from '../utils/graphql';\nimport {parseJSON} from '../utils/parse-json';\nimport {\n  CrossRuntimeRequest,\n  getHeader,\n  getDebugHeaders,\n} from '../utils/request';\nimport {getCallerStackLine, withSyncStack} from '../utils/callsites';\nimport {\n  getRedirectUrl,\n  ensureLocalRedirectUrl,\n} from '../utils/get-redirect-url';\nimport type {\n  CustomerAccountOptions,\n  CustomerAccount,\n  CustomerAPIResponse,\n  LoginOptions,\n  LogoutOptions,\n  Buyer,\n} from './types';\nimport {createCustomerAccountHelper, URL_TYPE} from './customer-account-helper';\nimport {warnOnce} from '../utils/warning';\n\nfunction defaultAuthStatusHandler(\n  request: CrossRuntimeRequest,\n  defaultLoginUrl: string,\n) {\n  if (!request.url) return defaultLoginUrl;\n\n  const {pathname} = new URL(request.url);\n\n  const redirectTo =\n    defaultLoginUrl +\n    `?${new URLSearchParams({return_to: pathname}).toString()}`;\n\n  return redirect(redirectTo);\n}\n\nexport function createCustomerAccountClient({\n  session,\n  customerAccountId,\n  customerAccountUrl: deprecatedCustomerAccountUrl,\n  shopId,\n  customerApiVersion = DEFAULT_CUSTOMER_API_VERSION,\n  request,\n  waitUntil,\n  authUrl,\n  customAuthStatusHandler,\n  logErrors = true,\n  unstableB2b = false,\n  loginPath = '/account/login',\n  authorizePath = '/account/authorize',\n  defaultRedirectPath = '/account',\n}: CustomerAccountOptions): CustomerAccount {\n  if (customerApiVersion !== DEFAULT_CUSTOMER_API_VERSION) {\n    console.warn(\n      `[h2:warn:createCustomerAccountClient] You are using Customer Account API version ${customerApiVersion} when this version of Hydrogen was built for ${DEFAULT_CUSTOMER_API_VERSION}.`,\n    );\n  }\n\n  if (!session) {\n    console.warn(\n      `[h2:warn:createCustomerAccountClient] session is required to use Customer Account API. Ensure the session object passed in exist.`,\n    );\n  }\n\n  if (!request?.url) {\n    throw new Error(\n      '[h2:error:createCustomerAccountClient] The request object does not contain a URL.',\n    );\n  }\n\n  if (!!deprecatedCustomerAccountUrl && !shopId) {\n    warnOnce(\n      '[h2:warn:createCustomerAccountClient] The `customerAccountUrl` option is deprecated and will be removed in a future version. Please remove `customerAccountUrl` and supply a `shopId: env.SHOP_ID` option instead.\\n\\nIf using `createHydrogenContext`, ensure there is a SHOP_ID defined in your local .env file.',\n    );\n  }\n\n  const authStatusHandler = customAuthStatusHandler\n    ? customAuthStatusHandler\n    : () => defaultAuthStatusHandler(request, loginPath);\n\n  const requestUrl = new URL(request.url);\n  const httpsOrigin =\n    requestUrl.protocol === 'http:'\n      ? requestUrl.origin.replace('http', 'https')\n      : requestUrl.origin;\n  const redirectUri = ensureLocalRedirectUrl({\n    requestUrl: httpsOrigin,\n    defaultUrl: authorizePath,\n    redirectUrl: authUrl,\n  });\n\n  const getCustomerAccountUrl = createCustomerAccountHelper(\n    customerApiVersion,\n    deprecatedCustomerAccountUrl,\n    shopId,\n  );\n\n  const ifInvalidCredentialThrowError = createIfInvalidCredentialThrowError(\n    getCustomerAccountUrl,\n    customerAccountId,\n  );\n\n  const customerAccountApiUrl = getCustomerAccountUrl(URL_TYPE.GRAPHQL);\n  const locks: Locks = {};\n\n  async function fetchCustomerAPI<T>({\n    query,\n    type,\n    variables = {},\n  }: {\n    query: string;\n    type: 'query' | 'mutation';\n    variables?: GenericVariables;\n  }) {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n      throw authStatusHandler();\n    }\n\n    // Get stack trace before losing it with any async operation.\n    // Since this is an internal function that is always called from\n    // the public query/mutate wrappers, add 1 to the stack offset.\n    const stackInfo = getCallerStackLine?.();\n\n    const startTime = new Date().getTime();\n\n    const response = await fetch(customerAccountApiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'User-Agent': USER_AGENT,\n        Origin: httpsOrigin,\n        Authorization: accessToken,\n      },\n      body: JSON.stringify({query, variables}),\n    });\n\n    logSubRequestEvent?.({\n      url: customerAccountApiUrl,\n      startTime,\n      response,\n      waitUntil,\n      stackInfo,\n      query,\n      variables,\n      ...getDebugHeaders(request),\n    });\n\n    const body = await response.text();\n\n    const errorOptions: GraphQLErrorOptions<T> = {\n      url: customerAccountApiUrl,\n      response,\n      type,\n      query,\n      queryVariables: variables,\n      errors: undefined,\n      client: 'customer',\n    };\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // clear session because current access token is invalid\n        clearSession(session);\n\n        const authFailResponse = authStatusHandler();\n        throw authFailResponse;\n      }\n\n      /**\n       * The Customer API might return a string error, or a JSON-formatted {error: string}.\n       * We try both and conform them to a single {errors} format.\n       */\n      let errors;\n      try {\n        errors = parseJSON(body);\n      } catch (_e) {\n        errors = [{message: body}];\n      }\n\n      throwErrorWithGqlLink({...errorOptions, errors});\n    }\n\n    try {\n      const APIresponse = parseJSON(body) as CustomerAPIResponse<T>;\n      const {errors} = APIresponse;\n\n      const gqlErrors = errors?.map(\n        ({message, ...rest}) =>\n          new GraphQLError(message, {\n            ...(rest as WritableDeep<typeof rest>),\n            clientOperation: `customerAccount.${errorOptions.type}`,\n            requestId: response.headers.get('x-request-id'),\n            queryVariables: variables,\n            query,\n          }),\n      );\n\n      return {...APIresponse, ...(errors && {errors: gqlErrors})};\n    } catch (e) {\n      throwErrorWithGqlLink({...errorOptions, errors: [{message: body}]});\n    }\n  }\n\n  async function isLoggedIn() {\n    if (!shopId && (!deprecatedCustomerAccountUrl || !customerAccountId))\n      return false;\n\n    const customerAccount = session.get(CUSTOMER_ACCOUNT_SESSION_KEY);\n    const accessToken = customerAccount?.accessToken;\n    const expiresAt = customerAccount?.expiresAt;\n\n    if (!accessToken || !expiresAt) return false;\n\n    // Get stack trace before losing it with any async operation.\n    const stackInfo = getCallerStackLine?.();\n\n    try {\n      await checkExpires({\n        locks,\n        expiresAt,\n        session,\n        customerAccountId,\n        customerAccountTokenExchangeUrl: getCustomerAccountUrl(\n          URL_TYPE.TOKEN_EXCHANGE,\n        ),\n        httpsOrigin,\n        debugInfo: {\n          waitUntil,\n          stackInfo,\n          ...getDebugHeaders(request),\n        },\n        exchangeForStorefrontCustomerAccessToken,\n      });\n    } catch {\n      return false;\n    }\n\n    return true;\n  }\n\n  async function handleAuthStatus() {\n    if (!(await isLoggedIn())) {\n      throw authStatusHandler();\n    }\n  }\n\n  async function getAccessToken() {\n    const hasAccessToken = await isLoggedIn();\n\n    if (hasAccessToken)\n      return session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.accessToken;\n  }\n\n  async function mutate(\n    mutation: Parameters<CustomerAccount['mutate']>[0],\n    options?: Parameters<CustomerAccount['mutate']>[1],\n  ) {\n    ifInvalidCredentialThrowError();\n\n    mutation = minifyQuery(mutation);\n    assertMutation(mutation, 'customer.mutate');\n\n    return withSyncStack(\n      fetchCustomerAPI({query: mutation, type: 'mutation', ...options}),\n      {logErrors},\n    );\n  }\n\n  async function query(\n    query: Parameters<CustomerAccount['query']>[0],\n    options?: Parameters<CustomerAccount['query']>[1],\n  ) {\n    ifInvalidCredentialThrowError();\n\n    query = minifyQuery(query);\n    assertQuery(query, 'customer.query');\n\n    return withSyncStack(fetchCustomerAPI({query, type: 'query', ...options}), {\n      logErrors,\n    });\n  }\n\n  function setBuyer(buyer: Buyer) {\n    session.set(BUYER_SESSION_KEY, {\n      ...session.get(BUYER_SESSION_KEY),\n      ...buyer,\n    });\n  }\n\n  async function getBuyer() {\n    // check loggedIn and trigger refresh if expire\n    const hasAccessToken = await isLoggedIn();\n\n    if (!hasAccessToken) {\n      return;\n    }\n\n    return session.get(BUYER_SESSION_KEY);\n  }\n\n  async function exchangeForStorefrontCustomerAccessToken() {\n    if (!unstableB2b) {\n      return;\n    }\n\n    const STOREFRONT_CUSTOMER_ACCOUNT_TOKEN_CREATE = `#graphql\n      mutation storefrontCustomerAccessTokenCreate {\n        storefrontCustomerAccessTokenCreate {\n          customerAccessToken\n        }\n      }\n    `;\n\n    // Remove hard coded type later\n    const {data} = (await mutate(STOREFRONT_CUSTOMER_ACCOUNT_TOKEN_CREATE)) as {\n      data: {\n        storefrontCustomerAccessTokenCreate?: {\n          customerAccessToken?: string;\n        };\n      };\n    };\n\n    const customerAccessToken =\n      data?.storefrontCustomerAccessTokenCreate?.customerAccessToken;\n\n    if (customerAccessToken) {\n      setBuyer({\n        customerAccessToken,\n      });\n    }\n  }\n\n  return {\n    login: async (options?: LoginOptions) => {\n      ifInvalidCredentialThrowError();\n      const loginUrl = new URL(getCustomerAccountUrl(URL_TYPE.AUTH));\n\n      const state = generateState();\n      const nonce = generateNonce();\n\n      loginUrl.searchParams.set('client_id', customerAccountId);\n      loginUrl.searchParams.set('scope', 'openid email');\n      loginUrl.searchParams.append('response_type', 'code');\n      loginUrl.searchParams.append('redirect_uri', redirectUri);\n      loginUrl.searchParams.set(\n        'scope',\n        getCustomerAccountUrl(URL_TYPE.LOGIN_SCOPE),\n      );\n      loginUrl.searchParams.append('state', state);\n      loginUrl.searchParams.append('nonce', nonce);\n\n      if (options?.uiLocales) {\n        const [language, region] = options.uiLocales.split('-');\n        let locale = language.toLowerCase();\n        if (region) {\n          locale += `-${region.toUpperCase()}`;\n        }\n        loginUrl.searchParams.append('ui_locales', locale);\n      }\n\n      const verifier = generateCodeVerifier();\n      const challenge = await generateCodeChallenge(verifier);\n\n      session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n        ...session.get(CUSTOMER_ACCOUNT_SESSION_KEY),\n        codeVerifier: verifier,\n        state,\n        nonce,\n        redirectPath:\n          getRedirectUrl(request.url) ||\n          getHeader(request, 'Referer') ||\n          defaultRedirectPath,\n      });\n\n      loginUrl.searchParams.append('code_challenge', challenge);\n      loginUrl.searchParams.append('code_challenge_method', 'S256');\n\n      return redirect(loginUrl.toString());\n    },\n\n    logout: async (options?: LogoutOptions) => {\n      ifInvalidCredentialThrowError();\n\n      const idToken = session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.idToken;\n      const postLogoutRedirectUri = ensureLocalRedirectUrl({\n        requestUrl: httpsOrigin,\n        defaultUrl: httpsOrigin,\n        redirectUrl: options?.postLogoutRedirectUri,\n      });\n\n      const logoutUrl = idToken\n        ? new URL(\n            `${getCustomerAccountUrl(URL_TYPE.LOGOUT)}?${new URLSearchParams([\n              ['id_token_hint', idToken],\n              ['post_logout_redirect_uri', postLogoutRedirectUri],\n            ]).toString()}`,\n          ).toString()\n        : postLogoutRedirectUri;\n\n      clearSession(session);\n\n      return redirect(logoutUrl, {headers: options?.headers || {}});\n    },\n    isLoggedIn,\n    handleAuthStatus,\n    getAccessToken,\n    getApiUrl: () => customerAccountApiUrl,\n    mutate: mutate as CustomerAccount['mutate'],\n    query: query as CustomerAccount['query'],\n    authorize: async () => {\n      ifInvalidCredentialThrowError();\n\n      const code = requestUrl.searchParams.get('code');\n      const state = requestUrl.searchParams.get('state');\n\n      if (!code || !state) {\n        clearSession(session);\n\n        throw new BadRequest(\n          'Unauthorized',\n          'No code or state parameter found in the redirect URL.',\n        );\n      }\n\n      if (session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.state !== state) {\n        clearSession(session);\n\n        throw new BadRequest(\n          'Unauthorized',\n          'The session state does not match the state parameter. Make sure that the session is configured correctly and passed to `createCustomerAccountClient`.',\n        );\n      }\n\n      const clientId = customerAccountId;\n      const body = new URLSearchParams();\n\n      body.append('grant_type', 'authorization_code');\n      body.append('client_id', clientId);\n      body.append('redirect_uri', redirectUri);\n      body.append('code', code);\n\n      // Public Client\n      const codeVerifier = session.get(\n        CUSTOMER_ACCOUNT_SESSION_KEY,\n      )?.codeVerifier;\n\n      if (!codeVerifier)\n        throw new BadRequest(\n          'Unauthorized',\n          'No code verifier found in the session. Make sure that the session is configured correctly and passed to `createCustomerAccountClient`.',\n        );\n\n      body.append('code_verifier', codeVerifier);\n\n      const headers = {\n        'content-type': 'application/x-www-form-urlencoded',\n        'User-Agent': USER_AGENT,\n        Origin: httpsOrigin,\n      };\n\n      const stackInfo = getCallerStackLine?.();\n      const startTime = new Date().getTime();\n      const url = getCustomerAccountUrl(URL_TYPE.TOKEN_EXCHANGE);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n      });\n\n      logSubRequestEvent?.({\n        url,\n        displayName: 'Customer Account API: authorize',\n        startTime,\n        response,\n        waitUntil,\n        stackInfo,\n        ...getDebugHeaders(request),\n      });\n\n      if (!response.ok) {\n        throw new Response(await response.text(), {\n          status: response.status,\n          headers: {\n            'Content-Type': 'text/html; charset=utf-8',\n          },\n        });\n      }\n\n      const {\n        access_token,\n        expires_in,\n        id_token,\n        refresh_token,\n      }: AccessTokenResponse = await response.json();\n\n      const sessionNonce = session.get(CUSTOMER_ACCOUNT_SESSION_KEY)?.nonce;\n      const responseNonce = await getNonce(id_token);\n\n      if (sessionNonce !== responseNonce) {\n        throw new BadRequest(\n          'Unauthorized',\n          `Returned nonce does not match: ${sessionNonce} !== ${responseNonce}`,\n        );\n      }\n\n      let customerAccessToken = access_token;\n\n      if (!shopId) {\n        customerAccessToken = await exchangeAccessToken(\n          access_token,\n          customerAccountId,\n          getCustomerAccountUrl(URL_TYPE.TOKEN_EXCHANGE),\n          httpsOrigin,\n          {\n            waitUntil,\n            stackInfo,\n            ...getDebugHeaders(request),\n          },\n        );\n      }\n\n      const redirectPath = session.get(\n        CUSTOMER_ACCOUNT_SESSION_KEY,\n      )?.redirectPath;\n\n      session.set(CUSTOMER_ACCOUNT_SESSION_KEY, {\n        accessToken: customerAccessToken,\n        expiresAt:\n          new Date(new Date().getTime() + (expires_in - 120) * 1000).getTime() +\n          '',\n        refreshToken: refresh_token,\n        idToken: id_token,\n      });\n\n      await exchangeForStorefrontCustomerAccessToken();\n\n      return redirect(redirectPath || defaultRedirectPath);\n    },\n    UNSTABLE_setBuyer: setBuyer,\n    UNSTABLE_getBuyer: getBuyer,\n  };\n}\n\nfunction createIfInvalidCredentialThrowError(\n  getCustomerAccountUrl: (urlType: URL_TYPE) => string,\n  customerAccountId?: string,\n) {\n  return function ifInvalidCredentialThrowError() {\n    try {\n      if (!customerAccountId) throw Error();\n\n      new URL(getCustomerAccountUrl(URL_TYPE.CA_BASE_URL));\n      new URL(getCustomerAccountUrl(URL_TYPE.CA_BASE_AUTH_URL));\n    } catch {\n      console.error(\n        new Error(\n          '[h2:error:customerAccount] You do not have the valid credential to use Customer Account API.\\nRun `h2 env pull` to link your store credentials.',\n        ),\n      );\n\n      const publicMessage =\n        process.env.NODE_ENV === 'production'\n          ? 'Internal Server Error'\n          : 'You do not have the valid credential to use Customer Account API (/account).';\n\n      throw new Response(publicMessage, {status: 500});\n    }\n  };\n}\n", "const DEFAULT_GITHUB_CHANGELOG_URL =\n  'https://raw.githubusercontent.com/Shopify/hydrogen/main/docs/changelog.json';\n\n/**\n * A custom Remix loader handler that fetches the changelog.json from GitHub.\n * It is used by the `upgrade` command inside the route `https://hydrogen.shopify.dev/changelog.json`\n */\nexport async function changelogHandler({\n  request,\n  changelogUrl,\n}: {\n  request: Request;\n  changelogUrl?: string;\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const GITHUB_CHANGELOG_URL = changelogUrl || DEFAULT_GITHUB_CHANGELOG_URL;\n  return fetch(GITHUB_CHANGELOG_URL);\n}\n", "import {type FetcherWithComponents, useFetcher} from '@remix-run/react';\nimport {type MetafieldWithoutOwnerId} from './queries/cart-types';\nimport type {ReactNode} from 'react';\nimport type {\n  AttributeInput,\n  CartBuyerIdentityInput,\n  CartInput,\n  CartLineInput,\n  CartLineUpdateInput,\n  CartSelectedDeliveryOptionInput,\n  Scalars,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\ntype OtherFormData = {\n  [key: string]: unknown;\n};\n\ntype CartAttributesUpdateProps = {\n  action: 'AttributesUpdateInput';\n  inputs?: {\n    attributes: AttributeInput[];\n  } & OtherFormData;\n};\ntype CartAttributesUpdateRequire = {\n  action: 'AttributesUpdateInput';\n  inputs: {\n    attributes: AttributeInput[];\n  } & OtherFormData;\n};\n\ntype CartBuyerIdentityUpdateProps = {\n  action: 'BuyerIdentityUpdate';\n  inputs?: {\n    buyerIdentity: CartBuyerIdentityInput;\n  } & OtherFormData;\n};\ntype CartBuyerIdentityUpdateRequire = {\n  action: 'BuyerIdentityUpdate';\n  inputs: {\n    buyerIdentity: CartBuyerIdentityInput;\n  } & OtherFormData;\n};\n\ntype CartCreateProps = {\n  action: 'Create';\n  inputs?: {\n    input: CartInput;\n  } & OtherFormData;\n};\ntype CartCreateRequire = {\n  action: 'Create';\n  inputs: {\n    input: CartInput;\n  } & OtherFormData;\n};\ntype CartDiscountCodesUpdateProps = {\n  action: 'DiscountCodesUpdate';\n  inputs?: {\n    discountCodes: string[];\n  } & OtherFormData;\n};\ntype CartDiscountCodesUpdateRequire = {\n  action: 'DiscountCodesUpdate';\n  inputs: {\n    discountCodes: string[];\n  } & OtherFormData;\n};\ntype CartGiftCardCodesUpdateProps = {\n  action: 'GiftCardCodesUpdate';\n  inputs?: {\n    giftCardCodes: string[];\n  } & OtherFormData;\n};\ntype CartGiftCardCodesUpdateRequire = {\n  action: 'GiftCardCodesUpdate';\n  inputs: {\n    giftCardCodes: string[];\n  } & OtherFormData;\n};\n\nexport type OptimisticCartLineInput = CartLineInput & {\n  selectedVariant?: unknown;\n};\n\ntype CartLinesAddProps = {\n  action: 'LinesAdd';\n  inputs?: {\n    lines: Array<OptimisticCartLineInput>;\n  } & OtherFormData;\n};\n\ntype CartLinesAddRequire = {\n  action: 'LinesAdd';\n  inputs: {\n    lines: Array<OptimisticCartLineInput>;\n  } & OtherFormData;\n};\n\ntype CartLinesUpdateProps = {\n  action: 'LinesUpdate';\n  inputs?: {\n    lines: CartLineUpdateInput[];\n  } & OtherFormData;\n};\ntype CartLinesUpdateRequire = {\n  action: 'LinesUpdate';\n  inputs: {\n    lines: CartLineUpdateInput[];\n  } & OtherFormData;\n};\n\ntype CartLinesRemoveProps = {\n  action: 'LinesRemove';\n  inputs?: {\n    lineIds: string[];\n  } & OtherFormData;\n};\ntype CartLinesRemoveRequire = {\n  action: 'LinesRemove';\n  inputs: {\n    lineIds: string[];\n  } & OtherFormData;\n};\n\ntype CartNoteUpdateProps = {\n  action: 'NoteUpdate';\n  inputs?: {\n    note: string;\n  } & OtherFormData;\n};\ntype CartNoteUpdateRequire = {\n  action: 'NoteUpdate';\n  inputs: {\n    note: string;\n  } & OtherFormData;\n};\n\ntype CartSelectedDeliveryOptionsUpdateProps = {\n  action: 'SelectedDeliveryOptionsUpdate';\n  inputs?: {\n    selectedDeliveryOptions: CartSelectedDeliveryOptionInput[];\n  } & OtherFormData;\n};\n\ntype CartSelectedDeliveryOptionsUpdateRequire = {\n  action: 'SelectedDeliveryOptionsUpdate';\n  inputs: {\n    selectedDeliveryOptions: CartSelectedDeliveryOptionInput[];\n  } & OtherFormData;\n};\n\ntype CartMetafieldsSetProps = {\n  action: 'MetafieldsSet';\n  inputs?: {\n    metafields: MetafieldWithoutOwnerId[];\n  } & OtherFormData;\n};\ntype CartMetafieldsSetRequire = {\n  action: 'MetafieldsSet';\n  inputs: {\n    metafields: MetafieldWithoutOwnerId[];\n  } & OtherFormData;\n};\n\ntype CartMetafieldDeleteProps = {\n  action: 'MetafieldsDelete';\n  inputs?: {\n    key: Scalars['String']['input'];\n  } & OtherFormData;\n};\ntype CartMetafieldDeleteRequire = {\n  action: 'MetafieldsDelete';\n  inputs: {\n    key: Scalars['String']['input'];\n  } & OtherFormData;\n};\n\ntype CartCustomProps = {\n  action: `Custom${string}`;\n  inputs?: Record<string, unknown>;\n};\ntype CartCustomRequire = {\n  action: `Custom${string}`;\n  inputs: Record<string, unknown>;\n};\n\ntype CartFormCommonProps = {\n  /**\n   * Children nodes of CartForm.\n   * Children can be a render prop that receives the fetcher.\n   */\n  children: ReactNode | ((fetcher: FetcherWithComponents<any>) => ReactNode);\n  /**\n   * The route to submit the form to. Defaults to the current route.\n   */\n  route?: string;\n  /**\n   * Optional key to use for the fetcher.\n   * @see https://remix.run/hooks/use-fetcher#key\n   */\n  fetcherKey?: string;\n};\n\ntype CartActionInputProps =\n  | CartAttributesUpdateProps\n  | CartBuyerIdentityUpdateProps\n  | CartCreateProps\n  | CartDiscountCodesUpdateProps\n  | CartGiftCardCodesUpdateProps\n  | CartLinesAddProps\n  | CartLinesUpdateProps\n  | CartLinesRemoveProps\n  | CartNoteUpdateProps\n  | CartSelectedDeliveryOptionsUpdateProps\n  | CartMetafieldsSetProps\n  | CartMetafieldDeleteProps\n  | CartCustomProps;\n\nexport type CartActionInput =\n  | CartAttributesUpdateRequire\n  | CartBuyerIdentityUpdateRequire\n  | CartCreateRequire\n  | CartDiscountCodesUpdateRequire\n  | CartGiftCardCodesUpdateRequire\n  | CartLinesAddRequire\n  | CartLinesUpdateRequire\n  | CartLinesRemoveRequire\n  | CartNoteUpdateRequire\n  | CartSelectedDeliveryOptionsUpdateRequire\n  | CartMetafieldsSetRequire\n  | CartMetafieldDeleteRequire\n  | CartCustomRequire;\n\ntype CartFormProps = CartActionInputProps & CartFormCommonProps;\n\nconst INPUT_NAME = 'cartFormInput';\n\nexport function CartForm({\n  children,\n  action,\n  inputs,\n  route,\n  fetcherKey,\n}: CartFormProps): JSX.Element {\n  const fetcher = useFetcher({key: fetcherKey});\n\n  return (\n    <fetcher.Form action={route || ''} method=\"post\">\n      {(action || inputs) && (\n        <input\n          type=\"hidden\"\n          name={INPUT_NAME}\n          value={JSON.stringify({action, inputs})}\n        />\n      )}\n      {typeof children === 'function' ? children(fetcher) : children}\n    </fetcher.Form>\n  );\n}\nCartForm.INPUT_NAME = INPUT_NAME;\nCartForm.ACTIONS = {\n  AttributesUpdateInput: 'AttributesUpdateInput',\n  BuyerIdentityUpdate: 'BuyerIdentityUpdate',\n  Create: 'Create',\n  DiscountCodesUpdate: 'DiscountCodesUpdate',\n  GiftCardCodesUpdate: 'GiftCardCodesUpdate',\n  LinesAdd: 'LinesAdd',\n  LinesRemove: 'LinesRemove',\n  LinesUpdate: 'LinesUpdate',\n  NoteUpdate: 'NoteUpdate',\n  SelectedDeliveryOptionsUpdate: 'SelectedDeliveryOptionsUpdate',\n  MetafieldsSet: 'MetafieldsSet',\n  MetafieldDelete: 'MetafieldDelete',\n} as const;\n\nfunction getFormInput(formData: FormData): CartActionInput {\n  // Get all form data\n  const data: Record<string, unknown> = {};\n  for (const pair of formData.entries()) {\n    const key = pair[0];\n    const values = formData.getAll(key);\n\n    data[key] = values.length > 1 ? values : pair[1];\n  }\n\n  // Parse cartFormInput\n  const {cartFormInput, ...otherData} = data;\n  const {action, inputs}: CartActionInput = cartFormInput\n    ? JSON.parse(String(cartFormInput))\n    : {};\n\n  return {\n    action,\n    inputs: {\n      ...inputs,\n      ...otherData,\n    },\n  } as unknown as CartActionInput;\n}\n\nCartForm.getFormInput = getFormInput;\n", "export const USER_ERROR_FRAGMENT = `#graphql\n  fragment CartApiError on CartUserError {\n    message\n    field\n    code\n  }\n`;\n\nexport const MINIMAL_CART_FRAGMENT = `#graphql\n  fragment CartApiMutation on Cart {\n    id\n    totalQuantity\n    checkoutUrl\n  }\n`;\n\nexport const CART_WARNING_FRAGMENT = `#graphql\n  fragment CartApiWarning on CartWarning {\n    code\n    message\n    target\n  }\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartQueryData,\n  CartQueryOptions,\n  CartOptionalInput,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {CartInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartCreateFunction = (\n  input: CartInput,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartCreateDefault(\n  options: CartQueryOptions,\n): CartCreateFunction {\n  return async (input, optionalParams) => {\n    const buyer = options.customerAccount\n      ? await options.customerAccount.UNSTABLE_getBuyer()\n      : undefined;\n    const {cartId, ...restOfOptionalParams} = optionalParams || {};\n    const {buyerIdentity, ...restOfInput} = input;\n    const {cartCreate, errors} = await options.storefront.mutate<{\n      cartCreate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_CREATE_MUTATION(options.cartFragment), {\n      variables: {\n        input: {\n          ...restOfInput,\n          buyerIdentity: {\n            ...buyer,\n            ...buyerIdentity,\n          },\n        },\n        ...restOfOptionalParams,\n      },\n    });\n    return formatAPIResult(cartCreate, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartCreate\nexport const CART_CREATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartCreate(\n    $input: CartInput!\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartCreate(input: $input) {\n      cart {\n        ...CartApiMutation\n        checkoutUrl\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {formatAPIResult} from '../../storefront';\nimport type {CustomerAccount} from '../../customer/types';\nimport type {CartQueryOptions, CartReturn} from './cart-types';\nimport type {\n  Cart,\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\ntype CartGetProps = {\n  /**\n   * The cart ID.\n   * @default cart.getCartId();\n   */\n  cartId?: string;\n  /**\n   * The country code.\n   * @default storefront.i18n.country\n   */\n  country?: CountryCode;\n  /**\n   * The language code.\n   * @default storefront.i18n.language\n   */\n  language?: LanguageCode;\n  /**\n   * The number of cart lines to be returned.\n   * @default 100\n   */\n  numCartLines?: number;\n};\n\nexport type CartGetFunction = (\n  cartInput?: CartGetProps,\n) => Promise<CartReturn | null>;\n\ntype CartGetOptions = CartQueryOptions & {\n  /**\n   * The customer account client instance created by [`createCustomerAccountClient`](docs/api/hydrogen/latest/utilities/createcustomeraccountclient).\n   */\n  customerAccount?: CustomerAccount;\n};\n\nexport function cartGetDefault({\n  storefront,\n  customerAccount,\n  getCartId,\n  cartFragment,\n}: CartGetOptions): CartGetFunction {\n  return async (cartInput?: CartGetProps) => {\n    const cartId = getCartId();\n\n    if (!cartId) return null;\n\n    const [isCustomerLoggedIn, {cart, errors}] = await Promise.all([\n      customerAccount ? customerAccount.isLoggedIn() : false,\n      storefront.query<{cart: Cart | null}>(CART_QUERY(cartFragment), {\n        variables: {cartId, ...cartInput},\n        cache: storefront.CacheNone(),\n      }),\n    ]);\n\n    if (isCustomerLoggedIn && cart?.checkoutUrl) {\n      const finalCheckoutUrl = new URL(cart.checkoutUrl);\n      finalCheckoutUrl.searchParams.set('logged_in', 'true');\n      cart.checkoutUrl = finalCheckoutUrl.toString();\n    }\n\n    return cart || errors ? formatAPIResult(cart, errors) : null;\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/queries/cart\nconst CART_QUERY = (cartFragment = DEFAULT_CART_FRAGMENT) => `#graphql\n  query CartQuery(\n    $cartId: ID!\n    $numCartLines: Int = 100\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cart(id: $cartId) {\n      ...CartApiQuery\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const DEFAULT_CART_FRAGMENT = `#graphql\n  fragment CartApiQuery on Cart {\n    updatedAt\n    id\n    checkoutUrl\n    totalQuantity\n    buyerIdentity {\n      countryCode\n      customer {\n        id\n        email\n        firstName\n        lastName\n        displayName\n      }\n      email\n      phone\n    }\n    lines(first: $numCartLines) {\n      edges {\n        node {\n          id\n          quantity\n          attributes {\n            key\n            value\n          }\n          cost {\n            totalAmount {\n              amount\n              currencyCode\n            }\n            amountPerQuantity {\n              amount\n              currencyCode\n            }\n            compareAtAmountPerQuantity {\n              amount\n              currencyCode\n            }\n          }\n          merchandise {\n            ... on ProductVariant {\n              id\n              availableForSale\n              compareAtPrice {\n                ...CartApiMoney\n              }\n              price {\n                ...CartApiMoney\n              }\n              requiresShipping\n              title\n              image {\n                ...CartApiImage\n              }\n              product {\n                handle\n                title\n                id\n                vendor\n              }\n              selectedOptions {\n                name\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n    cost {\n      subtotalAmount {\n        ...CartApiMoney\n      }\n      totalAmount {\n        ...CartApiMoney\n      }\n      totalDutyAmount {\n        ...CartApiMoney\n      }\n      totalTaxAmount {\n        ...CartApiMoney\n      }\n    }\n    note\n    attributes {\n      key\n      value\n    }\n    discountCodes {\n      applicable\n      code\n    }\n  }\n\n  fragment CartApiMoney on MoneyV2 {\n    currencyCode\n    amount\n  }\n\n  fragment CartApiImage on Image {\n    id\n    url\n    altText\n    width\n    height\n  }\n`;\n", "import type {CartLineInput} from '@shopify/hydrogen-react/storefront-api-types';\nimport {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartLinesAddFunction = (\n  lines: Array<CartLineInput>,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesAddDefault(\n  options: CartQueryOptions,\n): CartLinesAddFunction {\n  return async (lines, optionalParams) => {\n    const {cartLinesAdd, errors} = await options.storefront.mutate<{\n      cartLinesAdd: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_ADD_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lines,\n        ...optionalParams,\n      },\n    });\n\n    return formatAPIResult(cartLinesAdd, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesAdd\nexport const CART_LINES_ADD_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesAdd(\n    $cartId: ID!\n    $lines: [CartLineInput!]!\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesAdd(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import type {CartLineUpdateInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nconst PENDING_PREFIX = '__h_pending_';\n\nexport function getOptimisticLineId(variantId: string) {\n  return PENDING_PREFIX + variantId;\n}\n\nexport function isOptimisticLineId(lineId: string) {\n  return lineId.startsWith(PENDING_PREFIX);\n}\n\nexport function throwIfLinesAreOptimistic(\n  type: string,\n  lines: CartLineUpdateInput[] | string[],\n) {\n  if (\n    lines.some((line) =>\n      isOptimisticLineId(typeof line === 'string' ? line : line.id),\n    )\n  ) {\n    throw new Error(\n      `Tried to perform an action on an optimistic line. Make sure to disable your \"${type}\" CartForm action when the line is optimistic.`,\n    );\n  }\n}\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {throwIfLinesAreOptimistic} from '../optimistic/optimistic-cart.helper';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartLineUpdateInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartLinesUpdateFunction = (\n  lines: CartLineUpdateInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesUpdateDefault(\n  options: CartQueryOptions,\n): CartLinesUpdateFunction {\n  return async (lines, optionalParams) => {\n    throwIfLinesAreOptimistic('updateLines', lines);\n\n    const {cartLinesUpdate, errors} = await options.storefront.mutate<{\n      cartLinesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lines,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartLinesUpdate, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesUpdate\nexport const CART_LINES_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesUpdate(\n    $cartId: ID!\n    $lines: [CartLineUpdateInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesUpdate(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {throwIfLinesAreOptimistic} from '../optimistic/optimistic-cart.helper';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartLinesRemoveFunction = (\n  lineIds: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartLinesRemoveDefault(\n  options: CartQueryOptions,\n): CartLinesRemoveFunction {\n  return async (lineIds, optionalParams) => {\n    throwIfLinesAreOptimistic('removeLines', lineIds);\n\n    const {cartLinesRemove, errors} = await options.storefront.mutate<{\n      cartLinesRemove: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_LINES_REMOVE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        lineIds,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartLinesRemove, errors);\n  };\n}\n\n//! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesRemove\nexport const CART_LINES_REMOVE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartLinesRemove(\n    $cartId: ID!\n    $lineIds: [ID!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartDiscountCodesUpdateFunction = (\n  discountCodes: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartDiscountCodesUpdateDefault(\n  options: CartQueryOptions,\n): CartDiscountCodesUpdateFunction {\n  return async (discountCodes, optionalParams) => {\n    // Ensure the discount codes are unique\n    const uniqueCodes = discountCodes.filter((value, index, array) => {\n      return array.indexOf(value) === index;\n    });\n\n    const {cartDiscountCodesUpdate, errors} = await options.storefront.mutate<{\n      cartDiscountCodesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_DISCOUNT_CODE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        discountCodes: uniqueCodes,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartDiscountCodesUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartDiscountCodesUpdate\nexport const CART_DISCOUNT_CODE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartDiscountCodesUpdate(\n    $cartId: ID!\n    $discountCodes: [String!]\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartDiscountCodesUpdate(cartId: $cartId, discountCodes: $discountCodes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartGiftCardCodesUpdateFunction = (\n  giftCardCodes: string[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartGiftCardCodesUpdateDefault(\n  options: CartQueryOptions,\n): CartGiftCardCodesUpdateFunction {\n  return async (giftCardCodes, optionalParams) => {\n    // Ensure the gift card codes are unique\n    const uniqueCodes = giftCardCodes.filter((value, index, array) => {\n      return array.indexOf(value) === index;\n    });\n\n    const {cartGiftCardCodesUpdate, errors} = await options.storefront.mutate<{\n      cartGiftCardCodesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_GIFT_CARD_CODE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        giftCardCodes: uniqueCodes,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartGiftCardCodesUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartGiftCardCodesUpdate\nexport const CART_GIFT_CARD_CODE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartGiftCardCodesUpdate(\n    $cartId: ID!\n    $giftCardCodes: [String!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartGiftCardCodesUpdate(cartId: $cartId, giftCardCodes: $giftCardCodes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartBuyerIdentityInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartBuyerIdentityUpdateFunction = (\n  buyerIdentity: CartBuyerIdentityInput,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartBuyerIdentityUpdateDefault(\n  options: CartQueryOptions,\n): CartBuyerIdentityUpdateFunction {\n  return async (buyerIdentity, optionalParams) => {\n    if (buyerIdentity.companyLocationId && options.customerAccount) {\n      options.customerAccount.UNSTABLE_setBuyer({\n        companyLocationId: buyerIdentity.companyLocationId,\n      });\n    }\n\n    const buyer = options.customerAccount\n      ? await options.customerAccount.UNSTABLE_getBuyer()\n      : undefined;\n\n    const {cartBuyerIdentityUpdate, errors} = await options.storefront.mutate<{\n      cartBuyerIdentityUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_BUYER_IDENTITY_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        buyerIdentity: {\n          ...buyer,\n          ...buyerIdentity,\n        },\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartBuyerIdentityUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartBuyerIdentityUpdate\nexport const CART_BUYER_IDENTITY_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartBuyerIdentityUpdate(\n    $cartId: ID!\n    $buyerIdentity: CartBuyerIdentityInput!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\n\nexport type CartNoteUpdateFunction = (\n  note: string,\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartNoteUpdateDefault(\n  options: CartQueryOptions,\n): CartNoteUpdateFunction {\n  return async (note, optionalParams) => {\n    const {cartNoteUpdate, errors} = await options.storefront.mutate<{\n      cartNoteUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_NOTE_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: options.getCartId(),\n        note,\n        ...optionalParams,\n      },\n    });\n    return formatAPIResult(cartNoteUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartNoteUpdate\nexport const CART_NOTE_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartNoteUpdate(\n    $cartId: ID!\n    $note: String!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartNoteUpdate(cartId: $cartId, note: $note) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {CartSelectedDeliveryOptionInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartSelectedDeliveryOptionsUpdateFunction = (\n  selectedDeliveryOptions: CartSelectedDeliveryOptionInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartSelectedDeliveryOptionsUpdateDefault(\n  options: CartQueryOptions,\n): CartSelectedDeliveryOptionsUpdateFunction {\n  return async (selectedDeliveryOptions, optionalParams) => {\n    const {cartSelectedDeliveryOptionsUpdate, errors} =\n      await options.storefront.mutate<{\n        cartSelectedDeliveryOptionsUpdate: CartQueryData;\n        errors: StorefrontApiErrors;\n      }>(CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION(options.cartFragment), {\n        variables: {\n          cartId: options.getCartId(),\n          selectedDeliveryOptions,\n          ...optionalParams,\n        },\n      });\n    return formatAPIResult(cartSelectedDeliveryOptionsUpdate, errors);\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartSelectedDeliveryOptionsUpdate\nexport const CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartSelectedDeliveryOptionsUpdate(\n    $cartId: ID!\n    $selectedDeliveryOptions: [CartSelectedDeliveryOptionInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartSelectedDeliveryOptionsUpdate(cartId: $cartId, selectedDeliveryOptions: $selectedDeliveryOptions) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport {\n  CART_WARNING_FRAGMENT,\n  MINIMAL_CART_FRAGMENT,\n  USER_ERROR_FRAGMENT,\n} from './cart-fragments';\nimport type {\n  CartOptionalInput,\n  CartQueryData,\n  CartQueryDataReturn,\n  CartQueryOptions,\n} from './cart-types';\nimport type {AttributeInput} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartAttributesUpdateFunction = (\n  attributes: AttributeInput[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartAttributesUpdateDefault(\n  options: CartQueryOptions,\n): CartAttributesUpdateFunction {\n  return async (attributes, optionalParams) => {\n    const {cartAttributesUpdate, errors} = await options.storefront.mutate<{\n      cartAttributesUpdate: CartQueryData;\n      errors: StorefrontApiErrors;\n    }>(CART_ATTRIBUTES_UPDATE_MUTATION(options.cartFragment), {\n      variables: {\n        cartId: optionalParams?.cartId || options.getCartId(),\n        attributes,\n      },\n    });\n    return formatAPIResult(cartAttributesUpdate, errors);\n  };\n}\n\nexport const CART_ATTRIBUTES_UPDATE_MUTATION = (\n  cartFragment = MINIMAL_CART_FRAGMENT,\n) => `#graphql\n  mutation cartAttributesUpdate(\n    $cartId: ID!\n    $attributes: [AttributeInput!]!\n  ) {\n    cartAttributesUpdate(cartId: $cartId, attributes: $attributes) {\n      cart {\n        ...CartApiMutation\n      }\n      userErrors {\n        ...CartApiError\n      }\n      warnings {\n        ...CartApiWarning\n      }\n    }\n  }\n  ${cartFragment}\n  ${USER_ERROR_FRAGMENT}\n  ${CART_WARNING_FRAGMENT}\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport type {\n  CartOptionalInput,\n  CartQueryOptions,\n  MetafieldWithoutOwnerId,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {\n  Cart,\n  MetafieldsSetUserError,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartMetafieldsSetFunction = (\n  metafields: MetafieldWithoutOwnerId[],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartMetafieldsSetDefault(\n  options: CartQueryOptions,\n): CartMetafieldsSetFunction {\n  return async (metafields, optionalParams) => {\n    const ownerId = optionalParams?.cartId || options.getCartId();\n    const metafieldsWithOwnerId = metafields.map(\n      (metafield: MetafieldWithoutOwnerId) => ({\n        ...metafield,\n        ownerId,\n      }),\n    );\n    const {cartMetafieldsSet, errors} = await options.storefront.mutate<{\n      cartMetafieldsSet: {\n        userErrors: MetafieldsSetUserError[];\n      };\n      errors: StorefrontApiErrors;\n    }>(CART_METAFIELD_SET_MUTATION(), {\n      variables: {metafields: metafieldsWithOwnerId},\n    });\n\n    return formatAPIResult(\n      {\n        cart: {\n          id: ownerId,\n        } as Cart,\n        ...cartMetafieldsSet,\n      },\n      errors,\n    );\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartMetafieldsSet\nexport const CART_METAFIELD_SET_MUTATION = () => `#graphql\n  mutation cartMetafieldsSet(\n    $metafields: [CartMetafieldsSetInput!]!\n    $language: LanguageCode\n    $country: CountryCode\n  ) @inContext(country: $country, language: $language) {\n    cartMetafieldsSet(metafields: $metafields) {\n      userErrors {\n        code\n        elementIndex\n        field\n        message\n      }\n    }\n  }\n`;\n", "import {StorefrontApiErrors, formatAPIResult} from '../../storefront';\nimport type {\n  CartQueryOptions,\n  CartOptionalInput,\n  CartQueryDataReturn,\n} from './cart-types';\nimport type {\n  Cart,\n  MetafieldDeleteUserError,\n  Scalars,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type CartMetafieldDeleteFunction = (\n  key: Scalars['String']['input'],\n  optionalParams?: CartOptionalInput,\n) => Promise<CartQueryDataReturn>;\n\nexport function cartMetafieldDeleteDefault(\n  options: CartQueryOptions,\n): CartMetafieldDeleteFunction {\n  return async (key, optionalParams) => {\n    const ownerId = optionalParams?.cartId || options.getCartId();\n    const {cartMetafieldDelete, errors} = await options.storefront.mutate<{\n      cartMetafieldDelete: {\n        userErrors: MetafieldDeleteUserError[];\n      };\n      errors: StorefrontApiErrors;\n    }>(CART_METAFIELD_DELETE_MUTATION(), {\n      variables: {\n        input: {\n          ownerId,\n          key,\n        },\n      },\n    });\n    return formatAPIResult(\n      {\n        cart: {\n          id: ownerId,\n        } as Cart,\n        ...cartMetafieldDelete,\n      },\n      errors,\n    );\n  };\n}\n\n//! @see https://shopify.dev/docs/api/storefront/2024-10/mutations/cartMetafieldDelete\nexport const CART_METAFIELD_DELETE_MUTATION = () => `#graphql\n  mutation cartMetafieldDelete(\n    $input: CartMetafieldDeleteInput!\n  ) {\n    cartMetafieldDelete(input: $input) {\n      userErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n", "import {parse} from 'worktop/cookie';\nimport {type CrossRuntimeRequest, getHeaderValue} from '../utils/request';\n\nexport const cartGetIdDefault = (\n  requestHeaders: CrossRuntimeRequest['headers'],\n) => {\n  const cookies = parse(getHeaderValue(requestHeaders, 'Cookie') || '');\n  return () => {\n    return cookies.cart ? `gid://shopify/Cart/${cookies.cart}` : undefined;\n  };\n};\n", "import {stringify} from 'worktop/cookie';\n\nexport type CookieOptions = {\n  maxage?: number;\n  expires?: Date | number | string;\n  samesite?: 'Lax' | 'Strict' | 'None';\n  secure?: boolean;\n  httponly?: boolean;\n  domain?: string;\n  path?: string;\n};\n\nexport const cartSetIdDefault = (cookieOptions?: CookieOptions) => {\n  return (cartId: string) => {\n    const headers = new Headers();\n    headers.append(\n      'Set-Cookie',\n      stringify('cart', cartId.split('/').pop() || '', {\n        path: '/',\n        ...cookieOptions,\n      }),\n    );\n    return headers;\n  };\n};\n", "import {Storefront} from '../storefront';\nimport type {CustomerAccount} from '../customer/types';\nimport {type CartGetFunction, cartGetDefault} from './queries/cartGetDefault';\nimport {\n  type CartCreateFunction,\n  cartCreateDefault,\n} from './queries/cartCreateDefault';\nimport {\n  type CartLinesAddFunction,\n  cartLinesAddDefault,\n} from './queries/cartLinesAddDefault';\nimport {\n  type CartLinesUpdateFunction,\n  cartLinesUpdateDefault,\n} from './queries/cartLinesUpdateDefault';\nimport {\n  type CartLinesRemoveFunction,\n  cartLinesRemoveDefault,\n} from './queries/cartLinesRemoveDefault';\nimport {\n  type CartDiscountCodesUpdateFunction,\n  cartDiscountCodesUpdateDefault,\n} from './queries/cartDiscountCodesUpdateDefault';\nimport {\n  type CartBuyerIdentityUpdateFunction,\n  cartBuyerIdentityUpdateDefault,\n} from './queries/cartBuyerIdentityUpdateDefault';\nimport {\n  type CartNoteUpdateFunction,\n  cartNoteUpdateDefault,\n} from './queries/cartNoteUpdateDefault';\nimport {\n  type CartSelectedDeliveryOptionsUpdateFunction,\n  cartSelectedDeliveryOptionsUpdateDefault,\n} from './queries/cartSelectedDeliveryOptionsUpdateDefault';\nimport {\n  type CartAttributesUpdateFunction,\n  cartAttributesUpdateDefault,\n} from './queries/cartAttributesUpdateDefault';\nimport {\n  type CartMetafieldsSetFunction,\n  cartMetafieldsSetDefault,\n} from './queries/cartMetafieldsSetDefault';\nimport {\n  type CartMetafieldDeleteFunction,\n  cartMetafieldDeleteDefault,\n} from './queries/cartMetafieldDeleteDefault';\nimport {\n  type CartGiftCardCodesUpdateFunction,\n  cartGiftCardCodesUpdateDefault,\n} from './queries/cartGiftCardCodeUpdateDefault';\n\nexport type CartHandlerOptions = {\n  storefront: Storefront;\n  customerAccount?: CustomerAccount;\n  getCartId: () => string | undefined;\n  setCartId: (cartId: string) => Headers;\n  cartQueryFragment?: string;\n  cartMutateFragment?: string;\n};\n\nexport type CustomMethodsBase = Record<string, Function>;\nexport type CartHandlerOptionsWithCustom<\n  TCustomMethods extends CustomMethodsBase,\n> = CartHandlerOptions & {\n  customMethods?: TCustomMethods;\n};\n\nexport type HydrogenCart = {\n  get: ReturnType<typeof cartGetDefault>;\n  getCartId: () => string | undefined;\n  setCartId: (cartId: string) => Headers;\n  create: ReturnType<typeof cartCreateDefault>;\n  addLines: ReturnType<typeof cartLinesAddDefault>;\n  updateLines: ReturnType<typeof cartLinesUpdateDefault>;\n  removeLines: ReturnType<typeof cartLinesRemoveDefault>;\n  updateDiscountCodes: ReturnType<typeof cartDiscountCodesUpdateDefault>;\n  updateGiftCardCodes: ReturnType<typeof cartGiftCardCodesUpdateDefault>;\n  updateBuyerIdentity: ReturnType<typeof cartBuyerIdentityUpdateDefault>;\n  updateNote: ReturnType<typeof cartNoteUpdateDefault>;\n  updateSelectedDeliveryOption: ReturnType<\n    typeof cartSelectedDeliveryOptionsUpdateDefault\n  >;\n  updateAttributes: ReturnType<typeof cartAttributesUpdateDefault>;\n  setMetafields: ReturnType<typeof cartMetafieldsSetDefault>;\n  deleteMetafield: ReturnType<typeof cartMetafieldDeleteDefault>;\n};\n\nexport type HydrogenCartCustom<\n  TCustomMethods extends Partial<HydrogenCart> & CustomMethodsBase,\n> = Omit<HydrogenCart, keyof TCustomMethods> & TCustomMethods;\nexport type CartHandlerReturn<TCustomMethods extends CustomMethodsBase> =\n  | HydrogenCartCustom<TCustomMethods>\n  | HydrogenCart;\n\nexport function createCartHandler(options: CartHandlerOptions): HydrogenCart;\nexport function createCartHandler<TCustomMethods extends CustomMethodsBase>(\n  options: CartHandlerOptionsWithCustom<TCustomMethods>,\n): HydrogenCartCustom<TCustomMethods>;\nexport function createCartHandler<TCustomMethods extends CustomMethodsBase>(\n  options: CartHandlerOptions | CartHandlerOptionsWithCustom<TCustomMethods>,\n): CartHandlerReturn<TCustomMethods> {\n  const {\n    getCartId: _getCartId,\n    setCartId,\n    storefront,\n    customerAccount,\n    cartQueryFragment,\n    cartMutateFragment,\n  } = options;\n\n  let cartId = _getCartId();\n\n  const getCartId = () => cartId || _getCartId();\n\n  const mutateOptions = {\n    storefront,\n    getCartId,\n    cartFragment: cartMutateFragment,\n    customerAccount,\n  };\n\n  const _cartCreate = cartCreateDefault(mutateOptions);\n\n  const cartCreate: CartCreateFunction = async function (...args) {\n    const result = await _cartCreate(...args);\n    cartId = result?.cart?.id;\n    return result;\n  };\n\n  const methods: HydrogenCart = {\n    get: cartGetDefault({\n      storefront,\n      customerAccount,\n      getCartId,\n      cartFragment: cartQueryFragment,\n    }),\n    getCartId,\n    setCartId,\n    create: cartCreate,\n    addLines: async (linesWithOptimisticData, optionalParams) => {\n      const lines = linesWithOptimisticData.map((line) => {\n        return {\n          attributes: line.attributes,\n          quantity: line.quantity,\n          merchandiseId: line.merchandiseId,\n          sellingPlanId: line.sellingPlanId,\n        };\n      });\n\n      return cartId || optionalParams?.cartId\n        ? await cartLinesAddDefault(mutateOptions)(lines, optionalParams)\n        : await cartCreate({lines}, optionalParams);\n    },\n    updateLines: cartLinesUpdateDefault(mutateOptions),\n    removeLines: cartLinesRemoveDefault(mutateOptions),\n    updateDiscountCodes: async (discountCodes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartDiscountCodesUpdateDefault(mutateOptions)(\n            discountCodes,\n            optionalParams,\n          )\n        : await cartCreate({discountCodes}, optionalParams);\n    },\n    updateGiftCardCodes: async (giftCardCodes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartGiftCardCodesUpdateDefault(mutateOptions)(\n            giftCardCodes,\n            optionalParams,\n          )\n        : await cartCreate({giftCardCodes}, optionalParams);\n    },\n    updateBuyerIdentity: async (buyerIdentity, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartBuyerIdentityUpdateDefault(mutateOptions)(\n            buyerIdentity,\n            optionalParams,\n          )\n        : await cartCreate({buyerIdentity}, optionalParams);\n    },\n    updateNote: async (note, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartNoteUpdateDefault(mutateOptions)(note, optionalParams)\n        : await cartCreate({note}, optionalParams);\n    },\n    updateSelectedDeliveryOption:\n      cartSelectedDeliveryOptionsUpdateDefault(mutateOptions),\n    updateAttributes: async (attributes, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartAttributesUpdateDefault(mutateOptions)(\n            attributes,\n            optionalParams,\n          )\n        : await cartCreate({attributes}, optionalParams);\n    },\n    setMetafields: async (metafields, optionalParams) => {\n      return cartId || optionalParams?.cartId\n        ? await cartMetafieldsSetDefault(mutateOptions)(\n            metafields,\n            optionalParams,\n          )\n        : await cartCreate({metafields}, optionalParams);\n    },\n    deleteMetafield: cartMetafieldDeleteDefault(mutateOptions),\n  };\n\n  if ('customMethods' in options) {\n    return {\n      ...methods,\n      ...(options.customMethods ?? {}),\n    };\n  } else {\n    return methods;\n  }\n}\n\nexport type CartHandlerOptionsForDocs<\n  TCustomMethods extends CustomMethodsBase,\n> = {\n  /**\n   * A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`.\n   */\n  getCartId: () => string | undefined;\n  /**\n   * A function that sets the cart ID.\n   */\n  setCartId: (cartId: string) => Headers;\n  /**\n   * The storefront client instance created by [`createStorefrontClient`](docs/api/hydrogen/2024-10/utilities/createstorefrontclient).\n   */\n  storefront: Storefront;\n  /**\n   * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n   * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n   */\n  cartMutateFragment?: string;\n  /**\n   * The cart query fragment used by `cart.get()`.\n   * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n   */\n  cartQueryFragment?: string;\n  /**\n   * Define custom methods or override existing methods for your cart API instance.\n   * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-custom-methods) in the documentation.\n   */\n  customMethods?: TCustomMethods;\n};\n\nexport type HydrogenCartForDocs = {\n  /**\n   * Adds items to the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  addLines?: CartLinesAddFunction;\n  /**\n   * Creates a new cart.\n   */\n  create?: CartCreateFunction;\n  /**\n   * Removes a custom field (metafield) from the cart.\n   */\n  deleteMetafield?: CartMetafieldDeleteFunction;\n  /**\n   * Retrieves the cart information.\n   */\n  get?: CartGetFunction;\n  /**\n   * Retrieves the unique identifier of the cart.\n   * By default, it gets the ID from the request cookie.\n   */\n  getCartId?: () => string | undefined;\n  /**\n   * Removes items from the cart.\n   */\n  removeLines?: CartLinesRemoveFunction;\n  /**\n   * Sets the unique identifier of the cart.\n   * By default, it sets the ID in the header cookie.\n   */\n  setCartId?: (cartId: string) => Headers;\n  /**\n   * Adds extra information (metafields) to the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  setMetafields?: CartMetafieldsSetFunction;\n  /**\n   * Updates additional information (attributes) in the cart.\n   */\n  updateAttributes?: CartAttributesUpdateFunction;\n  /**\n   * Updates the buyer's information in the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  updateBuyerIdentity?: CartBuyerIdentityUpdateFunction;\n  /**\n   * Updates discount codes in the cart.\n   */\n  updateDiscountCodes?: CartDiscountCodesUpdateFunction;\n  /**\n   * Updates gift card codes in the cart.\n   */\n  updateGiftCardCodes?: CartGiftCardCodesUpdateFunction;\n  /**\n   * Updates items in the cart.\n   */\n  updateLines?: CartLinesUpdateFunction;\n  /**\n   * Updates the note in the cart.\n   * If the cart doesn't exist, a new one will be created.\n   */\n  updateNote?: CartNoteUpdateFunction;\n  /**\n   * Updates the selected delivery options in the cart.\n   * Only available for carts associated with a customer access token.\n   */\n  updateSelectedDeliveryOption?: CartSelectedDeliveryOptionsUpdateFunction;\n};\n", "import {useFetchers} from '@remix-run/react';\nimport {CartForm} from '../CartForm';\nimport type {\n  CartLine,\n  ProductVariant,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {\n  getOptimisticLineId,\n  isOptimisticLineId,\n} from './optimistic-cart.helper';\nimport type {PartialDeep} from 'type-fest';\nimport type {CartReturn} from '../queries/cart-types';\n\ntype LikeACart = {\n  lines: {\n    nodes: Array<unknown>;\n  };\n};\n\nexport type OptimisticCartLine<T = CartLine | CartReturn> = T extends LikeACart\n  ? T['lines']['nodes'][number] & {isOptimistic?: boolean}\n  : T & {isOptimistic?: boolean};\n\nexport type OptimisticCart<T = CartReturn> = T extends undefined | null\n  ? // This is the null/undefined case, where the cart has yet to be created.\n    // But we still need to provide an optimistic cart object.\n    {\n      isOptimistic?: boolean;\n      lines: {\n        nodes: Array<OptimisticCartLine>;\n      };\n      totalQuantity?: number;\n    } & Omit<PartialDeep<CartReturn>, 'lines'>\n  : Omit<T, 'lines'> & {\n      isOptimistic?: boolean;\n      lines: {\n        nodes: Array<OptimisticCartLine<T>>;\n      };\n      totalQuantity?: number;\n    };\n\n/**\n * @param cart The cart object from `context.cart.get()` returned by a server loader.\n *\n * @returns A new cart object augmented with optimistic state for `lines` and `totalQuantity`. Each cart line item that is optimistically added includes an `isOptimistic` property. Also if the cart has _any_ optimistic state, a root property `isOptimistic` will be set to `true`.\n */\nexport function useOptimisticCart<\n  DefaultCart = {\n    lines?: {\n      nodes: Array<{id: string; quantity: number; merchandise: {is: string}}>;\n    };\n  },\n>(cart?: DefaultCart): OptimisticCart<DefaultCart> {\n  const fetchers = useFetchers();\n\n  if (!fetchers || !fetchers.length) return cart as OptimisticCart<DefaultCart>;\n\n  const optimisticCart = (cart as CartReturn)?.lines\n    ? (structuredClone(cart) as OptimisticCart<DefaultCart>)\n    : ({lines: {nodes: []}} as unknown as OptimisticCart<DefaultCart>);\n\n  const cartLines = optimisticCart.lines.nodes as OptimisticCartLine[];\n\n  let isOptimistic = false;\n\n  for (const {formData} of fetchers) {\n    if (!formData) continue;\n\n    const cartFormData = CartForm.getFormInput(formData);\n\n    if (cartFormData.action === CartForm.ACTIONS.LinesAdd) {\n      for (const input of cartFormData.inputs.lines) {\n        if (!input.selectedVariant) {\n          console.error(\n            '[h2:error:useOptimisticCart] No selected variant was passed in the cart action. Make sure to pass the selected variant if you want to use an optimistic cart',\n          );\n          continue;\n        }\n\n        const existingLine = cartLines.find(\n          (line) =>\n            line.merchandise.id ===\n            (input.selectedVariant as ProductVariant)?.id,\n        );\n\n        isOptimistic = true;\n\n        if (existingLine) {\n          existingLine.quantity =\n            (existingLine.quantity || 1) + (input.quantity || 1);\n          existingLine.isOptimistic = true;\n        } else {\n          cartLines.unshift({\n            id: getOptimisticLineId((input.selectedVariant as any).id),\n            merchandise: input.selectedVariant,\n            isOptimistic: true,\n            quantity: input.quantity || 1,\n          } as CartLine & {isOptimistic?: boolean});\n        }\n      }\n    } else if (cartFormData.action === CartForm.ACTIONS.LinesRemove) {\n      for (const lineId of cartFormData.inputs.lineIds) {\n        const index = cartLines.findIndex((line) => line.id === lineId);\n\n        if (index !== -1) {\n          if (isOptimisticLineId(cartLines[index].id)) {\n            console.error(\n              '[h2:error:useOptimisticCart] Tried to remove an optimistic line that has not been added to the cart yet',\n            );\n            continue;\n          }\n\n          cartLines.splice(index, 1);\n          isOptimistic = true;\n        } else {\n          console.warn(\n            `[h2:warn:useOptimisticCart] Tried to remove line '${lineId}' but it doesn't exist in the cart`,\n          );\n        }\n      }\n    } else if (cartFormData.action === CartForm.ACTIONS.LinesUpdate) {\n      for (const line of cartFormData.inputs.lines) {\n        const index = cartLines.findIndex(\n          (optimisticLine) => line.id === optimisticLine.id,\n        );\n\n        if (index > -1) {\n          if (isOptimisticLineId(cartLines[index].id)) {\n            console.error(\n              '[h2:error:useOptimisticCart] Tried to update an optimistic line that has not been added to the cart yet',\n            );\n            continue;\n          }\n\n          cartLines[index].quantity = line.quantity as number;\n\n          if (cartLines[index].quantity === 0) {\n            cartLines.splice(index, 1);\n          }\n\n          isOptimistic = true;\n        } else {\n          console.warn(\n            `[h2:warn:useOptimisticCart] Tried to update line '${line.id}' but it doesn't exist in the cart`,\n          );\n        }\n      }\n    }\n  }\n\n  if (isOptimistic) {\n    optimisticCart.isOptimistic = isOptimistic;\n  }\n\n  // Calculate the total quantity of the optimistic cart\n  optimisticCart.totalQuantity = cartLines.reduce(\n    (sum, line) => sum + line.quantity,\n    0,\n  );\n\n  return optimisticCart;\n}\n", "import {useLocation, useNavigation} from '@remix-run/react';\nimport {flattenConnection} from '@shopify/hydrogen-react';\nimport type {\n  ProductOption,\n  ProductOptionValue,\n  ProductVariant,\n  ProductVariantConnection,\n  SelectedOptionInput,\n  Maybe,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {type ReactNode, useMemo, createElement, Fragment} from 'react';\nimport type {PartialDeep} from 'type-fest';\nimport {warnOnce} from '../utils/warning';\n\nexport type VariantOption = {\n  name: string;\n  value?: string;\n  values: Array<VariantOptionValue>;\n};\n\ntype PartialProductOptionValues = PartialDeep<ProductOptionValue>;\ntype PartialProductOption = PartialDeep<\n  Omit<ProductOption, 'optionValues'> & {\n    optionValues: Array<PartialProductOptionValues>;\n  }\n>;\n\nexport type VariantOptionValue = {\n  value: string;\n  isAvailable: boolean;\n  to: string;\n  search: string;\n  isActive: boolean;\n  variant?: PartialDeep<ProductVariant>;\n  optionValue: PartialProductOptionValues;\n};\n\ntype VariantSelectorProps = {\n  /** The product handle for all of the variants */\n  handle: string;\n  /** Product options from the [Storefront API](/docs/api/storefront/2024-10/objects/ProductOption). Make sure both `name` and `values` are a part of your query. */\n  options: Array<PartialProductOption> | undefined;\n  /** Product variants from the [Storefront API](/docs/api/storefront/2024-10/objects/ProductVariant). You only need to pass this prop if you want to show product availability. If a product option combination is not found within `variants`, it is assumed to be available. Make sure to include `availableForSale` and `selectedOptions.name` and `selectedOptions.value`. */\n  variants?:\n    | PartialDeep<ProductVariantConnection>\n    | Array<PartialDeep<ProductVariant>>;\n  /** By default all products are under /products. Use this prop to provide a custom path. */\n  productPath?: string;\n  /** Should the VariantSelector wait to update until after the browser navigates to a variant. */\n  waitForNavigation?: boolean;\n  /** An optional selected variant to use for the initial state if no URL parameters are set */\n  selectedVariant?: Maybe<PartialDeep<ProductVariant>>;\n  children: ({option}: {option: VariantOption}) => ReactNode;\n};\n\nexport function VariantSelector({\n  handle,\n  options: _options = [],\n  variants: _variants = [],\n  productPath = 'products',\n  waitForNavigation = false,\n  selectedVariant,\n  children,\n}: VariantSelectorProps) {\n  // Deprecation notice for product.options.values\n  // TODO: Remove this after product.options.values is removed from the Storefront API\n  let options = _options;\n  if (options[0]?.values) {\n    warnOnce(\n      '[h2:warn:VariantSelector] product.options.values is deprecated. Use product.options.optionValues instead.',\n    );\n\n    if (!!options[0] && !options[0].optionValues) {\n      // Convert the old values format to the new optionValues format\n      options = _options.map((option) => ({\n        ...option,\n        optionValues: option.values?.map((value) => ({name: value})) || [],\n      }));\n    }\n  }\n\n  const variants =\n    _variants instanceof Array ? _variants : flattenConnection(_variants);\n\n  const {searchParams, path, alreadyOnProductPage} = useVariantPath(\n    handle,\n    productPath,\n    waitForNavigation,\n  );\n\n  // If an option only has one value, it doesn't need a UI to select it\n  // But instead it always needs to be added to the product options so\n  // the SFAPI properly finds the variant\n  const optionsWithOnlyOneValue = options.filter(\n    (option) => option?.optionValues?.length === 1,\n  );\n\n  // If a selected variant is provided, create a map of selected values\n  const selectedVariantOptions = selectedVariant\n    ? selectedVariant?.selectedOptions?.reduce<Record<string, string>>(\n        (selectedValues, item) => {\n          selectedValues[item.name] = item.value;\n          return selectedValues;\n        },\n        {},\n      )\n    : {};\n\n  return createElement(\n    Fragment,\n    null,\n    ...useMemo(() => {\n      return options.map((option) => {\n        let activeValue;\n        let availableValues: VariantOptionValue[] = [];\n\n        for (let value of option.optionValues!) {\n          // The clone the search params for each value, so we can calculate\n          // a new URL for each option value pair\n          const clonedSearchParams = new URLSearchParams(\n            alreadyOnProductPage ? searchParams : undefined,\n          );\n          clonedSearchParams.set(option.name!, value.name!);\n\n          // Because we hide options with only one value, they aren't selectable,\n          // but they still need to get into the URL\n          optionsWithOnlyOneValue.forEach((option) => {\n            if (option.optionValues![0]!.name)\n              clonedSearchParams.set(\n                option.name!,\n                option.optionValues![0]!.name,\n              );\n          });\n\n          const variant = variants.find((variant) => {\n            return variant?.selectedOptions?.every((selectedOption) => {\n              // Get the selected value from the URL (default) or the selected variant\n              const selectedValue =\n                clonedSearchParams.get(selectedOption?.name!) ||\n                selectedVariantOptions?.[selectedOption?.name!];\n\n              return selectedValue === selectedOption?.value;\n            });\n          });\n\n          let selectedValue = searchParams.get(option.name!);\n\n          if (!selectedValue && selectedVariant) {\n            // If there's no value set via a URL parameter, default\n            // to the value from the first available variant\n            selectedValue = selectedVariantOptions?.[option.name!] || null;\n          }\n\n          const calculatedActiveValue = selectedValue\n            ? // If a URL parameter exists for the current option, check if it equals the current value\n              selectedValue === value.name\n            : false;\n\n          if (calculatedActiveValue) {\n            // Save out the current value if it's active. This should only ever happen once.\n            // Should we throw if it happens a second time?\n            activeValue = value.name!;\n          }\n\n          const searchString = '?' + clonedSearchParams.toString();\n\n          availableValues.push({\n            value: value.name!,\n            optionValue: value,\n            isAvailable: variant ? variant.availableForSale! : true,\n            to: path + searchString,\n            search: searchString,\n            isActive: calculatedActiveValue,\n            variant,\n          });\n        }\n\n        return children({\n          option: {\n            name: option.name!,\n            value: activeValue,\n            values: availableValues,\n          },\n        });\n      });\n    }, [options, variants, children]),\n  );\n}\n\ntype GetSelectedProductOptions = (request: Request) => SelectedOptionInput[];\n\n/**\n * Extract searchParams from a Request instance and return an array of selected options.\n * @param request - The Request instance to extract searchParams from.\n * @returns An array of selected options.\n * @example Basic usage:\n * ```tsx\n *\n * import {getSelectedProductOptions} from '@shopify/hydrogen';\n *\n * // Given a request url of `/products/product-handle?color=red&size=large`\n *\n * const selectedOptions = getSelectedProductOptions(request);\n *\n * // selectedOptions will equal:\n * // [\n * //   {name: 'color', value: 'red'},\n * //   {name: 'size', value: 'large'}\n * // ]\n * ```\n **/\nexport const getSelectedProductOptions: GetSelectedProductOptions = (\n  request,\n) => {\n  if (typeof request?.url === 'undefined')\n    throw new TypeError(`Expected a Request instance, got ${typeof request}`);\n\n  const searchParams = new URL(request.url).searchParams;\n\n  const selectedOptions: SelectedOptionInput[] = [];\n\n  searchParams.forEach((value, name) => {\n    selectedOptions.push({name, value});\n  });\n\n  return selectedOptions;\n};\n\nfunction useVariantPath(\n  handle: string,\n  productPath: string,\n  waitForNavigation: boolean,\n) {\n  const {pathname, search} = useLocation();\n  const navigation = useNavigation();\n\n  return useMemo(() => {\n    const match = /(\\/[a-zA-Z]{2}-[a-zA-Z]{2}\\/)/g.exec(pathname);\n    const isLocalePathname = match && match.length > 0;\n    productPath = productPath.startsWith('/')\n      ? productPath.substring(1)\n      : productPath;\n\n    const path = isLocalePathname\n      ? `${match![0]}${productPath}/${handle}`\n      : `/${productPath}/${handle}`;\n\n    const searchParams = new URLSearchParams(\n      // Remix doesn't update the location until pending loaders complete.\n      // By default we use the destination search params to make selecting a variant\n      // instant, but `waitForNavigation` makes the UI wait to update by only using\n      // the active browser search params.\n      waitForNavigation || navigation.state !== 'loading'\n        ? search\n        : navigation.location.search,\n    );\n\n    return {\n      searchParams,\n      // If the current pathname matches the product page, we need to make sure\n      // that we append to the current search params. Otherwise all the search\n      // params can be generated new.\n      alreadyOnProductPage: path === pathname,\n      path,\n    };\n  }, [pathname, search, waitForNavigation, handle, productPath, navigation]);\n}\n", "import {useNavigation} from '@remix-run/react';\nimport {ProductVariant} from '@shopify/hydrogen-react/storefront-api-types';\nimport {useEffect, useState} from 'react';\nimport type {PartialDeep} from 'type-fest';\n\ntype OptimisticVariant<T> = T & {\n  isOptimistic?: boolean;\n};\n\ntype OptimisticVariantInput = PartialDeep<ProductVariant>;\n\ntype OptimisticProductVariants =\n  | Array<PartialDeep<ProductVariant>>\n  | Promise<Array<PartialDeep<ProductVariant>>>\n  | PartialDeep<ProductVariant>\n  | Promise<PartialDeep<ProductVariant>>;\n\n/**\n * @param selectedVariant The `selectedVariant` field queried with `variantBySelectedOptions`.\n * @param variants The available product variants for the product. This can be an array of variants, a promise that resolves to an array of variants, or an object with a `product` key that contains the variants.\n * @returns A new product object where the `selectedVariant` property is set to the variant that matches the current URL search params. If no variant is found, the original product object is returned. The `isOptimistic` property is set to `true` if the `selectedVariant` has been optimistically changed.\n */\nexport function useOptimisticVariant<\n  SelectedVariant = OptimisticVariantInput,\n  Variants = OptimisticProductVariants,\n>(\n  selectedVariant: SelectedVariant,\n  variants: Variants,\n): OptimisticVariant<SelectedVariant> {\n  const navigation = useNavigation();\n  const [resolvedVariants, setResolvedVariants] = useState<\n    Array<PartialDeep<ProductVariant>>\n  >([]);\n\n  useEffect(() => {\n    Promise.resolve(variants)\n      .then((productWithVariants) => {\n        if (productWithVariants) {\n          setResolvedVariants(\n            productWithVariants instanceof Array\n              ? productWithVariants\n              : (productWithVariants as PartialDeep<ProductVariant>).product\n                  ?.variants?.nodes || [],\n          );\n        }\n      })\n      .catch((error) => {\n        reportError(\n          new Error(\n            '[h2:error:useOptimisticVariant] An error occurred while resolving the variants for the optimistic product hook.',\n            {\n              cause: error,\n            },\n          ),\n        );\n      });\n  }, [JSON.stringify(variants)]);\n\n  if (navigation.state === 'loading') {\n    const queryParams = new URLSearchParams(navigation.location.search);\n    let reportedError = false;\n\n    // Find matching variant\n    const matchingVariant = resolvedVariants.find((variant) => {\n      if (!variant.selectedOptions) {\n        if (!reportedError) {\n          reportedError = true;\n          reportError(\n            new Error(\n              '[h2:error:useOptimisticVariant] The optimistic product hook requires your product query to include variants with the selectedOptions field.',\n            ),\n          );\n        }\n        return false;\n      }\n\n      return variant.selectedOptions.every((option) => {\n        return queryParams.get(option.name) === option.value;\n      });\n    });\n\n    if (matchingVariant) {\n      return {\n        ...matchingVariant,\n        isOptimistic: true,\n      } as OptimisticVariant<SelectedVariant>;\n    }\n  }\n\n  return selectedVariant as OptimisticVariant<SelectedVariant>;\n}\n", "import {\n  type ComponentType,\n  createContext,\n  createElement,\n  type ReactNode,\n  useContext,\n} from 'react';\nimport cspBuilder from 'content-security-policy-builder';\nimport {generateNonce} from './nonce';\n\nexport const NonceContext = createContext<string | undefined>(undefined);\nexport const NonceProvider = NonceContext.Provider;\n\nexport const useNonce = () => useContext(NonceContext);\n\ntype ContentSecurityPolicy = {\n  /** A randomly generated nonce string that should be passed to any custom `script` element */\n  nonce: string;\n  /** The content security policy header */\n  header: string;\n  NonceProvider: ComponentType<{children: ReactNode}>;\n};\n\ntype DirectiveValues = string[] | string | boolean;\n\ntype CreateContentSecurityPolicy = {\n  defaultSrc?: DirectiveValues;\n  scriptSrc?: DirectiveValues;\n  scriptSrcElem?: DirectiveValues;\n  styleSrc?: DirectiveValues;\n  imgSrc?: DirectiveValues;\n  connectSrc?: DirectiveValues;\n  fontSrc?: DirectiveValues;\n  objectSrc?: DirectiveValues;\n  mediaSrc?: DirectiveValues;\n  frameSrc?: DirectiveValues;\n  sandbox?: DirectiveValues;\n  reportUri?: DirectiveValues;\n  childSrc?: DirectiveValues;\n  formAction?: DirectiveValues;\n  frameAncestors?: DirectiveValues;\n  pluginTypes?: DirectiveValues;\n  baseUri?: DirectiveValues;\n  reportTo?: DirectiveValues;\n  workerSrc?: DirectiveValues;\n  manifestSrc?: DirectiveValues;\n  prefetchSrc?: DirectiveValues;\n  navigateTo?: DirectiveValues;\n  upgradeInsecureRequests?: boolean;\n  blockAllMixedContent?: boolean;\n};\n\ntype ShopifyDomains = {\n  /** The production shop checkout domain url.  */\n  checkoutDomain?: string;\n  /** The production shop domain url. */\n  storeDomain?: string;\n};\n\ntype ShopProp = {\n  /** Shop specific configurations */\n  shop?: ShopifyDomains;\n};\n\n/**\n * @param directives - Pass custom [content security policy directives](https://content-security-policy.com/). This is important if you load content in your app from third-party domains.\n */\nexport function createContentSecurityPolicy(\n  props?: CreateContentSecurityPolicy & ShopProp,\n): ContentSecurityPolicy {\n  const nonce = generateNonce();\n  const header = createCSPHeader(nonce, props);\n\n  const Provider = ({children}: {children: ReactNode}) => {\n    return createElement(NonceProvider, {value: nonce}, children);\n  };\n\n  return {\n    nonce,\n    header,\n    NonceProvider: Provider,\n  };\n}\n\nfunction createCSPHeader(\n  nonce: string,\n  props?: CreateContentSecurityPolicy & ShopProp,\n): string {\n  const {shop, ...directives} = props ?? {};\n  const nonceString = `'nonce-${nonce}'`;\n  const styleSrc = [\"'self'\", \"'unsafe-inline'\", 'https://cdn.shopify.com'];\n  const connectSrc = [\"'self'\", 'https://monorail-edge.shopifysvc.com'];\n  if (shop && shop.checkoutDomain) {\n    connectSrc.push(`https://${shop.checkoutDomain}`);\n  }\n\n  if (shop && shop.storeDomain) {\n    connectSrc.push(`https://${shop.storeDomain}`);\n  }\n\n  const defaultSrc = [\n    \"'self'\",\n    nonceString,\n    'https://cdn.shopify.com',\n    // Used for the Customer Account API\n    'https://shopify.com',\n  ];\n\n  const defaultDirectives: Record<string, string[] | string | boolean> = {\n    baseUri: [\"'self'\"],\n    defaultSrc,\n    frameAncestors: [\"'none'\"],\n    styleSrc,\n    connectSrc,\n  };\n\n  // Support localhost in development\n  if (process.env.NODE_ENV === 'development') {\n    defaultDirectives.styleSrc = [...styleSrc, 'http://localhost:*'];\n    defaultDirectives.defaultSrc = [...defaultSrc, 'http://localhost:*'];\n    defaultDirectives.connectSrc = [\n      ...connectSrc,\n      'http://localhost:*',\n      // For HMR:\n      'ws://localhost:*',\n      'ws://127.0.0.1:*',\n      'ws://*.tryhydrogen.dev:*',\n    ];\n  }\n\n  const combinedDirectives = Object.assign({}, defaultDirectives, directives);\n\n  //add defaults if it was override\n  for (const key in defaultDirectives) {\n    const directive = directives[key as keyof CreateContentSecurityPolicy];\n    if (key && directive) {\n      combinedDirectives[key] = addCspDirective(\n        directive,\n        defaultDirectives[key],\n      );\n    }\n  }\n\n  // Make sure that at least script-src includes a nonce directive.\n  // If someone doesn't want a nonce in their CSP, they probably\n  // shouldn't use our utilities and just manually create their CSP.\n  if (combinedDirectives.scriptSrc instanceof Array) {\n    combinedDirectives.scriptSrc = [\n      ...combinedDirectives.scriptSrc.filter((ss) => !ss.startsWith(`'nonce`)),\n      nonceString,\n    ];\n  } else if (combinedDirectives.defaultSrc instanceof Array) {\n    combinedDirectives.defaultSrc = [\n      ...combinedDirectives.defaultSrc.filter((ss) => !ss.startsWith(`'nonce`)),\n      nonceString,\n    ];\n  }\n\n  return cspBuilder({\n    directives: combinedDirectives,\n  });\n}\n\nfunction addCspDirective(\n  currentValue: string[] | string | boolean,\n  value: string[] | string | boolean,\n): boolean | string[] {\n  const normalizedValue = typeof value === 'string' ? [value] : value;\n  const normalizedCurrentValue = Array.isArray(currentValue)\n    ? currentValue\n    : [String(currentValue)];\n\n  const newValue = Array.isArray(normalizedValue)\n    ? // If the default directive is `none`, don't\n      // merge the override with the default value.\n      normalizedValue.every((a) => a === `'none'`)\n      ? normalizedCurrentValue\n      : [...normalizedCurrentValue, ...normalizedValue]\n    : normalizedValue;\n\n  return newValue;\n}\n", "import {forwardRef, ScriptHTMLAttributes, HTMLAttributes} from 'react';\nimport {useNonce} from './csp';\nimport {useLoadScript} from '@shopify/hydrogen-react';\n\ntype ScriptProps = HydrogenScriptProps & ScriptAttributes;\n\ninterface HydrogenScriptProps {\n  /** Wait to load the script until after the page hydrates. This prevents hydration errors for scripts that modify the DOM. Note: For security, `nonce` is not supported when using `waitForHydration`. Instead you need to add the domain of the script directly to your [Content Securitiy Policy directives](https://shopify.dev/docs/storefronts/headless/hydrogen/content-security-policy#step-3-customize-the-content-security-policy).*/\n  waitForHydration?: boolean;\n}\n\ninterface ScriptAttributes extends ScriptHTMLAttributes<HTMLScriptElement> {}\n\nexport const Script = forwardRef<HTMLScriptElement, ScriptProps>(\n  (props, ref) => {\n    const {waitForHydration, src, ...rest} = props;\n\n    if (waitForHydration) return <LazyScript src={src} options={rest} />;\n\n    const nonce = useNonce();\n\n    return (\n      <script\n        suppressHydrationWarning\n        {...rest}\n        src={src}\n        nonce={nonce}\n        ref={ref}\n      />\n    );\n  },\n);\n\nfunction LazyScript({\n  src,\n  options,\n}: {\n  src?: string;\n  options: JSX.IntrinsicElements['script'];\n}) {\n  if (!src)\n    throw new Error(\n      '`waitForHydration` with the Script component requires a `src` prop',\n    );\n\n  useLoadScript(src, {\n    attributes: options as Record<string, string>,\n  });\n\n  return null;\n}\n", "import {useFetchers} from '@remix-run/react';\n\nexport function useOptimisticData<T>(identifier: string) {\n  const fetchers = useFetchers();\n  const data: Record<string, unknown> = {};\n\n  for (const {formData} of fetchers) {\n    if (formData?.get('optimistic-identifier') === identifier) {\n      try {\n        if (formData.has('optimistic-data')) {\n          const dataInForm: unknown = JSON.parse(\n            String(formData.get('optimistic-data')),\n          );\n          Object.assign(data, dataInForm);\n        }\n      } catch {\n        // do nothing\n      }\n    }\n  }\n  return data as T;\n}\n\nexport type OptimisticInputProps = {\n  /**\n   * A unique identifier for the optimistic input. Use the same identifier in `useOptimisticData`\n   * to retrieve the optimistic data from actions.\n   */\n  id: string;\n  /**\n   * The data to be stored in the optimistic input. Use for creating an optimistic successful state\n   * of this form action.\n   */\n  data: Record<string, unknown>;\n};\n\nexport function OptimisticInput({id, data}: OptimisticInputProps) {\n  return (\n    <>\n      <input type=\"hidden\" name=\"optimistic-identifier\" value={id} />\n      <input\n        type=\"hidden\"\n        name=\"optimistic-data\"\n        value={JSON.stringify(data)}\n      />\n    </>\n  );\n}\n", "import {ShopPayButton as ShopPayButtonBase} from '@shopify/hydrogen-react';\nimport {ComponentProps} from 'react';\n\nexport function ShopPayButton(props: ComponentProps<typeof ShopPayButtonBase>) {\n  return <ShopPayButtonBase channel=\"hydrogen\" {...props} />;\n}\n", "import {\n  type ReactNode,\n  useEffect,\n  useState,\n  useMemo,\n  createContext,\n  useContext,\n  useRef,\n} from 'react';\nimport {type CartReturn} from '../cart/queries/cart-types';\nimport {\n  AnalyticsPageView,\n  AnalyticsProductView,\n  AnalyticsCollectionView,\n  AnalyticsCartView,\n  AnalyticsSearchView,\n  AnalyticsCustomView,\n  type PageViewPayload,\n  type ProductViewPayload,\n  type CollectionViewPayload,\n  type CartViewPayload,\n  type CartUpdatePayload,\n  type CustomEventPayload,\n  type OtherData,\n  type EventPayloads,\n  type CartLineUpdatePayload,\n  type SearchViewPayload,\n} from './AnalyticsView';\nimport type {\n  CurrencyCode,\n  LanguageCode,\n  Shop,\n  Localization,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {AnalyticsEvent} from './events';\nimport {ShopifyAnalytics} from './ShopifyAnalytics';\nimport {CartAnalytics} from './CartAnalytics';\nimport {\n  type PrivacyBanner,\n  getCustomerPrivacy,\n  getPrivacyBanner,\n  type CustomerPrivacy,\n  type CustomerPrivacyApiProps,\n} from '../customer-privacy/ShopifyCustomerPrivacy';\nimport type {Storefront} from '../storefront';\nimport {PerfKit} from './PerfKit';\nimport {errorOnce, warnOnce} from '../utils/warning';\n\nexport type ShopAnalytics = {\n  /** The shop ID. */\n  shopId: string;\n  /** The language code that is being displayed to user. */\n  acceptedLanguage: LanguageCode;\n  /** The currency code that is being displayed to user. */\n  currency: CurrencyCode;\n  /** The Hydrogen subchannel ID generated by Oxygen in the environment variable. */\n  hydrogenSubchannelId: string | '0';\n};\n\nexport type Consent = Partial<\n  Pick<\n    CustomerPrivacyApiProps,\n    'checkoutDomain' | 'storefrontAccessToken' | 'withPrivacyBanner' | 'country'\n  >\n> & {language?: LanguageCode}; // the privacyBanner SDKs refers to \"language\" as \"locale\" :(\n\nexport type AnalyticsProviderProps = {\n  /** React children to render. */\n  children?: ReactNode;\n  /** The cart or cart promise to track for cart analytics. When there is a difference between the state of the cart, `AnalyticsProvider` will trigger a `cart_updated` event. It will also produce `product_added_to_cart` and `product_removed_from_cart` based on cart line quantity and cart line id changes. */\n  cart: Promise<CartReturn | null> | CartReturn | null;\n  /** An optional function to set wether the user can be tracked. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack?: () => boolean;\n  /** An optional custom payload to pass to all events. e.g language/locale/currency. */\n  customData?: Record<string, unknown>;\n  /** The shop configuration required to publish analytics events to Shopify. Use [`getShopAnalytics`](/docs/api/hydrogen/2024-10/utilities/getshopanalytics). */\n  shop: Promise<ShopAnalytics | null> | ShopAnalytics | null;\n  /** The customer privacy consent configuration and options. */\n  consent: Consent;\n  /** @deprecated Disable throwing errors when required props are missing. */\n  disableThrowOnError?: boolean;\n  /** The domain scope of the cookie set with `useShopifyCookies`. **/\n  cookieDomain?: string;\n};\n\nexport type Carts = {\n  cart: Awaited<AnalyticsProviderProps['cart']>;\n  prevCart: Awaited<AnalyticsProviderProps['cart']>;\n};\n\nexport type AnalyticsContextValue = {\n  /** A function to tell you the current state of if the user can be tracked by analytics. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack: NonNullable<AnalyticsProviderProps['canTrack']>;\n  /** The current cart state. */\n  cart: Awaited<AnalyticsProviderProps['cart']>;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: AnalyticsProviderProps['customData'];\n  /** The previous cart state. */\n  prevCart: Awaited<AnalyticsProviderProps['cart']>;\n  /** A function to publish an analytics event. */\n  publish: typeof publish;\n  /** A function to register with the analytics provider. */\n  register: (key: string) => {ready: () => void};\n  /** The shop configuration required to publish events to Shopify. */\n  shop: Awaited<AnalyticsProviderProps['shop']>;\n  /** A function to subscribe to analytics events. */\n  subscribe: typeof subscribe;\n  /** The privacy banner SDK methods with the config applied */\n  privacyBanner: PrivacyBanner | null;\n  /** The customer privacy SDK methods with the config applied */\n  customerPrivacy: CustomerPrivacy | null;\n};\n\nexport const defaultAnalyticsContext: AnalyticsContextValue = {\n  canTrack: () => false,\n  cart: null,\n  customData: {},\n  prevCart: null,\n  publish: () => {},\n  shop: null,\n  subscribe: () => {},\n  register: () => ({ready: () => {}}),\n  customerPrivacy: null,\n  privacyBanner: null,\n};\n\nconst AnalyticsContext = createContext<AnalyticsContextValue>(\n  defaultAnalyticsContext,\n);\n\nconst subscribers = new Map<\n  string,\n  Map<string, (payload: EventPayloads) => void>\n>();\nconst registers: Record<string, boolean> = {};\n\nfunction areRegistersReady() {\n  return Object.values(registers).every(Boolean);\n}\n\n// Overload functions for each subscribe event\nfunction subscribe(\n  event: typeof AnalyticsEvent.PAGE_VIEWED,\n  callback: (payload: PageViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_VIEWED,\n  callback: (payload: ProductViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.COLLECTION_VIEWED,\n  callback: (payload: CollectionViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CART_VIEWED,\n  callback: (payload: CartViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.SEARCH_VIEWED,\n  callback: (payload: SearchViewPayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CART_UPDATED,\n  callback: (payload: CartUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_ADD_TO_CART,\n  callback: (payload: CartLineUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.PRODUCT_REMOVED_FROM_CART,\n  callback: (payload: CartLineUpdatePayload) => void,\n): void;\n\nfunction subscribe(\n  event: typeof AnalyticsEvent.CUSTOM_EVENT,\n  callback: (payload: CustomEventPayload) => void,\n): void;\n\nfunction subscribe(event: any, callback: any) {\n  if (!subscribers.has(event)) {\n    subscribers.set(event, new Map());\n  }\n  subscribers.get(event)?.set(callback.toString(), callback);\n}\n\nconst waitForReadyQueue = new Map<any, any>();\n\nfunction publish(\n  event: typeof AnalyticsEvent.PAGE_VIEWED,\n  payload: PageViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_VIEWED,\n  payload: ProductViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.COLLECTION_VIEWED,\n  payload: CollectionViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CART_VIEWED,\n  payload: CartViewPayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CART_UPDATED,\n  payload: CartUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_ADD_TO_CART,\n  payload: CartLineUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.PRODUCT_REMOVED_FROM_CART,\n  payload: CartLineUpdatePayload,\n): void;\nfunction publish(\n  event: typeof AnalyticsEvent.CUSTOM_EVENT,\n  payload: OtherData,\n): void;\nfunction publish(event: any, payload: any): void {\n  if (!areRegistersReady()) {\n    waitForReadyQueue.set(event, payload);\n    return;\n  }\n\n  publishEvent(event, payload);\n}\n\nfunction publishEvent(event: any, payload: any): void {\n  (subscribers.get(event) ?? new Map()).forEach((callback, subscriber) => {\n    try {\n      callback(payload);\n    } catch (error) {\n      if (typeof error === 'object' && error instanceof Error) {\n        console.error(\n          'Analytics publish error',\n          error.message,\n          subscriber,\n          error.stack,\n        );\n      } else {\n        console.error('Analytics publish error', error, subscriber);\n      }\n    }\n  });\n}\n\nfunction register(key: string) {\n  if (!registers.hasOwnProperty(key)) {\n    registers[key] = false;\n  }\n\n  return {\n    ready: () => {\n      registers[key] = true;\n\n      if (areRegistersReady() && waitForReadyQueue.size > 0) {\n        waitForReadyQueue.forEach((queuePayload, queueEvent) => {\n          publishEvent(queueEvent, queuePayload);\n        });\n        waitForReadyQueue.clear();\n      }\n    },\n  };\n}\n\n/**\n * This functions attempts to automatically determine if the user can be tracked if the\n * customer privacy API is available. If not, it will default to false.\n */\nfunction shopifyCanTrack(): boolean {\n  try {\n    return window.Shopify.customerPrivacy.analyticsProcessingAllowed();\n  } catch (e) {}\n  return false;\n}\n\nfunction messageOnError(field: string, envVar: string) {\n  return `[h2:error:Analytics.Provider] - ${field} is required. Make sure ${envVar} is defined in your environment variables. See https://h2o.fyi/analytics/consent to learn how to setup environment variables in the Shopify admin.`;\n}\n\nfunction AnalyticsProvider({\n  canTrack: customCanTrack,\n  cart: currentCart,\n  children,\n  consent,\n  customData = {},\n  shop: shopProp = null,\n  cookieDomain,\n}: AnalyticsProviderProps): JSX.Element {\n  const listenerSet = useRef(false);\n  const {shop} = useShopAnalytics(shopProp);\n  const [analyticsLoaded, setAnalyticsLoaded] = useState(\n    customCanTrack ? true : false,\n  );\n  const [carts, setCarts] = useState<Carts>({cart: null, prevCart: null});\n  const [canTrack, setCanTrack] = useState<() => boolean>(\n    customCanTrack ? () => customCanTrack : () => shopifyCanTrack,\n  );\n\n  if (!!shop) {\n    // If mock shop is used, log error instead of throwing\n    if (/\\/68817551382$/.test(shop.shopId)) {\n      warnOnce(\n        '[h2:error:Analytics.Provider] - Mock shop is used. Analytics will not work properly.',\n      );\n    } else {\n      if (!consent.checkoutDomain) {\n        const errorMsg = messageOnError(\n          'consent.checkoutDomain',\n          'PUBLIC_CHECKOUT_DOMAIN',\n        );\n        errorOnce(errorMsg);\n      }\n\n      if (!consent.storefrontAccessToken) {\n        const errorMsg = messageOnError(\n          'consent.storefrontAccessToken',\n          'PUBLIC_STOREFRONT_API_TOKEN',\n        );\n        errorOnce(errorMsg);\n      }\n\n      if (!consent?.country) {\n        consent.country = 'US';\n      }\n\n      if (!consent?.language) {\n        consent.language = 'EN';\n      }\n\n      if (consent.withPrivacyBanner === undefined) {\n        consent.withPrivacyBanner = false;\n      }\n    }\n  }\n\n  const value = useMemo<AnalyticsContextValue>(() => {\n    return {\n      canTrack,\n      ...carts,\n      customData,\n      publish: canTrack() ? publish : () => {},\n      shop,\n      subscribe,\n      register,\n      customerPrivacy: getCustomerPrivacy(),\n      privacyBanner: getPrivacyBanner(),\n    };\n  }, [\n    analyticsLoaded,\n    canTrack,\n    carts,\n    carts.cart?.updatedAt,\n    carts.prevCart,\n    publish,\n    subscribe,\n    customData,\n    shop,\n    register,\n    JSON.stringify(registers),\n    getCustomerPrivacy,\n    getPrivacyBanner,\n  ]);\n\n  return (\n    <AnalyticsContext.Provider value={value}>\n      {children}\n      {!!shop && <AnalyticsPageView />}\n      {!!shop && !!currentCart && (\n        <CartAnalytics cart={currentCart} setCarts={setCarts} />\n      )}\n      {!!shop && consent.checkoutDomain && (\n        <ShopifyAnalytics\n          consent={consent}\n          onReady={() => {\n            listenerSet.current = true;\n            setAnalyticsLoaded(true);\n            setCanTrack(\n              customCanTrack ? () => customCanTrack : () => shopifyCanTrack,\n            );\n          }}\n          domain={cookieDomain}\n        />\n      )}\n      {!!shop && <PerfKit shop={shop} />}\n    </AnalyticsContext.Provider>\n  );\n}\n\nexport function useAnalytics(): AnalyticsContextValue {\n  const analyticsContext = useContext(AnalyticsContext);\n  if (!analyticsContext) {\n    throw new Error(\n      `[h2:error:useAnalytics] 'useAnalytics()' must be a descendent of <AnalyticsProvider/>`,\n    );\n  }\n  return analyticsContext;\n}\n\n/**\n * A hook that resolves the shop analytics that could have been deferred\n * and returns the shop analytics.\n */\nfunction useShopAnalytics(shopProp: AnalyticsProviderProps['shop']): {\n  shop: ShopAnalytics | null;\n} {\n  const [shop, setShop] =\n    useState<Awaited<AnalyticsProviderProps['shop']>>(null);\n\n  // resolve the shop analytics that could have been deferred\n  useEffect(() => {\n    Promise.resolve(shopProp).then(setShop);\n    return () => {};\n  }, [setShop, shopProp]);\n\n  return {shop};\n}\n\ntype ShopAnalyticsProps = {\n  /**\n   * The storefront client instance created by [`createStorefrontClient`](docs/api/hydrogen/2024-10/utilities/createstorefrontclient).\n   */\n  storefront: Storefront;\n  /**\n   * The `PUBLIC_STOREFRONT_ID` generated by Oxygen in the environment variable.\n   */\n  publicStorefrontId: string;\n};\n\nexport async function getShopAnalytics({\n  storefront,\n  publicStorefrontId = '0',\n}: ShopAnalyticsProps): Promise<ShopAnalytics | null> {\n  return storefront\n    .query(SHOP_QUERY, {\n      cache: storefront.CacheLong(),\n    })\n    .then(({shop, localization}: {shop: Shop; localization: Localization}) => {\n      return {\n        shopId: shop.id,\n        acceptedLanguage: localization.language.isoCode,\n        currency: localization.country.currency.isoCode,\n        hydrogenSubchannelId: publicStorefrontId,\n      };\n    });\n}\n\nconst SHOP_QUERY = `#graphql\n  query ShopData(\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    shop {\n      id\n    }\n    localization {\n      country {\n        currency {\n          isoCode\n        }\n      }\n      language {\n        isoCode\n      }\n    }\n  }\n` as const;\n\nexport const Analytics = {\n  CartView: AnalyticsCartView,\n  CollectionView: AnalyticsCollectionView,\n  CustomView: AnalyticsCustomView,\n  ProductView: AnalyticsProductView,\n  Provider: AnalyticsProvider,\n  SearchView: AnalyticsSearchView,\n};\n\ntype DefaultCart = Promise<CartReturn | null> | CartReturn | null;\n\nexport type AnalyticsContextValueForDoc<UserCart> = {\n  /** A function to tell you the current state of if the user can be tracked by analytics. Defaults to Customer Privacy API's `window.Shopify.customerPrivacy.analyticsProcessingAllowed()`. */\n  canTrack?: () => boolean;\n  /** The current cart state. You can overwrite the type by passing a generic */\n  cart?: UserCart | DefaultCart;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: Record<string, unknown>;\n  /** The previous cart state. You can overwrite the type by passing a generic */\n  prevCart?: UserCart | DefaultCart;\n  /** A function to publish an analytics event. */\n  publish?: AnalyticsContextPublishForDoc;\n  /** A function to register with the analytics provider. It holds the first browser load events until all registered key has executed the supplied `ready` function. [See example register  usage](/docs/api/hydrogen/2024-10/hooks/useanalytics#example-useanalytics.register). */\n  register?: (key: string) => {ready: () => void};\n  /** The shop configuration required to publish events to Shopify. */\n  shop?: Promise<ShopAnalytics | null> | ShopAnalytics | null;\n  /** A function to subscribe to analytics events. */\n  subscribe?: AnalyticsContextSubscribeForDoc;\n};\n\ntype PublishPageView = (event: 'page_viewed', payload: PageViewPayload) => void;\ntype PublishProductView = (\n  event: 'product_viewed',\n  payload: ProductViewPayload,\n) => void;\ntype PublishCollectionView = (\n  event: 'collection_viewed',\n  payload: CollectionViewPayload,\n) => void;\ntype PublishCartView = (event: 'cart_viewed', payload: CartViewPayload) => void;\ntype PublishSearchView = (\n  event: 'search_viewed',\n  payload: SearchViewPayload,\n) => void;\ntype PublishCartUpdated = (\n  event: 'cart_updated',\n  payload: CartUpdatePayload,\n) => void;\ntype PublishProductAddedToCart = (\n  event: 'product_added_to_cart',\n  payload: CartLineUpdatePayload,\n) => void;\ntype PublishProductRemovedFromCart = (\n  event: 'product_removed_from_cart',\n  payload: CartLineUpdatePayload,\n) => void;\ntype PublishCustomEvent = (\n  event: `custom_${string}`,\n  payload: OtherData,\n) => void;\n\nexport type AnalyticsContextPublishForDoc =\n  | PublishPageView\n  | PublishProductView\n  | PublishCollectionView\n  | PublishCartView\n  | PublishSearchView\n  | PublishCartUpdated\n  | PublishProductAddedToCart\n  | PublishProductRemovedFromCart\n  | PublishCustomEvent;\n\ntype SubscribePageView = (\n  event: 'page_viewed',\n  callback: (payload: PageViewPayload) => void,\n) => void;\ntype SubscribeProductView = (\n  event: 'product_viewed',\n  callback: (payload: ProductViewPayload) => void,\n) => void;\ntype SubscribeCollectionView = (\n  event: 'collection_viewed',\n  callback: (payload: CollectionViewPayload) => void,\n) => void;\ntype SubscribeCartView = (\n  event: 'cart_viewed',\n  callback: (payload: CartViewPayload) => void,\n) => void;\ntype SubscribeSearchView = (\n  event: 'search_viewed',\n  callback: (payload: SearchViewPayload) => void,\n) => void;\ntype SubscribeCartUpdated = (\n  event: 'cart_updated',\n  callback: (payload: CartUpdatePayload) => void,\n) => void;\ntype SubscribeProductAddedToCart = (\n  event: 'product_added_to_cart',\n  callback: (payload: CartLineUpdatePayload) => void,\n) => void;\ntype SubscribeProductRemovedFromCart = (\n  event: 'product_removed_from_cart',\n  callback: (payload: CartLineUpdatePayload) => void,\n) => void;\ntype SubscribeCustomEvent = (\n  event: `custom_${string}`,\n  callback: (payload: OtherData) => void,\n) => void;\n\nexport type AnalyticsContextSubscribeForDoc =\n  | SubscribePageView\n  | SubscribeProductView\n  | SubscribeCollectionView\n  | SubscribeCartView\n  | SubscribeSearchView\n  | SubscribeCartUpdated\n  | SubscribeProductAddedToCart\n  | SubscribeProductRemovedFromCart\n  | SubscribeCustomEvent;\n", "import {useLocation} from '@remix-run/react';\nimport {useEffect} from 'react';\nimport {\n  type ShopAnalytics,\n  type AnalyticsProviderProps,\n  useAnalytics,\n} from './AnalyticsProvider';\nimport {CartReturn} from '../cart/queries/cart-types';\nimport {AnalyticsEvent} from './events';\nimport {\n  CartLine,\n  ComponentizableCartLine,\n  Product,\n  ProductVariant,\n} from '@shopify/hydrogen-react/storefront-api-types';\n\nexport type OtherData = {\n  /** Any other data that should be included in the event. */\n  [key: string]: unknown;\n};\n\ntype BasePayload = {\n  /** The shop data passed in from the `AnalyticsProvider`. */\n  shop: ShopAnalytics | null;\n  /** The custom data passed in from the `AnalyticsProvider`. */\n  customData?: AnalyticsProviderProps['customData'];\n};\n\ntype UrlPayload = {\n  /** The url location of when this event is collected. */\n  url: string;\n};\n\ntype ProductPayload = {\n  /** The product id. */\n  id: Product['id'];\n  /** The product title. */\n  title: Product['title'];\n  /** The displaying variant price. */\n  price: ProductVariant['price']['amount'];\n  /** The product vendor. */\n  vendor: Product['vendor'];\n  /** The displaying variant id. */\n  variantId: ProductVariant['id'];\n  /** The displaying variant title. */\n  variantTitle: ProductVariant['title'];\n  /** The quantity of product. */\n  quantity: number;\n  /** The product sku. */\n  sku?: ProductVariant['sku'];\n  /** The product type. */\n  productType?: Product['productType'];\n};\n\ntype ProductsPayload = {\n  /** The products associated with this event. */\n  products: Array<ProductPayload & OtherData>;\n};\n\ntype CollectionPayloadDetails = {\n  /** The collection id. */\n  id: string;\n  /** The collection handle. */\n  handle: string;\n};\n\ntype CollectionPayload = {\n  collection: CollectionPayloadDetails;\n};\n\ntype SearchPayload = {\n  /** The search term used for the search results page */\n  searchTerm: string;\n  /** The search results */\n  searchResults?: any;\n};\n\ntype CartPayload = {\n  /** The current cart state. */\n  cart: CartReturn | null;\n  /** The previous cart state. */\n  prevCart: CartReturn | null;\n};\n\ntype CartLinePayload = {\n  /** The previous state of the cart line that got updated. */\n  prevLine?: CartLine | ComponentizableCartLine;\n  /** The current state of the cart line that got updated. */\n  currentLine?: CartLine | ComponentizableCartLine;\n};\n\n// Event payloads\nexport type CollectionViewPayload = CollectionPayload &\n  UrlPayload &\n  BasePayload;\nexport type ProductViewPayload = ProductsPayload & UrlPayload & BasePayload;\nexport type CartViewPayload = CartPayload & UrlPayload & BasePayload;\nexport type PageViewPayload = UrlPayload & BasePayload;\nexport type SearchViewPayload = SearchPayload & UrlPayload & BasePayload;\n\ntype ViewPayload =\n  | PageViewPayload\n  | ProductViewPayload\n  | CollectionViewPayload\n  | CartViewPayload\n  | SearchViewPayload;\n\nexport type CartUpdatePayload = CartPayload & BasePayload & OtherData;\nexport type CartLineUpdatePayload = CartLinePayload &\n  CartPayload &\n  BasePayload &\n  OtherData;\nexport type CustomEventPayload = BasePayload & OtherData;\n\nexport type EventPayloads =\n  | PageViewPayload\n  | ProductViewPayload\n  | CollectionViewPayload\n  | CartViewPayload\n  | SearchViewPayload\n  | CartUpdatePayload\n  | CartLineUpdatePayload\n  | CustomEventPayload;\n\nexport type EventTypes = (typeof AnalyticsEvent)[keyof typeof AnalyticsEvent];\n\ntype BaseViewProps = {\n  customData?: OtherData;\n};\n\nfunction AnalyticsView(\n  props: BasicViewProps & {type: typeof AnalyticsEvent.PAGE_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: ProductViewProps & {type: typeof AnalyticsEvent.PRODUCT_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: CollectionViewProps & {type: typeof AnalyticsEvent.COLLECTION_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: BasicViewProps & {type: typeof AnalyticsEvent.CART_VIEWED},\n): null;\nfunction AnalyticsView(\n  props: SearchViewProps & {type: typeof AnalyticsEvent.SEARCH_VIEWED},\n): null;\nfunction AnalyticsView(props: CustomViewProps): null;\nfunction AnalyticsView(props: any) {\n  const {type, data = {}, customData} = props;\n  const location = useLocation();\n  const {\n    publish,\n    cart,\n    prevCart,\n    shop,\n    customData: analyticProviderCustomData,\n  } = useAnalytics();\n  const url = location.pathname + location.search;\n\n  let viewPayload: ViewPayload = {\n    ...data,\n    customData: {\n      ...analyticProviderCustomData,\n      ...customData,\n    },\n    cart,\n    prevCart,\n    shop,\n  };\n\n  // Publish page_viewed events when the URL changes\n  useEffect(() => {\n    // don't publish the event until we have the shop\n    if (!shop?.shopId) return;\n\n    viewPayload = {\n      ...viewPayload,\n      url: window.location.href,\n    };\n\n    publish(type, viewPayload);\n  }, [publish, url, shop?.shopId]);\n\n  return null;\n}\n\ntype BasicViewProps = {\n  data?: OtherData;\n  customData?: OtherData;\n};\n\ntype ProductViewProps = {\n  data: ProductsPayload;\n  customData?: OtherData;\n};\n\ntype CollectionViewProps = {\n  data: CollectionPayload;\n  customData?: OtherData;\n};\n\ntype SearchViewProps = {\n  data?: SearchPayload;\n  customData?: OtherData;\n};\n\ntype CustomViewProps = {\n  type: typeof AnalyticsEvent.CUSTOM_EVENT;\n  data?: OtherData;\n  customData?: OtherData;\n};\n\nexport function AnalyticsPageView(props: BasicViewProps) {\n  return <AnalyticsView {...props} type=\"page_viewed\" />;\n}\n\nexport function AnalyticsProductView(props: ProductViewProps) {\n  return <AnalyticsView {...props} type=\"product_viewed\" />;\n}\n\nexport function AnalyticsCollectionView(props: CollectionViewProps) {\n  return <AnalyticsView {...props} type=\"collection_viewed\" />;\n}\n\nexport function AnalyticsCartView(props: BasicViewProps) {\n  return <AnalyticsView {...props} type=\"cart_viewed\" />;\n}\n\nexport function AnalyticsSearchView(props: SearchViewProps) {\n  return <AnalyticsView {...props} type=\"search_viewed\" />;\n}\n\nexport function AnalyticsCustomView(props: CustomViewProps) {\n  return <AnalyticsView {...props} />;\n}\n", "import {\n  AnalyticsEventName,\n  getClientBrowserParameters,\n  sendShopifyAnalytics,\n  useShopifyCookies,\n  type ShopifyPageViewPayload,\n  AnalyticsPageType,\n  type ShopifyAnalyticsProduct,\n  type ShopifyAddToCartPayload,\n} from '@shopify/hydrogen-react';\nimport {type CartReturn} from '../cart/queries/cart-types';\nimport {AnalyticsEvent} from './events';\nimport {useAnalytics, type AnalyticsProviderProps} from './AnalyticsProvider';\nimport {\n  useCustomerPrivacy,\n  getCustomerPrivacy,\n} from '../customer-privacy/ShopifyCustomerPrivacy';\nimport type {\n  PageViewPayload,\n  ProductViewPayload,\n  CollectionViewPayload,\n  CartUpdatePayload,\n  CartLineUpdatePayload,\n  SearchViewPayload,\n} from './AnalyticsView';\nimport {useEffect, useRef, useState} from 'react';\nimport {\n  CartLine,\n  ComponentizableCartLine,\n  Maybe,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {version} from '../../package.json';\n\nfunction getCustomerPrivacyRequired() {\n  const customerPrivacy = getCustomerPrivacy();\n\n  if (!customerPrivacy) {\n    throw new Error(\n      'Shopify Customer Privacy API not available. Must be used within a useEffect. Make sure to load the Shopify Customer Privacy API with useCustomerPrivacy() or <AnalyticsProvider>.',\n    );\n  }\n\n  return customerPrivacy;\n}\n\n/**\n * This component is responsible for sending analytics events to Shopify.\n * It emits the following events:\n * - page_viewed\n * - product_viewed\n * - collection_viewed\n * - search_viewed\n * - product_added_to_cart\n */\nexport function ShopifyAnalytics({\n  consent,\n  onReady,\n  domain,\n}: {\n  consent: AnalyticsProviderProps['consent'];\n  onReady: () => void;\n  domain?: string;\n}) {\n  const {subscribe, register, canTrack} = useAnalytics();\n  const [shopifyReady, setShopifyReady] = useState(false);\n  const [privacyReady, setPrivacyReady] = useState(false);\n  const init = useRef(false);\n  const {checkoutDomain, storefrontAccessToken, language} = consent;\n  const {ready: shopifyAnalyticsReady} = register('Internal_Shopify_Analytics');\n\n  // load customer privacy and (optionally) the privacy banner APIs\n  useCustomerPrivacy({\n    ...consent,\n    locale: language,\n    checkoutDomain: !checkoutDomain ? 'mock.shop' : checkoutDomain,\n    storefrontAccessToken: !storefrontAccessToken\n      ? 'abcdefghijklmnopqrstuvwxyz123456'\n      : storefrontAccessToken,\n    onVisitorConsentCollected: () => setPrivacyReady(true),\n    onReady: () => setPrivacyReady(true),\n  });\n\n  // set up shopify_Y and shopify_S cookies\n  useShopifyCookies({\n    hasUserConsent: privacyReady ? canTrack() : true, // must be initialized with true\n    domain,\n    checkoutDomain,\n  });\n\n  useEffect(() => {\n    if (init.current) return;\n    init.current = true;\n\n    // Views\n    subscribe(AnalyticsEvent.PAGE_VIEWED, pageViewHandler);\n    subscribe(AnalyticsEvent.PRODUCT_VIEWED, productViewHandler);\n    subscribe(AnalyticsEvent.COLLECTION_VIEWED, collectionViewHandler);\n    subscribe(AnalyticsEvent.SEARCH_VIEWED, searchViewHandler);\n\n    // Cart\n    subscribe(AnalyticsEvent.PRODUCT_ADD_TO_CART, productAddedToCartHandler);\n\n    setShopifyReady(true);\n  }, [subscribe]);\n\n  useEffect(() => {\n    if (shopifyReady && privacyReady) {\n      shopifyAnalyticsReady();\n      onReady();\n    }\n  }, [shopifyReady, privacyReady, onReady]);\n\n  return null;\n}\n\nfunction logMissingConfig(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:ShopifyAnalytics] Unable to send Shopify analytics: Missing shop.${fieldName} configuration.`,\n  );\n}\n\nfunction prepareBasePageViewPayload(\n  payload:\n    | PageViewPayload\n    | ProductViewPayload\n    | CollectionViewPayload\n    | SearchViewPayload\n    | CartUpdatePayload,\n): ShopifyPageViewPayload | undefined {\n  const customerPrivacy = getCustomerPrivacyRequired();\n  const hasUserConsent = customerPrivacy.analyticsProcessingAllowed();\n\n  if (!payload?.shop?.shopId) {\n    logMissingConfig('shopId');\n    return;\n  }\n  if (!payload?.shop?.acceptedLanguage) {\n    logMissingConfig('acceptedLanguage');\n    return;\n  }\n  if (!payload?.shop?.currency) {\n    logMissingConfig('currency');\n    return;\n  }\n  if (!payload?.shop?.hydrogenSubchannelId) {\n    logMissingConfig('hydrogenSubchannelId');\n    return;\n  }\n\n  const eventPayload: ShopifyPageViewPayload = {\n    shopifySalesChannel: 'hydrogen',\n    assetVersionId: version,\n    ...payload.shop,\n    hasUserConsent,\n    ...getClientBrowserParameters(),\n    ccpaEnforced: !customerPrivacy.saleOfDataAllowed(),\n    gdprEnforced: !(\n      customerPrivacy.marketingAllowed() &&\n      customerPrivacy.analyticsProcessingAllowed()\n    ),\n    analyticsAllowed: customerPrivacy.analyticsProcessingAllowed(),\n    marketingAllowed: customerPrivacy.marketingAllowed(),\n    saleOfDataAllowed: customerPrivacy.saleOfDataAllowed(),\n  };\n\n  return eventPayload;\n}\n\nfunction prepareBaseCartPayload(\n  payload: CartUpdatePayload,\n  cart: CartReturn | null,\n): ShopifyAddToCartPayload | undefined {\n  if (cart === null) return;\n\n  const pageViewPayload = prepareBasePageViewPayload(payload);\n\n  if (!pageViewPayload) return;\n\n  const eventPayload: ShopifyAddToCartPayload = {\n    ...(pageViewPayload as ShopifyAddToCartPayload),\n    cartId: cart.id,\n  };\n\n  return eventPayload;\n}\n\n// Forwarding view specific event payloads to page view handler\nlet viewPayload = {};\n\nfunction pageViewHandler(payload: PageViewPayload) {\n  const eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.PAGE_VIEW_2,\n    payload: {\n      ...eventPayload,\n      ...viewPayload,\n    },\n  });\n  viewPayload = {};\n}\n\nfunction productViewHandler(payload: ProductViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (\n    eventPayload &&\n    validateProducts({\n      type: 'product',\n      products: payload.products,\n    })\n  ) {\n    const formattedProducts = formatProduct(payload.products);\n    viewPayload = {\n      pageType: AnalyticsPageType.product,\n      resourceId: formattedProducts[0].productGid,\n    };\n    eventPayload = {\n      ...eventPayload,\n      ...viewPayload,\n      products: formatProduct(payload.products),\n    };\n\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.PRODUCT_VIEW,\n      payload: eventPayload,\n    });\n  }\n}\n\nfunction collectionViewHandler(payload: CollectionViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  viewPayload = {\n    pageType: AnalyticsPageType.collection,\n    resourceId: payload.collection.id,\n  };\n  eventPayload = {\n    ...eventPayload,\n    ...viewPayload,\n    collectionHandle: payload.collection.handle,\n    collectionId: payload.collection.id,\n  };\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.COLLECTION_VIEW,\n    payload: eventPayload,\n  });\n}\n\nfunction searchViewHandler(payload: SearchViewPayload) {\n  let eventPayload = prepareBasePageViewPayload(payload);\n\n  if (!eventPayload) return;\n\n  viewPayload = {\n    pageType: AnalyticsPageType.search,\n  };\n  eventPayload = {\n    ...eventPayload,\n    ...viewPayload,\n    searchString: payload.searchTerm,\n  };\n\n  sendShopifyAnalytics({\n    eventName: AnalyticsEventName.SEARCH_VIEW,\n    payload: eventPayload,\n  });\n}\n\nfunction productAddedToCartHandler(payload: CartLineUpdatePayload) {\n  const {cart, currentLine} = payload;\n  const eventPayload = prepareBaseCartPayload(payload, cart);\n\n  if (!eventPayload || !currentLine?.id) return;\n\n  sendCartAnalytics({\n    matchedLine: currentLine,\n    eventPayload,\n  });\n}\n\ntype AnalyticsProduct = {\n  id: string;\n  variantId: string;\n  title: string;\n  variantTitle: string;\n  vendor: string;\n  price: string;\n  quantity: number;\n  productType?: string;\n  sku?: Maybe<string> | undefined;\n};\n\nfunction sendCartAnalytics({\n  matchedLine,\n  eventPayload,\n}: {\n  matchedLine: CartLine | ComponentizableCartLine;\n  eventPayload: ShopifyAddToCartPayload;\n}) {\n  const product: AnalyticsProduct = {\n    id: matchedLine.merchandise.product.id,\n    variantId: matchedLine.merchandise.id,\n    title: matchedLine.merchandise.product.title,\n    variantTitle: matchedLine.merchandise.title,\n    vendor: matchedLine.merchandise.product.vendor,\n    price: matchedLine.merchandise.price.amount,\n    quantity: matchedLine.quantity,\n    productType: matchedLine.merchandise.product.productType,\n    sku: matchedLine.merchandise.sku,\n  };\n  if (\n    validateProducts({\n      type: 'cart',\n      products: [product],\n    })\n  ) {\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.ADD_TO_CART,\n      payload: {\n        ...eventPayload,\n        products: formatProduct([product]),\n      },\n    });\n  }\n}\n\nfunction missingErrorMessage(\n  type: 'cart' | 'product',\n  fieldName: string,\n  isVariantField: boolean,\n  viewKeyName?: string,\n) {\n  if (type === 'cart') {\n    const name = `${\n      isVariantField ? 'merchandise' : 'merchandise.product'\n    }.${fieldName}`;\n    // eslint-disable-next-line no-console\n    console.error(\n      `[h2:error:ShopifyAnalytics] Can't set up cart analytics events because the \\`cart.lines[].${name}\\` value is missing from your GraphQL cart query. In your project, search for where \\`fragment CartLine on CartLine\\` is defined and make sure \\`${name}\\` is part of your cart query. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/lib/fragments.ts#L25-L56.`,\n    );\n  } else {\n    const name = `${viewKeyName || fieldName}`;\n    // eslint-disable-next-line no-console\n    console.error(\n      `[h2:error:ShopifyAnalytics] Can't set up product view analytics events because the \\`${name}\\` is missing from your \\`<Analytics.ProductView>\\`. Make sure \\`${name}\\` is part of your products data prop. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/routes/products.%24handle.tsx#L159-L165.`,\n    );\n  }\n}\n\n// Product expected field and types:\n// variant_id: int, optional\n// product_id: int, optional\n// product_gid: string,\n// name: string,\n// price: float,\n// sku: string, optional\n// brand: string,\n// variant: string,\n// category: string, optional\n// quantity: float\nfunction validateProducts({\n  type,\n  products,\n}: {\n  type: 'cart' | 'product';\n  products: Array<Record<string, unknown>>;\n}) {\n  if (!products || products.length === 0) {\n    missingErrorMessage(type, '', false, 'data.products');\n    return false;\n  }\n\n  products.forEach((product) => {\n    if (!product.id) {\n      missingErrorMessage(type, 'id', false);\n      return false;\n    }\n    if (!product.title) {\n      missingErrorMessage(type, 'title', false);\n      return false;\n    }\n    if (!product.price) {\n      missingErrorMessage(type, 'price.amount', true, 'price');\n      return false;\n    }\n    if (!product.vendor) {\n      missingErrorMessage(type, 'vendor', false);\n      return false;\n    }\n    if (!product.variantId) {\n      missingErrorMessage(type, 'id', true, 'variantId');\n      return false;\n    }\n    if (!product.variantTitle) {\n      missingErrorMessage(type, 'title', true, 'variantTitle');\n      return false;\n    }\n  });\n  return true;\n}\n\nfunction formatProduct(products: Array<AnalyticsProduct>) {\n  return products.map((product) => {\n    const formattedProduct = {\n      productGid: product.id,\n      variantGid: product.variantId,\n      name: product.title,\n      variantName: product.variantTitle,\n      brand: product.vendor,\n      price: product.price,\n      quantity: product.quantity || 1,\n      category: product.productType,\n    } as ShopifyAnalyticsProduct;\n\n    if (product.sku) formattedProduct.sku = product.sku;\n    if (product.productType) formattedProduct.category = product.productType;\n\n    return formattedProduct;\n  });\n}\n", "export const AnalyticsEvent = {\n  // Views\n  PAGE_VIEWED: 'page_viewed' as const,\n  PRODUCT_VIEWED: 'product_viewed' as const,\n  COLLECTION_VIEWED: 'collection_viewed' as const,\n  CART_VIEWED: 'cart_viewed' as const,\n  SEARCH_VIEWED: 'search_viewed' as const,\n\n  // Cart\n  CART_UPDATED: 'cart_updated' as const,\n  PRODUCT_ADD_TO_CART: 'product_added_to_cart' as const,\n  PRODUCT_REMOVED_FROM_CART: 'product_removed_from_cart' as const,\n\n  // Custom\n  CUSTOM_EVENT: `custom_` as `custom_${string}`,\n};\n", "import {useLoadScript} from '@shopify/hydrogen-react';\nimport {\n  CountryCode,\n  LanguageCode,\n} from '@shopify/hydrogen-react/storefront-api-types';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport type ConsentStatus = boolean | undefined;\n\nexport type VisitorConsent = {\n  marketing: ConsentStatus;\n  analytics: ConsentStatus;\n  preferences: ConsentStatus;\n  sale_of_data: ConsentStatus;\n};\n\nexport type VisitorConsentCollected = {\n  analyticsAllowed: boolean;\n  firstPartyMarketingAllowed: boolean;\n  marketingAllowed: boolean;\n  preferencesAllowed: boolean;\n  saleOfDataAllowed: boolean;\n  thirdPartyMarketingAllowed: boolean;\n};\n\nexport type CustomerPrivacyApiLoaded = boolean;\n\nexport type CustomerPrivacyConsentConfig = {\n  checkoutRootDomain: string;\n  storefrontRootDomain?: string;\n  storefrontAccessToken: string;\n  country?: CountryCode;\n  /** The privacyBanner refers to `language` as `locale`  */\n  locale?: LanguageCode;\n};\n\nexport type SetConsentHeadlessParams = VisitorConsent &\n  CustomerPrivacyConsentConfig & {\n    headlessStorefront?: boolean;\n  };\n\n/**\n  Ideally this type should come from the Custoemr Privacy API sdk\n  analyticsProcessingAllowed -\n  currentVisitorConsent\n  doesMerchantSupportGranularConsent\n  firstPartyMarketingAllowed\n  getCCPAConsent\n  getRegulation\n  getShopPrefs\n  getTrackingConsent\n  isRegulationEnforced\n  marketingAllowed\n  preferencesProcessingAllowed\n  saleOfDataAllowed\n  saleOfDataRegion\n  setCCPAConsent\n  setTrackingConsent\n  shouldShowBanner\n  shouldShowCCPABanner\n  shouldShowGDPRBanner\n  thirdPartyMarketingAllowed\n**/\nexport type OriginalCustomerPrivacy = {\n  currentVisitorConsent: () => VisitorConsent;\n  preferencesProcessingAllowed: () => boolean;\n  saleOfDataAllowed: () => boolean;\n  marketingAllowed: () => boolean;\n  analyticsProcessingAllowed: () => boolean;\n  setTrackingConsent: (\n    consent: SetConsentHeadlessParams,\n    callback: (data: {error: string} | undefined) => void,\n  ) => void;\n};\n\nexport type CustomerPrivacy = Omit<\n  OriginalCustomerPrivacy,\n  'setTrackingConsent'\n> & {\n  setTrackingConsent: (\n    consent: VisitorConsent, // we have already applied the headlessStorefront in the override\n    callback: (data: {error: string} | undefined) => void,\n  ) => void;\n};\n\n// NOTE: options is optional because we override these method(s) with  pre-applied options\nexport type PrivacyBanner = {\n  /* Display the privacy banner */\n  loadBanner: (options?: Partial<CustomerPrivacyConsentConfig>) => void;\n  /* Display the consent preferences banner */\n  showPreferences: (options?: Partial<CustomerPrivacyConsentConfig>) => void;\n};\n\nexport interface CustomEventMap {\n  visitorConsentCollected: CustomEvent<VisitorConsentCollected>;\n  customerPrivacyApiLoaded: CustomEvent<CustomerPrivacyApiLoaded>;\n}\n\nexport type CustomerPrivacyApiProps = {\n  /** The production shop checkout domain url.  */\n  checkoutDomain: string;\n  /** The storefront access token for the shop. */\n  storefrontAccessToken: string;\n  /** Whether to load the Shopify privacy banner as configured in Shopify admin. Defaults to true. */\n  withPrivacyBanner?: boolean;\n  /** Country code for the shop. */\n  country?: CountryCode;\n  /** Language code for the shop. */\n  locale?: LanguageCode;\n  /** Callback to be called when visitor consent is collected. */\n  onVisitorConsentCollected?: (consent: VisitorConsentCollected) => void;\n  /** Callback to be call when customer privacy api is ready. */\n  onReady?: () => void;\n};\n\nexport const CONSENT_API =\n  'https://cdn.shopify.com/shopifycloud/consent-tracking-api/v0.1/consent-tracking-api.js';\nexport const CONSENT_API_WITH_BANNER =\n  'https://cdn.shopify.com/shopifycloud/privacy-banner/storefront-banner.js';\n\nfunction logMissingConfig(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:useCustomerPrivacy] Unable to setup Customer Privacy API: Missing consent.${fieldName} configuration.`,\n  );\n}\n\nexport function useCustomerPrivacy(props: CustomerPrivacyApiProps) {\n  const {\n    withPrivacyBanner = false,\n    onVisitorConsentCollected,\n    onReady,\n    ...consentConfig\n  } = props;\n\n  // Load the Shopify customer privacy API with or without the privacy banner\n  // NOTE: We no longer use the status because we need `ready` to be not when the script is loaded\n  // but instead when both `privacyBanner` (optional) and customerPrivacy are loaded in the window\n  useLoadScript(withPrivacyBanner ? CONSENT_API_WITH_BANNER : CONSENT_API, {\n    attributes: {\n      id: 'customer-privacy-api',\n    },\n  });\n\n  const {observing, setLoaded} = useApisLoaded({\n    withPrivacyBanner,\n    onLoaded: onReady,\n  });\n\n  const config = useMemo(() => {\n    const {checkoutDomain, storefrontAccessToken} = consentConfig;\n\n    if (!checkoutDomain) logMissingConfig('checkoutDomain');\n    if (!storefrontAccessToken) logMissingConfig('storefrontAccessToken');\n\n    // validate that the storefront access token is not a server API token\n    if (\n      storefrontAccessToken.startsWith('shpat_') ||\n      storefrontAccessToken.length !== 32\n    ) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[h2:error:useCustomerPrivacy] It looks like you passed a private access token, make sure to use the public token`,\n      );\n    }\n\n    const config: CustomerPrivacyConsentConfig = {\n      checkoutRootDomain: checkoutDomain,\n      storefrontAccessToken,\n      storefrontRootDomain: parseStoreDomain(checkoutDomain),\n      country: consentConfig.country,\n      locale: consentConfig.locale,\n    };\n\n    return config;\n  }, [consentConfig, parseStoreDomain, logMissingConfig]);\n\n  // settings event listeners for visitorConsentCollected\n  useEffect(() => {\n    const consentCollectedHandler = (\n      event: CustomEvent<VisitorConsentCollected>,\n    ) => {\n      if (onVisitorConsentCollected) {\n        onVisitorConsentCollected(event.detail);\n      }\n    };\n\n    document.addEventListener(\n      'visitorConsentCollected',\n      consentCollectedHandler,\n    );\n\n    return () => {\n      document.removeEventListener(\n        'visitorConsentCollected',\n        consentCollectedHandler,\n      );\n    };\n  }, [onVisitorConsentCollected]);\n\n  // monitor when the `privacyBanner` is in the window and override it's methods with config\n  // pre-applied versions\n  useEffect(() => {\n    if (!withPrivacyBanner || observing.current.privacyBanner) return;\n    observing.current.privacyBanner = true;\n\n    let customPrivacyBanner: PrivacyBanner | undefined =\n      window.privacyBanner || undefined;\n\n    const privacyBannerWatcher = {\n      configurable: true,\n      get() {\n        return customPrivacyBanner;\n      },\n      set(value: unknown) {\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          'showPreferences' in value &&\n          'loadBanner' in value\n        ) {\n          const privacyBanner = value as PrivacyBanner;\n\n          // auto load the banner if applicable\n          privacyBanner.loadBanner(config);\n\n          // overwrite the privacyBanner methods\n          customPrivacyBanner = overridePrivacyBannerMethods({\n            privacyBanner,\n            config,\n          });\n\n          // set the loaded state for the privacyBanner\n          setLoaded.privacyBanner();\n          emitCustomerPrivacyApiLoaded();\n        }\n      },\n    };\n\n    Object.defineProperty(window, 'privacyBanner', privacyBannerWatcher);\n  }, [\n    withPrivacyBanner,\n    config,\n    overridePrivacyBannerMethods,\n    setLoaded.privacyBanner,\n  ]);\n\n  // monitor when the Shopify.customerPrivacy is added to the window and override the\n  // setTracking consent method with the config pre-applied\n  useEffect(() => {\n    if (observing.current.customerPrivacy) return;\n    observing.current.customerPrivacy = true;\n\n    let customCustomerPrivacy: CustomerPrivacy | null = null;\n    let customShopify: {customerPrivacy: CustomerPrivacy} | undefined | object =\n      window.Shopify || undefined;\n\n    // monitor for when window.Shopify = {} is first set\n    Object.defineProperty(window, 'Shopify', {\n      configurable: true,\n      get() {\n        return customShopify;\n      },\n      set(value: unknown) {\n        // monitor for when window.Shopify = {} is first set\n        if (\n          typeof value === 'object' &&\n          value !== null &&\n          Object.keys(value).length === 0\n        ) {\n          customShopify = value as object;\n\n          // monitor for when window.Shopify.customerPrivacy is set\n          Object.defineProperty(window.Shopify, 'customerPrivacy', {\n            configurable: true,\n            get() {\n              return customCustomerPrivacy;\n            },\n            set(value: unknown) {\n              if (\n                typeof value === 'object' &&\n                value !== null &&\n                'setTrackingConsent' in value\n              ) {\n                const customerPrivacy = value as CustomerPrivacy;\n\n                // overwrite the tracking consent method\n                customCustomerPrivacy = {\n                  ...customerPrivacy,\n                  setTrackingConsent: overrideCustomerPrivacySetTrackingConsent(\n                    {customerPrivacy, config},\n                  ),\n                };\n\n                customShopify = {\n                  ...customShopify,\n                  customerPrivacy: customCustomerPrivacy,\n                };\n\n                setLoaded.customerPrivacy();\n                emitCustomerPrivacyApiLoaded();\n              }\n            },\n          });\n        }\n      },\n    });\n  }, [\n    config,\n    overrideCustomerPrivacySetTrackingConsent,\n    setLoaded.customerPrivacy,\n  ]);\n\n  // return the customerPrivacy and privacyBanner (optional) modified APIs\n  const result = {\n    customerPrivacy: getCustomerPrivacy(),\n  } as {\n    customerPrivacy: CustomerPrivacy | null;\n    privacyBanner?: PrivacyBanner | null;\n  };\n\n  if (withPrivacyBanner) {\n    result.privacyBanner = getPrivacyBanner();\n  }\n\n  return result;\n}\n\nlet hasEmitted = false;\nfunction emitCustomerPrivacyApiLoaded() {\n  if (hasEmitted) return;\n  hasEmitted = true;\n  const event = new CustomEvent('shopifyCustomerPrivacyApiLoaded');\n  document.dispatchEvent(event);\n}\n\nfunction useApisLoaded({\n  withPrivacyBanner,\n  onLoaded,\n}: {\n  withPrivacyBanner: boolean;\n  onLoaded?: () => void;\n}) {\n  // used to help run the watchers only once\n  const observing = useRef({customerPrivacy: false, privacyBanner: false});\n\n  // [customerPrivacy, privacyBanner]\n  const [apisLoaded, setApisLoaded] = useState(\n    withPrivacyBanner ? [false, false] : [false],\n  );\n\n  // combined loaded state for both APIs\n  const loaded = apisLoaded.every(Boolean);\n\n  const setLoaded = {\n    customerPrivacy: () => {\n      if (withPrivacyBanner) {\n        setApisLoaded((prev) => [true, prev[1]]);\n      } else {\n        setApisLoaded(() => [true]);\n      }\n    },\n    privacyBanner: () => {\n      if (!withPrivacyBanner) {\n        return;\n      }\n      setApisLoaded((prev) => [prev[0], true]);\n    },\n  };\n\n  useEffect(() => {\n    if (loaded && onLoaded) {\n      // both APIs are loaded in the window\n      onLoaded();\n    }\n  }, [loaded, onLoaded]);\n\n  return {observing, setLoaded};\n}\n\n/**\n * Extracts the root domain from the checkout domain otherwise returns the checkout domain.\n */\nfunction parseStoreDomain(checkoutDomain: string) {\n  if (typeof window === 'undefined') return;\n\n  const host = window.document.location.host;\n  const checkoutDomainParts = checkoutDomain.split('.').reverse();\n  const currentDomainParts = host.split('.').reverse();\n  const sameDomainParts: Array<string> = [];\n  checkoutDomainParts.forEach((part, index) => {\n    if (part === currentDomainParts[index]) {\n      sameDomainParts.push(part);\n    }\n  });\n\n  return sameDomainParts.reverse().join('.');\n}\n\n/**\n * Overrides the customerPrivacy.setTrackingConsent method to include the headless storefront configuration.\n */\nfunction overrideCustomerPrivacySetTrackingConsent({\n  customerPrivacy,\n  config,\n}: {\n  customerPrivacy: OriginalCustomerPrivacy;\n  config: CustomerPrivacyConsentConfig;\n}) {\n  // Override the setTrackingConsent method to include the headless storefront configuration\n  const original = customerPrivacy.setTrackingConsent;\n  const {locale, country, ...rest} = config;\n\n  function updatedSetTrackingConsent(\n    consent: VisitorConsent,\n    callback: (data: {error: string} | undefined) => void,\n  ) {\n    original(\n      {\n        ...rest,\n        headlessStorefront: true,\n        ...consent,\n      },\n      callback,\n    );\n  }\n  return updatedSetTrackingConsent;\n}\n\n/**\n * Overrides the privacyBanner methods to include the config\n */\nfunction overridePrivacyBannerMethods({\n  privacyBanner,\n  config,\n}: {\n  privacyBanner: PrivacyBanner;\n  config: CustomerPrivacyConsentConfig;\n}) {\n  const originalLoadBanner = privacyBanner.loadBanner;\n  const originalShowPreferences = privacyBanner.showPreferences;\n\n  function loadBanner(userConfig?: Partial<CustomerPrivacyConsentConfig>) {\n    if (typeof userConfig === 'object') {\n      originalLoadBanner({...config, ...userConfig});\n      return;\n    }\n    originalLoadBanner(config);\n  }\n\n  function showPreferences(userConfig?: Partial<CustomerPrivacyConsentConfig>) {\n    if (typeof userConfig === 'object') {\n      originalShowPreferences({...config, ...userConfig});\n      return;\n    }\n    originalShowPreferences(config);\n  }\n  return {loadBanner, showPreferences} as PrivacyBanner;\n}\n\n/*\n * Returns Shopify's customerPrivacy methods if loaded in the `window` object.\n * @returns CustomerPrivacy | null\n * @example\n * ```ts\n * const customerPrivacy = getCustomerPrivacy()\n *\n * if (customerPrivacy) {\n *  // get the current visitor consent\n *  const visitorConsent = customerPrivacy.currentVisitorConsent()\n *\n *  // set the tracking consent\n *  customerPrivacy.setTrackingConsent({marketing: true...}, () => {\n *    // do something after the consent is set\n *  })\n *\n *  // check if marketing is allowed\n *  const marketingAllowed = customerPrivacy.marketingAllowed()\n *  console.log(marketingAllowed)\n *\n *  // check if analytics is allowed\n *  const analyticsAllowed = customerPrivacy.analyticsProcessingAllowed()\n *  console.log(analyticsAllowed)\n *\n *  // check if preferences are allowed\n *  const preferencesAllowed = customerPrivacy.preferencesProcessingAllowed()\n *  console.log(preferencesAllowed)\n *\n *  // check if sale of data is allowed\n *  const saleOfDataAllowed = customerPrivacy.saleOfDataAllowed()\n *\n *  // check if third party marketing is allowed\n *  const thirdPartyMarketingAllowed = customerPrivacy.thirdPartyMarketingAllowed()\n *\n *  // check if first party marketing is allowed\n *  const firstPartyMarketingAllowed = customerPrivacy.firstPartyMarketingAllowed()\n *\n *  // check if the banner should be shown\n *  const shouldShowBanner = customerPrivacy.shouldShowBanner()\n *\n *  // check if the GDPR banner should be shown\n *  const shouldShowGDPRBanner = customerPrivacy.shouldShowGDPRBanner()\n *\n *  // check if the CCPA banner should be shown\n *  const shouldShowCCPABanner = customerPrivacy.shouldShowCCPABanner()\n *\n *  // check if the regulation is enforced\n *  const isRegulationEnforced = customerPrivacy.isRegulationEnforced()\n *\n *  // get the regulation\n *  const regulation = customerPrivacy.getRegulation()\n *\n *  // get the sale of data region\n *  const saleOfDataRegion = customerPrivacy.saleOfDataRegion()\n *\n *  // get the shop preferences\n *  const shopPrefs = customerPrivacy.getShopPrefs()\n *\n *  // get the tracking consent\n *  const trackingConsent = customerPrivacy.getTrackingConsent()\n *\n *  // get the CCPA consent\n *  const ccpaConsent = customerPrivacy.getCCPAConsent()\n *\n *  // check if the merchant supports granular consent\n *  const doesMerchantSupportGranularConsent = customerPrivacy.doesMerchantSupportGranularConsent()\n * }\n * ```\n */\nexport function getCustomerPrivacy() {\n  try {\n    return window.Shopify && window.Shopify.customerPrivacy\n      ? (window.Shopify?.customerPrivacy as CustomerPrivacy)\n      : null;\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Returns Shopify's privacyBanner methods if loaded in the `window` object.\n * @returns PrivacyBanner | null\n * @example\n * ```ts\n *  const privacyBanner = getPrivacyBanner()\n *\n *  if (privacyBanner) {\n *   // show the banner\n *   privacyBanner.loadBanner()\n *\n *    // show the preferences\n *    privacyBanner.showPreferences()\n *   }\n * ```\n */\nexport function getPrivacyBanner() {\n  try {\n    return window && window?.privacyBanner\n      ? (window.privacyBanner as PrivacyBanner)\n      : null;\n  } catch (e) {\n    return null;\n  }\n}\n", "{\n  \"name\": \"@shopify/hydrogen\",\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"@shopify:registry\": \"https://registry.npmjs.org\"\n  },\n  \"type\": \"module\",\n  \"version\": \"2024.10.1\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/production/index.js\",\n  \"types\": \"dist/production/index.d.ts\",\n  \"sideEffects\": false,\n  \"scripts\": {\n    \"build\": \"tsup --clean\",\n    \"dev\": \"tsup --watch ./src --watch ../../node_modules/@shopify/hydrogen-react/dist/browser-prod/index.mjs\",\n    \"typecheck\": \"tsc --noEmit\",\n    \"test\": \"vitest run\",\n    \"prepack\": \"npm run build\",\n    \"test:watch\": \"vitest\",\n    \"build-docs\": \"sh ./docs/build-docs.sh && npm run format\",\n    \"format\": \"prettier --write \\\"{src,docs}/**/*\\\" --ignore-unknown\",\n    \"preview-docs\": \"npm run dev --prefix ../../docs/preview\"\n  },\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/production/index.d.ts\",\n      \"module\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      },\n      \"require\": \"./dist/index.cjs\",\n      \"import\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      },\n      \"default\": {\n        \"development\": \"./dist/development/index.js\",\n        \"default\": \"./dist/production/index.js\"\n      }\n    },\n    \"./vite\": {\n      \"types\": \"./dist/vite/plugin.d.ts\",\n      \"default\": \"./dist/vite/plugin.js\"\n    },\n    \"./storefront-api-types\": \"./dist/storefront-api-types.d.ts\",\n    \"./storefront.schema.json\": \"./dist/storefront.schema.json\",\n    \"./customer-account-api-types\": \"./dist/customer-account-api-types.d.ts\",\n    \"./customer-account.schema.json\": \"./dist/customer-account.schema.json\",\n    \"./package.json\": \"./package.json\"\n  },\n  \"typesVersions\": {\n    \"*\": {\n      \"storefront-api-types\": [\n        \"./dist/storefront-api-types.d.ts\"\n      ],\n      \"customer-account-api-types\": [\n        \"./dist/customer-account-api-types.d.ts\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"dependencies\": {\n    \"@shopify/hydrogen-react\": \"2024.10.1\",\n    \"content-security-policy-builder\": \"^2.2.0\",\n    \"source-map-support\": \"^0.5.21\",\n    \"type-fest\": \"^4.26.1\",\n    \"use-resize-observer\": \"^9.1.0\",\n    \"worktop\": \"^0.7.3\"\n  },\n  \"devDependencies\": {\n    \"@remix-run/dev\": \"^2.13.1\",\n    \"@remix-run/react\": \"^2.13.1\",\n    \"@remix-run/server-runtime\": \"^2.13.1\",\n    \"@shopify/generate-docs\": \"0.16.2\",\n    \"@shopify/hydrogen-codegen\": \"*\",\n    \"@testing-library/jest-dom\": \"^5.17.0\",\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@types/source-map-support\": \"^0.5.10\",\n    \"formdata-polyfill\": \"^4.0.10\",\n    \"happy-dom\": \"^8.9.0\",\n    \"react\": \"^18.2.0\",\n    \"schema-dts\": \"^1.1.0\",\n    \"vitest\": \"^1.0.4\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2.10.0\",\n    \"@remix-run/server-runtime\": \"^2.10.0\",\n    \"react\": \"^18.2.0\",\n    \"vite\": \"^5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"vite\": {\n      \"optional\": true\n    }\n  }\n}\n", "import {useEffect, useRef} from 'react';\nimport {\n  useAnalytics,\n  type AnalyticsProviderProps,\n  type Carts,\n} from './AnalyticsProvider';\nimport {type CartUpdatePayload} from './AnalyticsView';\nimport {flattenConnection} from '@shopify/hydrogen-react';\n\nfunction logMissingField(fieldName: string) {\n  // eslint-disable-next-line no-console\n  console.error(\n    `[h2:error:CartAnalytics] Can't set up cart analytics events because the \\`cart.${fieldName}\\` value is missing from your GraphQL cart query. In your project, search for where \\`fragment CartApiQuery on Cart\\` is defined and make sure \\`${fieldName}\\` is part of your cart query. Check the Hydrogen Skeleton template for reference: https://github.com/Shopify/hydrogen/blob/main/templates/skeleton/app/lib/fragments.ts#L59.`,\n  );\n}\n\ntype CartStorage = {\n  updatedAt: string;\n  id: string;\n};\n\nexport function CartAnalytics({\n  cart: currentCart,\n  setCarts,\n}: {\n  cart: AnalyticsProviderProps['cart'];\n  setCarts: React.Dispatch<React.SetStateAction<Carts>>;\n}) {\n  const {publish, shop, customData, canTrack, cart, prevCart} = useAnalytics();\n  const lastEventId = useRef<string | null>(null);\n\n  // resolve the cart that could have been deferred\n  useEffect(() => {\n    if (!currentCart) return;\n\n    Promise.resolve(currentCart).then((updatedCart) => {\n      if (updatedCart && updatedCart.lines) {\n        if (!updatedCart.id) {\n          logMissingField('id');\n          return;\n        }\n        if (!updatedCart.updatedAt) {\n          logMissingField('updatedAt');\n          return;\n        }\n      }\n\n      setCarts(({cart, prevCart}: Carts) => {\n        return updatedCart?.updatedAt !== cart?.updatedAt\n          ? {cart: updatedCart, prevCart: cart}\n          : {cart, prevCart};\n      });\n    });\n    return () => {};\n  }, [setCarts, currentCart]);\n\n  useEffect(() => {\n    if (!cart || !cart?.updatedAt) return;\n    if (cart?.updatedAt === prevCart?.updatedAt) return;\n\n    let cartLastUpdatedAt: CartStorage | null;\n    try {\n      cartLastUpdatedAt = JSON.parse(\n        localStorage.getItem('cartLastUpdatedAt') || '',\n      );\n    } catch (e) {\n      cartLastUpdatedAt = null;\n    }\n\n    if (\n      cart.id === cartLastUpdatedAt?.id &&\n      cart.updatedAt === cartLastUpdatedAt?.updatedAt\n    )\n      return;\n\n    const payload: CartUpdatePayload = {\n      eventTimestamp: Date.now(),\n      cart,\n      prevCart,\n      shop,\n      customData,\n    };\n\n    // prevent duplicate events\n    // TODO: add cart id check\n    if (cart.updatedAt === lastEventId.current) return;\n    lastEventId.current = cart.updatedAt;\n\n    publish('cart_updated', payload);\n\n    // We store the last cart update timestamp in localStorage to be able\n    // to detect if the cart has been updated since the last page render\n    // this prevents sending duplicate cart_updated events on first render\n    localStorage.setItem(\n      'cartLastUpdatedAt',\n      JSON.stringify({\n        id: cart.id,\n        updatedAt: cart.updatedAt,\n      }),\n    );\n\n    const previousCartLines = prevCart?.lines\n      ? flattenConnection(prevCart?.lines)\n      : [];\n    const currentCartLines = cart.lines ? flattenConnection(cart.lines) : [];\n\n    // Detect quantity changes and missing cart lines\n    previousCartLines?.forEach((prevLine) => {\n      const matchedLineId = currentCartLines.filter(\n        (line) => prevLine.id === line.id,\n      );\n      if (matchedLineId?.length === 1) {\n        const matchedLine = matchedLineId[0];\n        if (prevLine.quantity < matchedLine.quantity) {\n          publish('product_added_to_cart', {\n            ...payload,\n            prevLine,\n            currentLine: matchedLine,\n          });\n        } else if (prevLine.quantity > matchedLine.quantity) {\n          publish('product_removed_from_cart', {\n            ...payload,\n            prevLine,\n            currentLine: matchedLine,\n          });\n        }\n      } else {\n        publish('product_removed_from_cart', {\n          ...payload,\n          prevLine,\n        });\n      }\n    });\n\n    // Detect added to cart\n    currentCartLines?.forEach((line) => {\n      const matchedLineId = previousCartLines.filter(\n        (previousLine) => line.id === previousLine.id,\n      );\n      if (!matchedLineId || matchedLineId.length === 0) {\n        publish('product_added_to_cart', {\n          ...payload,\n          currentLine: line,\n        });\n      }\n    });\n  }, [cart, prevCart, publish, shop, customData, canTrack]);\n\n  return null;\n}\n", "import {parseGid, useLoadScript} from '@shopify/hydrogen-react';\nimport {ShopAnalytics, useAnalytics} from './AnalyticsProvider';\nimport {AnalyticsEvent} from './events';\nimport {useEffect, useRef} from 'react';\n\ndeclare global {\n  interface Window {\n    PerfKit: {\n      navigate: () => void;\n      setPageType: (pageType: string) => void;\n    };\n  }\n}\n\n// Pin to a version that have SPA support.\nconst PERF_KIT_URL =\n  'https://cdn.shopify.com/shopifycloud/perf-kit/shopify-perf-kit-1.0.1.min.js';\n\nexport function PerfKit({shop}: {shop: ShopAnalytics}) {\n  const loadedEvent = useRef(false);\n  const {subscribe, register} = useAnalytics();\n  const {ready} = register('Internal_Shopify_Perf_Kit');\n\n  const scriptStatus = useLoadScript(PERF_KIT_URL, {\n    attributes: {\n      id: 'perfkit',\n      'data-application': 'hydrogen',\n      'data-shop-id': parseGid(shop.shopId).id.toString(),\n      'data-storefront-id': shop.hydrogenSubchannelId,\n      'data-monorail-region': 'global',\n      'data-spa-mode': 'true',\n      'data-resource-timing-sampling-rate': '100',\n    },\n  });\n\n  useEffect(() => {\n    if (scriptStatus !== 'done' || loadedEvent.current) return;\n    loadedEvent.current = true;\n\n    subscribe(AnalyticsEvent.PAGE_VIEWED, () => {\n      window.PerfKit?.navigate();\n    });\n    subscribe(AnalyticsEvent.PRODUCT_VIEWED, () => {\n      window.PerfKit?.setPageType('product');\n    });\n    subscribe(AnalyticsEvent.COLLECTION_VIEWED, () => {\n      window.PerfKit?.setPageType('collection');\n    });\n    subscribe(AnalyticsEvent.SEARCH_VIEWED, () => {\n      window.PerfKit?.setPageType('search');\n    });\n    subscribe(AnalyticsEvent.CART_VIEWED, () => {\n      window.PerfKit?.setPageType('cart');\n    });\n\n    ready();\n  }, [subscribe, ready, scriptStatus]);\n  return null;\n}\n", "export * from './storefront';\nexport {type CacheKey} from './cache/run-with-cache';\nexport {createWithCache, type WithCache} from './cache/create-with-cache';\nexport {\n  CacheCustom,\n  CacheLong,\n  CacheNone,\n  CacheShort,\n  generateCacheControlHeader,\n  type CachingStrategy,\n  type NoStoreStrategy,\n} from './cache/strategies';\nexport {InMemoryCache} from './cache/in-memory';\n\nexport {storefrontRedirect} from './routing/redirect';\nexport {graphiqlLoader} from './routing/graphiql';\nexport {Seo} from './seo/seo';\nexport {getSeoMeta} from './seo/getSeoMeta';\nexport {type SeoConfig} from './seo/generate-seo-tags';\nexport type {SeoHandleFunction} from './seo/seo';\nexport {Pagination, getPaginationVariables} from './pagination/Pagination';\nexport {createCustomerAccountClient} from './customer/customer';\nexport type {\n  CustomerAccount,\n  CustomerAccountQueries,\n  CustomerAccountMutations,\n} from './customer/types';\nexport {changelogHandler} from './changelogHandler';\n\nexport {\n  CartForm,\n  type CartActionInput,\n  type OptimisticCartLineInput,\n} from './cart/CartForm';\nexport {cartCreateDefault} from './cart/queries/cartCreateDefault';\nexport {cartGetDefault} from './cart/queries/cartGetDefault';\nexport {cartLinesAddDefault} from './cart/queries/cartLinesAddDefault';\nexport {cartLinesUpdateDefault} from './cart/queries/cartLinesUpdateDefault';\nexport {cartLinesRemoveDefault} from './cart/queries/cartLinesRemoveDefault';\nexport {cartDiscountCodesUpdateDefault} from './cart/queries/cartDiscountCodesUpdateDefault';\nexport {cartGiftCardCodesUpdateDefault} from './cart/queries/cartGiftCardCodeUpdateDefault';\nexport {cartBuyerIdentityUpdateDefault} from './cart/queries/cartBuyerIdentityUpdateDefault';\nexport {cartNoteUpdateDefault} from './cart/queries/cartNoteUpdateDefault';\nexport {cartSelectedDeliveryOptionsUpdateDefault} from './cart/queries/cartSelectedDeliveryOptionsUpdateDefault';\nexport {cartAttributesUpdateDefault} from './cart/queries/cartAttributesUpdateDefault';\nexport {cartMetafieldsSetDefault} from './cart/queries/cartMetafieldsSetDefault';\nexport {cartMetafieldDeleteDefault} from './cart/queries/cartMetafieldDeleteDefault';\nexport {cartGetIdDefault} from './cart/cartGetIdDefault';\nexport {cartSetIdDefault, type CookieOptions} from './cart/cartSetIdDefault';\nexport {\n  type HydrogenCartCustom,\n  type HydrogenCart,\n  createCartHandler,\n} from './cart/createCartHandler';\nexport type {\n  MetafieldWithoutOwnerId,\n  CartReturn,\n  CartQueryDataReturn,\n  CartQueryOptions,\n  CartQueryReturn,\n} from './cart/queries/cart-types';\n\nexport {\n  useOptimisticCart,\n  type OptimisticCart,\n  type OptimisticCartLine,\n} from './cart/optimistic/useOptimisticCart';\n\nexport {\n  VariantSelector,\n  getSelectedProductOptions,\n} from './product/VariantSelector';\n\nexport {useOptimisticVariant} from './product/useOptimisticVariant';\n\nexport type {\n  VariantOption,\n  VariantOptionValue,\n} from './product/VariantSelector';\n\nexport {createContentSecurityPolicy, useNonce} from './csp/csp';\nexport {Script} from './csp/Script';\n\nexport {\n  useOptimisticData,\n  OptimisticInput,\n} from './optimistic-ui/optimistic-ui';\n\nexport {ShopPayButton} from './shop/ShopPayButton';\n\nexport {\n  Analytics,\n  useAnalytics,\n  getShopAnalytics,\n  type ShopAnalytics,\n} from './analytics-manager/AnalyticsProvider';\nexport {AnalyticsEvent} from './analytics-manager/events';\nexport {\n  type PageViewPayload,\n  type ProductViewPayload,\n  type CollectionViewPayload,\n  type CartViewPayload,\n  type SearchViewPayload,\n  type CartUpdatePayload,\n  type CartLineUpdatePayload,\n} from './analytics-manager/AnalyticsView';\n\nexport {\n  type ConsentStatus,\n  type VisitorConsent,\n  type VisitorConsentCollected,\n  type CustomerPrivacyConsentConfig,\n  type SetConsentHeadlessParams,\n  type CustomerPrivacy,\n  type PrivacyBanner,\n  type CustomEventMap,\n  type CustomerPrivacyApiProps,\n  useCustomerPrivacy,\n} from './customer-privacy/ShopifyCustomerPrivacy';\n\nexport {\n  AnalyticsEventName,\n  AnalyticsPageType,\n  ExternalVideo,\n  flattenConnection,\n  getClientBrowserParameters,\n  getShopifyCookies,\n  Image,\n  IMAGE_FRAGMENT,\n  MediaFile,\n  ModelViewer,\n  Money,\n  parseGid,\n  parseMetafield,\n  sendShopifyAnalytics,\n  ShopifySalesChannel,\n  storefrontApiCustomScalars,\n  customerAccountApiCustomScalars,\n  useLoadScript,\n  useMoney,\n  useShopifyCookies,\n  Video,\n  isOptionValueCombinationInEncodedVariant,\n  decodeEncodedVariant,\n  getProductOptions,\n  getAdjacentAndFirstAvailableVariants,\n  mapSelectedProductOptionToObject,\n  useSelectedOptionInUrlParam,\n} from '@shopify/hydrogen-react';\nexport {RichText} from './RichText';\n\nexport type {\n  ClientBrowserParameters,\n  MappedProductOptions,\n  ParsedMetafields,\n  ShopifyAddToCart,\n  ShopifyAddToCartPayload,\n  // TODO: document this change\n  ShopifyAnalytics as SendShopifyAnalyticsEvent,\n  ShopifyAnalyticsPayload,\n  ShopifyAnalyticsProduct,\n  ShopifyCookies,\n  ShopifyPageView,\n  ShopifyPageViewPayload,\n  StorefrontApiResponse,\n  StorefrontApiResponseError,\n  StorefrontApiResponseOk,\n  StorefrontApiResponseOkPartial,\n  StorefrontApiResponsePartial,\n} from '@shopify/hydrogen-react';\n\nexport type {HydrogenSessionData, HydrogenSession, HydrogenEnv} from './types';\n\nexport {\n  createHydrogenContext,\n  type HydrogenContext,\n} from './createHydrogenContext';\n\nexport {getSitemapIndex, getSitemap} from './sitemap/sitemap';\n", "import {Link} from '@remix-run/react';\nimport {RichText as OriginalRichText} from '@shopify/hydrogen-react';\n\nexport const RichText: typeof OriginalRichText = function (props) {\n  return (\n    <OriginalRichText\n      {...props}\n      components={{\n        link: ({node}) => (\n          <Link\n            to={node.url}\n            title={node.title}\n            target={node.target}\n            prefetch=\"intent\"\n          >\n            {node.children}\n          </Link>\n        ),\n        ...props.components,\n      }}\n    />\n  );\n};\n", "import {\n  createStorefrontClient,\n  type CreateStorefrontClientOptions,\n  type StorefrontClient,\n  type I18nBase,\n} from './storefront';\nimport {createCustomerAccountClient} from './customer/customer';\nimport {\n  type CustomerAccountOptions,\n  type CustomerAccount,\n} from './customer/types';\nimport {\n  createCartHandler,\n  type CartHandlerOptions,\n  type CustomMethodsBase,\n  type HydrogenCart,\n  type HydrogenCartCustom,\n} from './cart/createCartHandler';\nimport {cartGetIdDefault} from './cart/cartGetIdDefault';\nimport {cartSetIdDefault} from './cart/cartSetIdDefault';\nimport type {\n  HydrogenEnv,\n  WaitUntil,\n  HydrogenSession,\n  StorefrontHeaders,\n} from './types';\nimport {type CrossRuntimeRequest, getHeader} from './utils/request';\n\nexport type HydrogenContextOptions<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> = {\n  /* Environment variables from the fetch function */\n  env: TEnv;\n  /* Request object from the fetch function */\n  request: CrossRuntimeRequest;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n  /** Storefront client overwrite options. See documentation for createStorefrontClient for more information. */\n  storefront?: {\n    /** Storefront API headers. Default values set from request header.  */\n    headers?: CreateStorefrontClientOptions<TI18n>['storefrontHeaders'];\n    /** Override the Storefront API version for this query. */\n    apiVersion?: CreateStorefrontClientOptions<TI18n>['storefrontApiVersion'];\n  };\n  /** Customer Account client overwrite options. See documentation for createCustomerAccountClient for more information. */\n  customerAccount?: {\n    /** Override the version of the API */\n    apiVersion?: CustomerAccountOptions['customerApiVersion'];\n    /** This is the route in your app that authorizes the customer after logging in. Make sure to call `customer.authorize()` within the loader on this route. It defaults to `/account/authorize`. */\n    authUrl?: CustomerAccountOptions['authUrl'];\n    /** Use this method to overwrite the default logged-out redirect behavior. The default handler [throws a redirect](https://remix.run/docs/en/main/utils/redirect#:~:text=!session) to `/account/login` with current path as `return_to` query param. */\n    customAuthStatusHandler?: CustomerAccountOptions['customAuthStatusHandler'];\n    /** UNSTABLE feature, this will eventually goes away. If true then we will exchange a customerAccessToken for a storefrontCustomerAccessToken. */\n    unstableB2b?: CustomerAccountOptions['unstableB2b'];\n  };\n  /** Cart handler overwrite options. See documentation for createCartHandler for more information. */\n  cart?: {\n    /** A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`. */\n    getId?: CartHandlerOptions['getCartId'];\n    /** A function that sets the cart ID. */\n    setId?: CartHandlerOptions['setCartId'];\n    /**\n     * The cart query fragment used by `cart.get()`.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    queryFragment?: CartHandlerOptions['cartQueryFragment'];\n    /**\n     * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    mutateFragment?: CartHandlerOptions['cartMutateFragment'];\n    /**\n     * Define custom methods or override existing methods for your cart API instance.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-custom-methods) in the documentation.\n     */\n    customMethods?: TCustomMethods;\n  };\n};\n\nexport interface HydrogenContext<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> {\n  /** A GraphQL client for querying the [Storefront API](https://shopify.dev/docs/api/storefront). */\n  storefront: StorefrontClient<TI18n>['storefront'];\n  /** A GraphQL client for querying the [Customer Account API](https://shopify.dev/docs/api/customer). It also provides methods to authenticate and check if the user is logged in. */\n  customerAccount: CustomerAccount;\n  /** A collection of utilities used to interact with the cart. */\n  cart: TCustomMethods extends CustomMethodsBase\n    ? HydrogenCartCustom<TCustomMethods>\n    : HydrogenCart;\n  /* Request object from the fetch function */\n  env: TEnv;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n}\n\n// Since HydrogenContext uses a conditional type with a free type parameter,\n// TS cannot definitively determine what the return type should be within the function body\n// HydrogenContextOverloads is use to restore type assertions so we don't need to do type casting\nexport interface HydrogenContextOverloads<\n  TSession extends HydrogenSession,\n  TCustomMethods extends CustomMethodsBase,\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> {\n  storefront: StorefrontClient<TI18n>['storefront'];\n  customerAccount: CustomerAccount;\n  cart: HydrogenCart | HydrogenCartCustom<TCustomMethods>;\n  env: TEnv;\n  waitUntil?: WaitUntil;\n  session: TSession;\n}\n\n// type for createHydrogenContext methods\nexport function createHydrogenContext<\n  TSession extends HydrogenSession = HydrogenSession,\n  TCustomMethods extends CustomMethodsBase | undefined = {},\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n>(\n  options: HydrogenContextOptions<TSession, TCustomMethods, TI18n, TEnv>,\n): HydrogenContext<TSession, TCustomMethods, TI18n, TEnv>;\n\nexport function createHydrogenContext<\n  TSession extends HydrogenSession,\n  TCustomMethods extends CustomMethodsBase,\n  TI18n extends I18nBase,\n  TEnv extends HydrogenEnv = Env,\n>(\n  options: HydrogenContextOptions<TSession, TCustomMethods, TI18n, TEnv>,\n): HydrogenContextOverloads<TSession, TCustomMethods, TI18n, TEnv> {\n  const {\n    env,\n    request,\n    cache,\n    waitUntil,\n    i18n,\n    session,\n    logErrors,\n    storefront: storefrontOptions = {},\n    customerAccount: customerAccountOptions,\n    cart: cartOptions = {},\n  } = options;\n\n  if (!session) {\n    console.warn(\n      `[h2:warn:createHydrogenContext] A session object is required to create hydrogen context.`,\n    );\n  }\n\n  /**\n   * Create Hydrogen's Storefront client.\n   */\n  const {storefront} = createStorefrontClient<TI18n>({\n    // share options\n    cache,\n    waitUntil,\n    i18n,\n    logErrors,\n\n    // storefrontOptions\n    storefrontHeaders:\n      storefrontOptions.headers || getStorefrontHeaders(request),\n    storefrontApiVersion: storefrontOptions.apiVersion,\n\n    // defaults\n    storefrontId: env.PUBLIC_STOREFRONT_ID,\n    storeDomain: env.PUBLIC_STORE_DOMAIN,\n    privateStorefrontToken: env.PRIVATE_STOREFRONT_API_TOKEN,\n    publicStorefrontToken: env.PUBLIC_STOREFRONT_API_TOKEN,\n  });\n\n  const customerAccount = createCustomerAccountClient({\n    // share options\n    session,\n    request,\n    waitUntil,\n    logErrors,\n\n    // customerAccountOptions\n    customerApiVersion: customerAccountOptions?.apiVersion,\n    authUrl: customerAccountOptions?.authUrl,\n    customAuthStatusHandler: customerAccountOptions?.customAuthStatusHandler,\n    unstableB2b: customerAccountOptions?.unstableB2b,\n\n    // defaults\n    customerAccountId: env.PUBLIC_CUSTOMER_ACCOUNT_API_CLIENT_ID,\n    shopId: env.SHOP_ID,\n\n    // deprecated - keep until next major release\n    customerAccountUrl: env.PUBLIC_CUSTOMER_ACCOUNT_API_URL,\n  });\n\n  /*\n   * Create a cart handler that will be used to\n   * create and update the cart in the session.\n   */\n  const cart = createCartHandler({\n    // cartOptions\n    getCartId: cartOptions.getId || cartGetIdDefault(request.headers),\n    setCartId: cartOptions.setId || cartSetIdDefault(),\n    cartQueryFragment: cartOptions.queryFragment,\n    cartMutateFragment: cartOptions.mutateFragment,\n    customMethods: cartOptions.customMethods,\n\n    // defaults\n    storefront,\n    customerAccount,\n  });\n\n  return {\n    storefront,\n    customerAccount,\n    cart,\n    env,\n    waitUntil,\n    session,\n  };\n}\n\nfunction getStorefrontHeaders(request: CrossRuntimeRequest): StorefrontHeaders {\n  return {\n    requestGroupId: getHeader(request, 'request-id'),\n    buyerIp: getHeader(request, 'oxygen-buyer-ip'),\n    cookie: getHeader(request, 'cookie'),\n    purpose: getHeader(request, 'purpose'),\n  };\n}\n\nexport type HydrogenContextOptionsForDocs<\n  TSession extends HydrogenSession = HydrogenSession,\n  TI18n extends I18nBase = I18nBase,\n  TEnv extends HydrogenEnv = Env,\n> = {\n  /* Environment variables from the fetch function */\n  env: TEnv;\n  /* Request object from the fetch function */\n  request: CrossRuntimeRequest;\n  /** An instance that implements the [Cache API](https://developer.mozilla.org/en-US/docs/Web/API/Cache) */\n  cache?: Cache;\n  /** The `waitUntil` function is used to keep the current request/response lifecycle alive even after a response has been sent. It should be provided by your platform. */\n  waitUntil?: WaitUntil;\n  /** Any cookie implementation. By default Hydrogen ships with cookie session storage, but you can use [another session storage](https://remix.run/docs/en/main/utils/sessions) implementation.  */\n  session: TSession;\n  /** An object containing a country code and language code */\n  i18n?: TI18n;\n  /** Whether it should print GraphQL errors automatically. Defaults to true */\n  logErrors?: boolean | ((error?: Error) => boolean);\n  /** Storefront client overwrite options. See documentation for createStorefrontClient for more information. */\n  storefront?: {\n    /** Storefront API headers. Default values set from request header.  */\n    headers?: StorefrontHeaders;\n    /** Override the Storefront API version for this query. */\n    apiVersion?: string;\n  };\n  /** Customer Account client overwrite options. See documentation for createCustomerAccountClient for more information. */\n  customerAccount?: {\n    /** Override the version of the API */\n    apiVersion?: string;\n    /** This is the route in your app that authorizes the customer after logging in. Make sure to call `customer.authorize()` within the loader on this route. It defaults to `/account/authorize`. */\n    authUrl?: string;\n    /** Use this method to overwrite the default logged-out redirect behavior. The default handler [throws a redirect](https://remix.run/docs/en/main/utils/redirect#:~:text=!session) to `/account/login` with current path as `return_to` query param. */\n    customAuthStatusHandler?: () => Response | NonNullable<unknown> | null;\n    /** UNSTABLE feature, this will eventually goes away. If true then we will exchange customerAccessToken for storefrontCustomerAccessToken. */\n    unstableB2b?: boolean;\n  };\n  /** Cart handler overwrite options. See documentation for createCartHandler for more information. */\n  cart?: {\n    /** A function that returns the cart id in the form of `gid://shopify/Cart/c1-123`. */\n    getId?: () => string | undefined;\n    /** A function that sets the cart ID. */\n    setId?: (cartId: string) => Headers;\n    /**\n     * The cart query fragment used by `cart.get()`.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    queryFragment?: string;\n    /**\n     * The cart mutation fragment used in most mutation requests, except for `setMetafields` and `deleteMetafield`.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-cart-fragments) in the documentation.\n     */\n    mutateFragment?: string;\n    /**\n     * Define custom methods or override existing methods for your cart API instance.\n     * See the [example usage](/docs/api/hydrogen/2024-10/utilities/createcarthandler#example-custom-methods) in the documentation.\n     */\n    customMethods?: Record<string, Function>;\n  };\n};\n", "import type {LoaderFunctionArgs} from '@remix-run/server-runtime';\nimport type {Storefront} from '../storefront';\n\nconst SITEMAP_INDEX_PREFIX = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\\n`;\nconst SITEMAP_INDEX_SUFFIX = `\\n</sitemapindex>`;\n\nconst SITEMAP_PREFIX = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">`;\nconst SITEMAP_SUFFIX = `</urlset>`;\n\ntype SITEMAP_INDEX_TYPE =\n  | 'pages'\n  | 'products'\n  | 'collections'\n  | 'blogs'\n  | 'articles'\n  | 'metaObjects';\n\ninterface SitemapIndexOptions {\n  /** The Storefront API Client from Hydrogen */\n  storefront: Storefront;\n  /** A Remix Request object */\n  request: Request;\n  /** The types of pages to include in the sitemap index. */\n  types?: SITEMAP_INDEX_TYPE[];\n  /** Add a URL to a custom child sitemap */\n  customChildSitemaps?: string[];\n}\n\n/**\n * Generate a sitemap index that links to separate sitemaps for each resource type. Returns a standard Response object.\n */\nexport async function getSitemapIndex(\n  options: SitemapIndexOptions,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    types = [\n      'products',\n      'pages',\n      'collections',\n      'metaObjects',\n      'articles',\n      'blogs',\n    ],\n    customChildSitemaps = [],\n  } = options;\n\n  if (!request || !request.url)\n    throw new Error('A request object is required to generate a sitemap index');\n\n  if (!storefront || !storefront.query)\n    throw new Error(\n      'A storefront client is required to generate a sitemap index',\n    );\n\n  const data = await storefront.query(SITEMAP_INDEX_QUERY);\n\n  if (!data) {\n    console.warn(\n      '[h2:sitemap:warning] Sitemap index is available in API version 2024-10 and later',\n    );\n    throw new Response('Sitemap index not found.', {status: 404});\n  }\n\n  const baseUrl = new URL(request.url).origin;\n\n  const body =\n    SITEMAP_INDEX_PREFIX +\n    types\n      .map((type) => {\n        if (!data[type]) {\n          throw new Error(\n            `[h2:sitemap:error] No data found for type ${type}. Check types passed to \\`getSitemapIndex\\``,\n          );\n        }\n        return getSiteMapLinks(type, data[type].pagesCount.count, baseUrl);\n      })\n      .join('\\n') +\n    customChildSitemaps\n      .map(\n        (url) =>\n          '  <sitemap><loc>' +\n          (baseUrl + (url.startsWith('/') ? url : '/' + url)) +\n          '</loc></sitemap>',\n      )\n      .join('\\n') +\n    SITEMAP_INDEX_SUFFIX;\n\n  return new Response(body, {\n    headers: {\n      'Content-Type': 'application/xml',\n      'Cache-Control': `max-age=${60 * 60 * 24}`,\n    },\n  });\n}\n\ninterface GetSiteMapOptions {\n  /** The params object from Remix */\n  params: LoaderFunctionArgs['params'];\n  /** The Storefront API Client from Hydrogen */\n  storefront: Storefront;\n  /** A Remix Request object */\n  request: Request;\n  /** A function that produces a canonical url for a resource. It is called multiple times for each locale supported by the app. */\n  getLink: (options: {\n    type: string | SITEMAP_INDEX_TYPE;\n    baseUrl: string;\n    handle?: string;\n    locale?: string;\n  }) => string;\n  /** An array of locales to generate alternate tags */\n  locales?: string[];\n  /** Optionally customize the changefreq property for each URL */\n  getChangeFreq?: (options: {\n    type: string | SITEMAP_INDEX_TYPE;\n    handle: string;\n  }) => string;\n  /** If the sitemap has no links, fallback to rendering a link to the homepage. This prevents errors in Google's search console. Defaults to `/`.  */\n  noItemsFallback?: string;\n}\n\n/**\n * Generate a sitemap for a specific resource type.\n */\nexport async function getSitemap(\n  options: GetSiteMapOptions,\n): Promise<Response> {\n  const {\n    storefront,\n    request,\n    params,\n    getLink,\n    locales = [],\n    getChangeFreq,\n    noItemsFallback = '/',\n  } = options;\n\n  if (!params)\n    throw new Error(\n      '[h2:sitemap:error] Remix params object is required to generate a sitemap',\n    );\n\n  if (!request || !request.url)\n    throw new Error('A request object is required to generate a sitemap');\n\n  if (!storefront || !storefront.query)\n    throw new Error('A storefront client is required to generate a index');\n\n  if (!getLink)\n    throw new Error(\n      'A `getLink` function to generate each resource is required to build a sitemap',\n    );\n\n  if (!params.type || !params.page)\n    throw new Response('No data found', {status: 404});\n\n  const type = params.type as keyof typeof QUERIES;\n\n  const query = QUERIES[type];\n\n  if (!query) throw new Response('Not found', {status: 404});\n\n  const data = await storefront.query(query, {\n    variables: {\n      page: parseInt(params.page, 10),\n    },\n  });\n\n  if (!data) {\n    console.warn(\n      '[h2:sitemap:warning] Sitemap is available in API version 2024-10 and later',\n    );\n    throw new Response('Sitemap not found.', {status: 404});\n  }\n\n  const baseUrl = new URL(request.url).origin;\n  let body: string = '';\n\n  if (!data?.sitemap?.resources?.items?.length) {\n    body =\n      SITEMAP_PREFIX +\n      `\\n  <url><loc>${baseUrl + noItemsFallback}</loc></url>\\n` +\n      SITEMAP_SUFFIX;\n  } else {\n    body =\n      SITEMAP_PREFIX +\n      data.sitemap.resources.items\n        .map((item: {handle: string; updatedAt: string; type?: string}) => {\n          return renderUrlTag({\n            getChangeFreq,\n            url: getLink({\n              type: item.type ?? type,\n              baseUrl,\n              handle: item.handle,\n            }),\n            type,\n            getLink,\n            updatedAt: item.updatedAt,\n            handle: item.handle,\n            metaobjectType: item.type,\n            locales,\n            baseUrl,\n          });\n        })\n        .join('\\n') +\n      SITEMAP_SUFFIX;\n  }\n\n  return new Response(body, {\n    headers: {\n      'Content-Type': 'application/xml',\n      'Cache-Control': `max-age=${60 * 60 * 24}`,\n    },\n  });\n}\n\nfunction getSiteMapLinks(resource: string, count: number, baseUrl: string) {\n  let links = ``;\n\n  for (let i = 1; i <= count; i++) {\n    links += `  <sitemap><loc>${baseUrl}/sitemap/${resource}/${i}.xml</loc></sitemap>\\n`;\n  }\n  return links;\n}\n\nfunction renderUrlTag({\n  url,\n  updatedAt,\n  locales,\n  type,\n  getLink,\n  baseUrl,\n  handle,\n  getChangeFreq,\n  metaobjectType,\n}: {\n  type: SITEMAP_INDEX_TYPE;\n  baseUrl: string;\n  handle: string;\n  metaobjectType?: string;\n  getLink: (options: {\n    type: string;\n    baseUrl: string;\n    handle?: string;\n    locale?: string;\n  }) => string;\n  url: string;\n  updatedAt: string;\n  locales: string[];\n  getChangeFreq?: (options: {type: string; handle: string}) => string;\n}) {\n  return `<url>\n  <loc>${url}</loc>\n  <lastmod>${updatedAt}</lastmod>\n  <changefreq>${\n    getChangeFreq\n      ? getChangeFreq({type: metaobjectType ?? type, handle})\n      : 'weekly'\n  }</changefreq>\n${locales\n  .map((locale) =>\n    renderAlternateTag(\n      getLink({type: metaobjectType ?? type, baseUrl, handle, locale}),\n      locale,\n    ),\n  )\n  .join('\\n')}\n</url>\n  `.trim();\n}\n\nfunction renderAlternateTag(url: string, locale: string) {\n  return `  <xhtml:link rel=\"alternate\" hreflang=\"${locale}\" href=\"${url}\" />`;\n}\n\nconst PRODUCT_SITEMAP_QUERY = `#graphql\n    query SitemapProducts($page: Int!) {\n      sitemap(type: PRODUCT) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst COLLECTION_SITEMAP_QUERY = `#graphql\n    query SitemapCollections($page: Int!) {\n      sitemap(type: COLLECTION) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst ARTICLE_SITEMAP_QUERY = `#graphql\n    query SitemapArticles($page: Int!) {\n      sitemap(type: ARTICLE) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst PAGE_SITEMAP_QUERY = `#graphql\n    query SitemapPages($page: Int!) {\n      sitemap(type: PAGE) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst BLOG_SITEMAP_QUERY = `#graphql\n    query SitemapBlogs($page: Int!) {\n      sitemap(type: BLOG) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n          }\n        }\n      }\n    }\n` as const;\n\nconst METAOBJECT_SITEMAP_QUERY = `#graphql\n    query SitemapMetaobjects($page: Int!) {\n      sitemap(type: METAOBJECT) {\n        resources(page: $page) {\n          items {\n            handle\n            updatedAt\n            ... on SitemapResourceMetaobject {\n              type\n            }\n          }\n        }\n      }\n    }\n` as const;\n\nconst SITEMAP_INDEX_QUERY = `#graphql\nquery SitemapIndex {\n  products: sitemap(type: PRODUCT) {\n    pagesCount {\n      count\n    }\n  }\n  collections: sitemap(type: COLLECTION) {\n    pagesCount {\n      count\n    }\n  }\n  articles: sitemap(type: ARTICLE) {\n    pagesCount {\n      count\n    }\n  }\n  pages: sitemap(type: PAGE) {\n    pagesCount {\n      count\n    }\n  }\n  blogs: sitemap(type: BLOG) {\n    pagesCount {\n      count\n    }\n  }\n  metaObjects: sitemap(type: METAOBJECT) {\n    pagesCount {\n      count\n    }\n  }\n}\n` as const;\n\nconst QUERIES = {\n  products: PRODUCT_SITEMAP_QUERY,\n  articles: ARTICLE_SITEMAP_QUERY,\n  collections: COLLECTION_SITEMAP_QUERY,\n  pages: PAGE_SITEMAP_QUERY,\n  blogs: BLOG_SITEMAP_QUERY,\n  metaObjects: METAOBJECT_SITEMAP_QUERY,\n};\n", "\"use strict\";\nexport default ({ directives }) => {\n    const namesSeen = new Set();\n    const result = [];\n    Object.entries(directives).forEach(([originalName, value]) => {\n        const name = originalName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        if (namesSeen.has(name)) {\n            throw new Error(`${originalName} is specified more than once`);\n        }\n        namesSeen.add(name);\n        if (Array.isArray(value)) {\n            value = value.join(\" \");\n        }\n        else if (value === true) {\n            value = \"\";\n        }\n        if (value) {\n            result.push(`${name} ${value}`);\n        }\n        else if (value !== false) {\n            result.push(name);\n        }\n    });\n    return result.join(\"; \");\n};\n"],
  "mappings": "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",
  "names": ["t", "t", "React", "require$$0", "useState", "useEffect", "useLayoutEffect", "subscribe", "error", "shim", "shimModule", "require$$0", "require$$1", "React", "require$$0", "shim", "require$$1", "useRef", "useEffect", "useMemo", "subscribe", "withSelectorModule", "require$$0", "require$$1", "n", "s", "i", "crypto", "i", "v", "assign", "SCHEMA_ID", "pageView", "formatPayload", "pageView2", "trekkiePageView", "customerPageView", "customerAddToCart", "customerPageView2", "customerCollectionView", "customerProductView", "customerSearchView", "_a", "_a", "_a", "i", "index", "index", "_a", "i", "_a", "_a", "v", "List", "index", "index", "import_react", "import_jsx_runtime", "v", "parseJSON", "isStale", "_a", "logSubRequestEvent", "result", "debugInfo", "warnings", "errors", "createStorefrontClient", "warnOnce", "document", "location", "index", "schema", "loggerMarkup", "useMemo", "useLocation", "createElement", "params", "refreshToken", "query", "useNavigation", "flattenConnection", "Fragment", "option", "variant", "useEffect", "Fragment$1", "ShopPayButton", "jsx", "useFetchers", "jsxs", "useState", "createContext", "publish", "viewPayload", "useLoadScript", "value", "version", "useRef", "register", "subscribe", "logMissingConfig", "RichText", "useContext", "AnalyticsEventName", "getShopifyCookies", "parseGid", "Link", "i"]
}
