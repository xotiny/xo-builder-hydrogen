import {
  Style
} from "./chunk-PEYES2GH.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list-utils.js
function listUtils({ element }) {
  const { settings } = element;
  const iconHiddenClass = settings.markerType !== "icon" ? "xb-list__icon-hidden" : "";
  const typeClass = settings.listType === "block" ? "xb-list--block" : "xb-list--inline";
  function getSpacing() {
    var _a, _b, _c, _d, _e, _f;
    const spacingDesktop = settings.itemSpacings.desktop.value;
    const spacingTablet = ((_b = (_a = settings.itemSpacings) == null ? void 0 : _a.tablet) == null ? void 0 : _b.value) ?? settings.itemSpacings.desktop.value;
    const spacingMobile = ((_d = (_c = settings.itemSpacings) == null ? void 0 : _c.mobile) == null ? void 0 : _d.value) ?? ((_f = (_e = settings.itemSpacings) == null ? void 0 : _e.tablet) == null ? void 0 : _f.value) ?? settings.itemSpacings.desktop.value;
    const spacing = Style.create({
      "--xb-list-spacing-desktop": `${spacingDesktop}px`,
      "--xb-list-spacing-tablet": `${spacingTablet}px`,
      "--xb-list-spacing-mobile": `${spacingMobile}px`
    });
    return spacing.get();
  }
  function getHorizontalAlign() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    const horizontalAlign = Style.create(settings.listType === "inline" ? {
      "--xb-list-horizontal-align-desktop": settings.horizontalAlign.desktop
    } : {
      "--xb-list-vertical-align-desktop": settings.horizontalAlign.desktop
    });
    if ((_a = settings.horizontalAlign) == null ? void 0 : _a.tablet) {
      horizontalAlign.set(settings.listType === "inline" ? {
        "--xb-list-horizontal-align-tablet": (_b = settings.horizontalAlign) == null ? void 0 : _b.tablet
      } : {
        "--xb-list-vertical-align-tablet": (_c = settings.horizontalAlign) == null ? void 0 : _c.tablet
      });
    } else {
      horizontalAlign.set(settings.listType === "inline" ? {
        "--xb-list-horizontal-align-tablet": (_d = settings.horizontalAlign) == null ? void 0 : _d.desktop
      } : {
        "--xb-list-vertical-align-tablet": (_e = settings.horizontalAlign) == null ? void 0 : _e.desktop
      });
    }
    if ((_f = settings.horizontalAlign) == null ? void 0 : _f.mobile) {
      horizontalAlign.set(settings.listType === "inline" ? {
        "--xb-list-horizontal-align-mobile": (_g = settings.horizontalAlign) == null ? void 0 : _g.mobile
      } : {
        "--xb-list-vertical-align-mobile": (_h = settings.horizontalAlign) == null ? void 0 : _h.mobile
      });
    } else {
      horizontalAlign.set(settings.listType === "inline" ? {
        "--xb-list-horizontal-align-mobile": (_i = settings.horizontalAlign) == null ? void 0 : _i.desktop
      } : {
        "--xb-list-vertical-align-mobile": (_j = settings.horizontalAlign) == null ? void 0 : _j.desktop
      });
    }
    return horizontalAlign.get();
  }
  function getVerticalAlign() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    const verticalAlign = Style.create(settings.listType !== "inline" ? {
      "--xb-list-horizontal-align-desktop": settings.verticalAlign.desktop
    } : {
      "--xb-list-vertical-align-desktop": settings.verticalAlign.desktop
    });
    if ((_a = settings.verticalAlign) == null ? void 0 : _a.tablet) {
      verticalAlign.set(settings.listType !== "inline" ? {
        "--xb-list-horizontal-align-tablet": (_b = settings.verticalAlign) == null ? void 0 : _b.tablet
      } : {
        "--xb-list-vertical-align-tablet": (_c = settings.verticalAlign) == null ? void 0 : _c.tablet
      });
    } else {
      verticalAlign.set(settings.listType !== "inline" ? {
        "--xb-list-horizontal-align-tablet": (_d = settings.verticalAlign) == null ? void 0 : _d.desktop
      } : {
        "--xb-list-vertical-align-tablet": (_e = settings.verticalAlign) == null ? void 0 : _e.desktop
      });
    }
    if ((_f = settings.verticalAlign) == null ? void 0 : _f.mobile) {
      verticalAlign.set(settings.listType !== "inline" ? {
        "--xb-list-horizontal-align-mobile": (_g = settings.verticalAlign) == null ? void 0 : _g.mobile
      } : {
        "--xb-list-vertical-align-mobile": (_h = settings.verticalAlign) == null ? void 0 : _h.mobile
      });
    } else {
      verticalAlign.set(settings.listType !== "inline" ? {
        "--xb-list-horizontal-align-mobile": (_i = settings.verticalAlign) == null ? void 0 : _i.desktop
      } : {
        "--xb-list-vertical-align-mobile": (_j = settings.verticalAlign) == null ? void 0 : _j.desktop
      });
    }
    return verticalAlign.get();
  }
  function getListType() {
    const listStyle = settings.markerType !== "icon" ? settings.markerType : "none";
    const listType = Style.create({
      "--xb-list-style": listStyle
    });
    return listType.get();
  }
  return {
    typeClass,
    iconHiddenClass,
    getListType,
    getSpacing,
    getHorizontalAlign,
    getVerticalAlign
  };
}

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/basic/list/list.js
var List = ({ element, children }) => {
  var _a;
  const { settings } = element;
  const { getListType, getHorizontalAlign, getSpacing, getVerticalAlign, iconHiddenClass, typeClass } = listUtils({ element });
  return (0, import_jsx_runtime.jsx)("ul", { ...elementAttr(element, {
    classNames: ["xb-list", typeClass, `xb-list--${settings.markerType}`, iconHiddenClass, (_a = settings.static) == null ? void 0 : _a.class],
    style: {
      ...getListType(),
      ...getSpacing(),
      ...getHorizontalAlign(),
      ...getVerticalAlign()
    }
  }), children });
};

export {
  List
};
//# sourceMappingURL=chunk-MBCWLNAT.js.map
