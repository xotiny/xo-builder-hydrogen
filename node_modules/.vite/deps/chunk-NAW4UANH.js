import {
  renderBgOverlay,
  renderBgParallax
} from "./chunk-LJPPDYIJ.js";
import {
  Style
} from "./chunk-PEYES2GH.js";
import {
  require_jsx_runtime
} from "./chunk-3YQ7MRFA.js";
import {
  elementAttr
} from "./chunk-YPUMDGBE.js";
import {
  actionAttr
} from "./chunk-RAOCVWQR.js";
import {
  classNames
} from "./chunk-AVF5UQVT.js";
import {
  __toESM
} from "./chunk-DNCPQDPH.js";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/layout/wrapper/wrapper.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/layout/wrapper/wrapper-utils.js
function wrapperUtils({ element }) {
  const { settings } = element;
  const CSS_VARS = {
    WRAPPER_LAYOUT_DESKTOP: "--xb-wld",
    WRAPPER_VERTICAL_SPACING_DESKTOP: "--xb-wvsd",
    WRAPPER_HORIZONTAL_SPACING_DESKTOP: "--xb-whsd",
    WRAPPER_VERTICAL_SPACING_TABLET: "--xb-wvst",
    WRAPPER_VERTICAL_SPACING_MOBILE: "--xb-wvsm",
    WRAPPER_HORIZONTAL_SPACING_TABLET: "--xb-whst",
    WRAPPER_HORIZONTAL_SPACING_MOBILE: "--xb-whsm",
    WRAPPER_WIDTH_DESKTOP: "--xb-wwd",
    WRAPPER_WIDTH_TABLET: "--xb-wwt",
    WRAPPER_WIDTH_MOBILE: "--xb-wwm",
    WRAPPER_VERTICAL_ALIGN_DESKTOP: "--xb-wvad",
    WRAPPER_VERTICAL_ALIGN_TABLET: "--xb-wvat",
    WRAPPER_VERTICAL_ALIGN_MOBILE: "--xb-wvam",
    WRAPPER_HORIZONTAL_ALIGN_DESKTOP: "--xb-whad",
    WRAPPER_HORIZONTAL_ALIGN_TABLET: "--xb-what",
    WRAPPER_HORIZONTAL_ALIGN_MOBILE: "--xb-wham",
    WRAPPER_WRAP_DESKTOP: "--xb-wwrd",
    WRAPPER_WRAP_TABLET: "--xb-wwrt",
    WRAPPER_WRAP_MOBILE: "--xb-wwrm",
    WRAPPER_HORIZONTAL_POSITION_LEFT_DESKTOP: "--xb-whpld",
    WRAPPER_HORIZONTAL_POSITION_RIGHT_DESKTOP: "--xb-whprd",
    WRAPPER_HORIZONTAL_POSITION_LEFT_TABLET: "--xb-whplt",
    WRAPPER_HORIZONTAL_POSITION_RIGHT_TABLET: "--xb-whprt",
    WRAPPER_HORIZONTAL_POSITION_LEFT_MOBILE: "--xb-whplm",
    WRAPPER_HORIZONTAL_POSITION_RIGHT_MOBILE: "--xb-whprm",
    WRAPPER_Z_INDEX: "--xb-wz",
    WRAPPER_POSITION_TYPE: "--xb-wpt",
    WRAPPER_MIN_HEIGHT_DESKTOP: "--xb-wmhd",
    WRAPPER_MIN_HEIGHT_TABLET: "--xb-wmht",
    WRAPPER_MIN_HEIGHT_MOBILE: "--xb-wmhm"
  };
  function getLayoutStyle() {
    const layout = Style.create({
      [CSS_VARS.WRAPPER_LAYOUT_DESKTOP]: settings.layoutStyle
    });
    return layout.get();
  }
  function getWidth() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;
    if (settings.wrapperWidth === "fullWidth") {
      const width2 = Style.create({
        [CSS_VARS.WRAPPER_WIDTH_DESKTOP]: "100%",
        [CSS_VARS.WRAPPER_WIDTH_TABLET]: "100%",
        [CSS_VARS.WRAPPER_WIDTH_MOBILE]: "100%"
      });
      return width2.get();
    }
    const width = Style.create({
      [CSS_VARS.WRAPPER_WIDTH_DESKTOP]: `${settings.maxWidth.desktop.value}${settings.maxWidth.desktop.unit}`
    });
    if ((_a = settings.maxWidth) == null ? void 0 : _a.tablet) {
      width.set({
        [CSS_VARS.WRAPPER_WIDTH_TABLET]: `${(_b = settings.maxWidth) == null ? void 0 : _b.tablet.value}${(_d = (_c = settings.maxWidth) == null ? void 0 : _c.tablet) == null ? void 0 : _d.unit}`
      });
    } else {
      width.set({
        [CSS_VARS.WRAPPER_WIDTH_TABLET]: `${(_e = settings.maxWidth) == null ? void 0 : _e.desktop.value}${(_g = (_f = settings.maxWidth) == null ? void 0 : _f.desktop) == null ? void 0 : _g.unit}`
      });
    }
    if ((_h = settings.maxWidth) == null ? void 0 : _h.mobile) {
      width.set({
        [CSS_VARS.WRAPPER_WIDTH_MOBILE]: `${(_i = settings.maxWidth) == null ? void 0 : _i.mobile.value}${(_k = (_j = settings.maxWidth) == null ? void 0 : _j.mobile) == null ? void 0 : _k.unit}`
      });
    } else {
      width.set({
        [CSS_VARS.WRAPPER_WIDTH_MOBILE]: `${(_l = settings.maxWidth) == null ? void 0 : _l.desktop.value}${(_n = (_m = settings.maxWidth) == null ? void 0 : _m.desktop) == null ? void 0 : _n.unit}`
      });
    }
    return width.get();
  }
  function getPosition() {
    var _a, _b;
    if (settings.wrapperWidth === "fullWidth") {
      return {};
    }
    const horizontalPosition = Style.create({});
    if (settings.horizontalPosition.desktop === "center") {
      horizontalPosition.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_DESKTOP]: "auto",
        [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_DESKTOP]: "auto"
      });
    } else if (settings.horizontalPosition.desktop === "right") {
      horizontalPosition.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_DESKTOP]: "auto",
        [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_DESKTOP]: 0
      });
    }
    if ((_a = settings.horizontalPosition) == null ? void 0 : _a.tablet) {
      if (settings.horizontalPosition.tablet === "center") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_TABLET]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_TABLET]: "auto"
        });
      } else if (settings.horizontalPosition.tablet === "right") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_TABLET]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_TABLET]: 0
        });
      }
    } else {
      if (settings.horizontalPosition.desktop === "center") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_TABLET]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_TABLET]: "auto"
        });
      } else if (settings.horizontalPosition.desktop === "right") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_TABLET]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_TABLET]: 0
        });
      }
    }
    if ((_b = settings.horizontalPosition) == null ? void 0 : _b.mobile) {
      if (settings.horizontalPosition.mobile === "center") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_MOBILE]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_MOBILE]: "auto"
        });
      } else if (settings.horizontalPosition.mobile === "right") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_MOBILE]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_MOBILE]: 0
        });
      }
    } else {
      if (settings.horizontalPosition.desktop === "center") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_MOBILE]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_MOBILE]: "auto"
        });
      } else if (settings.horizontalPosition.desktop === "right") {
        horizontalPosition.set({
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_LEFT_MOBILE]: "auto",
          [CSS_VARS.WRAPPER_HORIZONTAL_POSITION_RIGHT_MOBILE]: 0
        });
      }
    }
    return horizontalPosition.get();
  }
  function getHorizontalAlign() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    const horizontalAlign = Style.create(settings.layoutStyle === "row" ? {
      [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_DESKTOP]: settings.horizontalAlign.desktop
    } : {
      [CSS_VARS.WRAPPER_VERTICAL_ALIGN_DESKTOP]: settings.horizontalAlign.desktop
    });
    if ((_a = settings.horizontalAlign) == null ? void 0 : _a.tablet) {
      horizontalAlign.set(settings.layoutStyle === "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_TABLET]: (_b = settings.horizontalAlign) == null ? void 0 : _b.tablet
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_TABLET]: (_c = settings.horizontalAlign) == null ? void 0 : _c.tablet
      });
    } else {
      horizontalAlign.set(settings.layoutStyle === "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_TABLET]: (_d = settings.horizontalAlign) == null ? void 0 : _d.desktop
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_TABLET]: (_e = settings.horizontalAlign) == null ? void 0 : _e.desktop
      });
    }
    if ((_f = settings.horizontalAlign) == null ? void 0 : _f.mobile) {
      horizontalAlign.set(settings.layoutStyle === "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_MOBILE]: (_g = settings.horizontalAlign) == null ? void 0 : _g.mobile
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_MOBILE]: (_h = settings.horizontalAlign) == null ? void 0 : _h.mobile
      });
    } else {
      horizontalAlign.set(settings.layoutStyle === "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_MOBILE]: (_i = settings.horizontalAlign) == null ? void 0 : _i.desktop
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_MOBILE]: (_j = settings.horizontalAlign) == null ? void 0 : _j.desktop
      });
    }
    return horizontalAlign.get();
  }
  function getVerticalAlign() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
    const verticalAlign = Style.create(settings.layoutStyle !== "row" ? {
      [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_DESKTOP]: settings.verticalAlign.desktop
    } : {
      [CSS_VARS.WRAPPER_VERTICAL_ALIGN_DESKTOP]: settings.verticalAlign.desktop
    });
    if ((_a = settings.verticalAlign) == null ? void 0 : _a.tablet) {
      verticalAlign.set(settings.layoutStyle !== "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_TABLET]: (_b = settings.verticalAlign) == null ? void 0 : _b.tablet
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_TABLET]: (_c = settings.verticalAlign) == null ? void 0 : _c.tablet
      });
    } else {
      verticalAlign.set(settings.layoutStyle !== "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_TABLET]: (_d = settings.verticalAlign) == null ? void 0 : _d.desktop
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_TABLET]: (_e = settings.verticalAlign) == null ? void 0 : _e.desktop
      });
    }
    if ((_f = settings.verticalAlign) == null ? void 0 : _f.mobile) {
      verticalAlign.set(settings.layoutStyle !== "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_MOBILE]: (_g = settings.verticalAlign) == null ? void 0 : _g.mobile
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_MOBILE]: (_h = settings.verticalAlign) == null ? void 0 : _h.mobile
      });
    } else {
      verticalAlign.set(settings.layoutStyle !== "row" ? {
        [CSS_VARS.WRAPPER_HORIZONTAL_ALIGN_MOBILE]: (_i = settings.verticalAlign) == null ? void 0 : _i.desktop
      } : {
        [CSS_VARS.WRAPPER_VERTICAL_ALIGN_MOBILE]: (_j = settings.verticalAlign) == null ? void 0 : _j.desktop
      });
    }
    return verticalAlign.get();
  }
  function getGap() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F;
    const spacing = Style.create({
      [CSS_VARS.WRAPPER_VERTICAL_SPACING_DESKTOP]: `${settings.verticalSpacing.desktop.value}${settings.verticalSpacing.desktop.unit}`,
      [CSS_VARS.WRAPPER_HORIZONTAL_SPACING_DESKTOP]: `${settings.horizontalSpacing.desktop.value}${settings.horizontalSpacing.desktop.unit}`
    });
    if ((_a = settings.verticalSpacing) == null ? void 0 : _a.tablet) {
      spacing.set({
        [CSS_VARS.WRAPPER_VERTICAL_SPACING_TABLET]: `${(_b = settings.verticalSpacing) == null ? void 0 : _b.tablet.value}${(_d = (_c = settings.verticalSpacing) == null ? void 0 : _c.tablet) == null ? void 0 : _d.unit}`
      });
    } else {
      spacing.set({
        [CSS_VARS.WRAPPER_VERTICAL_SPACING_TABLET]: `${(_f = (_e = settings.verticalSpacing) == null ? void 0 : _e.desktop) == null ? void 0 : _f.value}${(_h = (_g = settings.verticalSpacing) == null ? void 0 : _g.desktop) == null ? void 0 : _h.unit}`
      });
    }
    if ((_i = settings.verticalSpacing) == null ? void 0 : _i.mobile) {
      spacing.set({
        [CSS_VARS.WRAPPER_VERTICAL_SPACING_MOBILE]: `${(_j = settings.verticalSpacing) == null ? void 0 : _j.mobile.value}${(_l = (_k = settings.verticalSpacing) == null ? void 0 : _k.mobile) == null ? void 0 : _l.unit}`
      });
    } else {
      spacing.set({
        [CSS_VARS.WRAPPER_VERTICAL_SPACING_MOBILE]: `${(_n = (_m = settings.verticalSpacing) == null ? void 0 : _m.desktop) == null ? void 0 : _n.value}${(_p = (_o = settings.verticalSpacing) == null ? void 0 : _o.desktop) == null ? void 0 : _p.unit}`
      });
    }
    if ((_q = settings.horizontalSpacing) == null ? void 0 : _q.tablet) {
      spacing.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_SPACING_TABLET]: `${(_r = settings.horizontalSpacing) == null ? void 0 : _r.tablet.value}${(_t = (_s = settings.horizontalSpacing) == null ? void 0 : _s.tablet) == null ? void 0 : _t.unit}`
      });
    } else {
      spacing.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_SPACING_TABLET]: `${(_v = (_u = settings.horizontalSpacing) == null ? void 0 : _u.desktop) == null ? void 0 : _v.value}${(_x = (_w = settings.horizontalSpacing) == null ? void 0 : _w.desktop) == null ? void 0 : _x.unit}`
      });
    }
    if ((_y = settings.horizontalSpacing) == null ? void 0 : _y.mobile) {
      spacing.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_SPACING_MOBILE]: `${(_z = settings.horizontalSpacing) == null ? void 0 : _z.mobile.value}${(_B = (_A = settings.horizontalSpacing) == null ? void 0 : _A.mobile) == null ? void 0 : _B.unit}`
      });
    } else {
      spacing.set({
        [CSS_VARS.WRAPPER_HORIZONTAL_SPACING_MOBILE]: `${(_D = (_C = settings.horizontalSpacing) == null ? void 0 : _C.desktop) == null ? void 0 : _D.value}${(_F = (_E = settings.horizontalSpacing) == null ? void 0 : _E.desktop) == null ? void 0 : _F.unit}`
      });
    }
    return spacing.get();
  }
  function getHeight() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p;
    const minHeight = Style.create({});
    if (settings.heightSelector === "custom") {
      minHeight.set({
        [CSS_VARS.WRAPPER_MIN_HEIGHT_DESKTOP]: `${settings.minHeight.desktop.value}${settings.minHeight.desktop.unit}`
      });
      if ((_a = settings.minHeight) == null ? void 0 : _a.tablet) {
        minHeight.set({
          [CSS_VARS.WRAPPER_MIN_HEIGHT_TABLET]: `${(_b = settings.minHeight) == null ? void 0 : _b.tablet.value}${(_d = (_c = settings.minHeight) == null ? void 0 : _c.tablet) == null ? void 0 : _d.unit}`
        });
      } else {
        minHeight.set({
          [CSS_VARS.WRAPPER_MIN_HEIGHT_TABLET]: `${(_f = (_e = settings.minHeight) == null ? void 0 : _e.desktop) == null ? void 0 : _f.value}${(_h = (_g = settings.minHeight) == null ? void 0 : _g.desktop) == null ? void 0 : _h.unit}`
        });
      }
      if ((_i = settings.minHeight) == null ? void 0 : _i.mobile) {
        minHeight.set({
          [CSS_VARS.WRAPPER_MIN_HEIGHT_MOBILE]: `${(_j = settings.minHeight) == null ? void 0 : _j.mobile.value}${(_l = (_k = settings.minHeight) == null ? void 0 : _k.mobile) == null ? void 0 : _l.unit}`
        });
      } else {
        minHeight.set({
          [CSS_VARS.WRAPPER_MIN_HEIGHT_MOBILE]: `${(_n = (_m = settings.minHeight) == null ? void 0 : _m.desktop) == null ? void 0 : _n.value}${(_p = (_o = settings.minHeight) == null ? void 0 : _o.desktop) == null ? void 0 : _p.unit}`
        });
      }
    }
    return minHeight.get();
  }
  function getWrapper() {
    var _a, _b;
    const wrapDesktop = settings.layoutWrap.desktop;
    const wrapTablet = ((_a = settings.layoutWrap) == null ? void 0 : _a.tablet) ?? wrapDesktop;
    const wrapMobile = ((_b = settings.layoutWrap) == null ? void 0 : _b.mobile) ?? wrapTablet;
    const wrapper = Style.create({
      [CSS_VARS.WRAPPER_WRAP_DESKTOP]: wrapDesktop,
      [CSS_VARS.WRAPPER_WRAP_TABLET]: wrapTablet,
      [CSS_VARS.WRAPPER_WRAP_MOBILE]: wrapMobile
    });
    return wrapper.get();
  }
  function getAbsolutePosition() {
    var _a, _b;
    const absoluteClassDesktop = `xb-wrapper--desktop-${settings.positionAbsolute.desktop}`;
    const absoluteClassTablet = ((_a = settings.positionAbsolute) == null ? void 0 : _a.tablet) ? `xb-wrapper--tablet-${settings.positionAbsolute.tablet}` : `xb-wrapper--tablet-${settings.positionAbsolute.desktop}`;
    const absoluteClassMobile = ((_b = settings.positionAbsolute) == null ? void 0 : _b.mobile) ? `xb-wrapper--mobile-${settings.positionAbsolute.mobile}` : `xb-wrapper--mobile-${settings.positionAbsolute.desktop}`;
    return classNames(absoluteClassDesktop, absoluteClassTablet, absoluteClassMobile);
  }
  function getIndex() {
    var _a;
    const zIndex = Style.create({
      [CSS_VARS.WRAPPER_Z_INDEX]: `${(_a = settings.wrapperIndex) == null ? void 0 : _a.value}`
    });
    return zIndex.get();
  }
  function getPositionAbsoluteType() {
    const position = Style.create({
      [CSS_VARS.WRAPPER_POSITION_TYPE]: `${settings.positionType}`
    });
    return position.get();
  }
  const enabledFlexPosition = settings.positionType !== "static" && settings.positionType !== "relative";
  const positionClass = enabledFlexPosition ? getAbsolutePosition() : "";
  return {
    style: Style.combine(getLayoutStyle(), getGap(), getWidth(), getHorizontalAlign(), getHeight(), getVerticalAlign(), getWrapper(), getPosition(), getIndex(), getPositionAbsoluteType()),
    positionClass
  };
}

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/layout/wrapper/styles.js
import "/Users/vandoan/Documents/code/hydrogen/xo-builder-hydrogen/node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/layout/wrapper/wrapper.css";

// node_modules/.pnpm/@xotiny+xb-react-elements@1.1.7_@remix-run+react@2.15.3_react-dom@18.3.1_react@18.3.1__react@_de3647dslfchm23rzktcfpukke/node_modules/@xotiny/xb-react-elements/dist/elements/layout/wrapper/wrapper.js
var Wrapper = ({ element, children }) => {
  var _a;
  const { settings } = element;
  const { style, positionClass } = wrapperUtils({ element });
  return (0, import_jsx_runtime.jsxs)("div", { ...elementAttr(element, {
    classNames: ["xb-wrapper", (_a = settings.static) == null ? void 0 : _a.class, positionClass],
    style
  }), ...actionAttr(settings.actionWrapper, true), children: [children, renderBgOverlay(settings.styles), renderBgParallax(settings.styles)] });
};

export {
  Wrapper
};
//# sourceMappingURL=chunk-NAW4UANH.js.map
