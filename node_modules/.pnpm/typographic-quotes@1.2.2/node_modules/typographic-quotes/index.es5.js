'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = typographicQuotes;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _typographicQuotesL10nDb = require('typographic-quotes-l10n-db');

var _typographicQuotesL10nDb2 = _interopRequireDefault(_typographicQuotesL10nDb);

function typographicQuotes() {
  var input = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];

  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var _ref$locale = _ref.locale;
  var locale = _ref$locale === undefined ? 'en-us' : _ref$locale;

  var separator = '';
  var localeQuotes = _typographicQuotesL10nDb2['default'][locale];
  var pattern = /(^|\s)(?:"(.*?)"|'(.*?)')(\s|$|\.|,|\?|!)/gim;
  var handleQuotes = function handleQuotes(quotes, cb) {
    return function (match) {
      var before = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];
      var part1 = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];
      var part2 = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];
      var after = arguments.length <= 4 || arguments[4] === undefined ? '' : arguments[4];

      var text = part1 + part2;
      if (cb) {
        text = text.replace(pattern, cb);
      }
      if (locale === 'fr') {
        separator = 'Â ';
      }
      return '' + before + quotes[0] + separator + text + separator + quotes[1] + after;
    };
  };

  return input.replace(pattern, handleQuotes(localeQuotes.slice(0, 2), handleQuotes(localeQuotes.slice(2, 4))));
}

module.exports = exports['default'];

