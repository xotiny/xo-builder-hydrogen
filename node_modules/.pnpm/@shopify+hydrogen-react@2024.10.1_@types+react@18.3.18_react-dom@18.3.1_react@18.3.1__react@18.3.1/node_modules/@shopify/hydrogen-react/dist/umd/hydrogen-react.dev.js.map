{"version":3,"file":"hydrogen-react.dev.js","sources":["../../../../node_modules/@xstate/fsm/es/index.js","../../../../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","../../../../node_modules/use-sync-external-store/shim/index.js","../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js","../../../../node_modules/use-sync-external-store/shim/with-selector.js","../../../../node_modules/@xstate/react/es/useConstant.js","../../../../node_modules/@xstate/react/es/fsm.js","../../src/flatten-connection.ts","../../src/cart-queries.ts","../../src/storefront-api-constants.ts","../../src/storefront-client.ts","../../src/ShopifyProvider.tsx","../../src/cart-constants.ts","../../../../node_modules/worktop/cookie/index.mjs","../../src/cookies-utils.tsx","../../src/cart-hooks.tsx","../../src/useCartActions.tsx","../../src/useCartAPIStateMachine.tsx","../../src/CartProvider.tsx","../../src/ProductProvider.tsx","../../src/BaseButton.tsx","../../src/AddToCartButton.tsx","../../src/analytics-constants.ts","../../src/analytics-utils.ts","../../src/analytics-schema-trekkie-storefront-page-view.ts","../../src/analytics-schema-custom-storefront-customer-tracking.ts","../../src/analytics.ts","../../src/BuyNowButton.tsx","../../src/CartCheckoutButton.tsx","../../src/useMoney.tsx","../../src/Money.tsx","../../src/CartCost.tsx","../../src/CartLineProvider.tsx","../../src/CartLineQuantity.tsx","../../src/CartLineQuantityAdjustButton.tsx","../../src/codegen.helpers.ts","../../src/ExternalVideo.tsx","../../src/optionValueDecoder.ts","../../src/getProductOptions.ts","../../src/Image.tsx","../../src/load-script.tsx","../../src/Video.tsx","../../src/ModelViewer.tsx","../../src/MediaFile.tsx","../../src/parse-metafield.ts","../../src/ProductPrice.tsx","../../src/RichText.components.tsx","../../src/RichText.tsx","../../src/ShopPayButton.tsx","../../src/useSelectedOptionInUrlParam.tsx","../../src/useShopifyCookies.tsx"],"sourcesContent":["/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(t,n){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,i,o=e.call(t),a=[];try{for(;(void 0===n||n-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(e=o.return)&&e.call(o)}finally{if(i)throw i.error}}return a}var n;!function(t){t[t.NotStarted=0]=\"NotStarted\",t[t.Running=1]=\"Running\",t[t.Stopped=2]=\"Stopped\"}(n||(n={}));var e={type:\"xstate.init\"};function r(t){return void 0===t?[]:[].concat(t)}function i(t){return{type:\"xstate.assign\",assignment:t}}function o(t,n){return\"string\"==typeof(t=\"string\"==typeof t&&n&&n[t]?n[t]:t)?{type:t}:\"function\"==typeof t?{type:t.name,exec:t}:t}function a(t){return function(n){return t===n}}function u(t){return\"string\"==typeof t?{type:t}:t}function c(t,n){return{value:t,context:n,actions:[],changed:!1,matches:a(t)}}function f(t,n,e){var r=n,i=!1;return[t.filter((function(t){if(\"xstate.assign\"===t.type){i=!0;var n=Object.assign({},r);return\"function\"==typeof t.assignment?n=t.assignment(r,e):Object.keys(t.assignment).forEach((function(i){n[i]=\"function\"==typeof t.assignment[i]?t.assignment[i](r,e):t.assignment[i]})),r=n,!1}return!0})),r,i]}function s(n,i){void 0===i&&(i={});var s=t(f(r(n.states[n.initial].entry).map((function(t){return o(t,i.actions)})),n.context,e),2),l=s[0],v=s[1],y={config:n,_options:i,initialState:{value:n.initial,actions:l,context:v,matches:a(n.initial)},transition:function(e,i){var s,l,v=\"string\"==typeof e?{value:e,context:n.context}:e,p=v.value,g=v.context,d=u(i),x=n.states[p];if(x.on){var m=r(x.on[d.type]);try{for(var h=function(t){var n=\"function\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}(m),b=h.next();!b.done;b=h.next()){var S=b.value;if(void 0===S)return c(p,g);var w=\"string\"==typeof S?{target:S}:S,j=w.target,E=w.actions,R=void 0===E?[]:E,N=w.cond,O=void 0===N?function(){return!0}:N,_=void 0===j,k=null!=j?j:p,T=n.states[k];if(O(g,d)){var q=t(f((_?r(R):[].concat(x.exit,R,T.entry).filter((function(t){return t}))).map((function(t){return o(t,y._options.actions)})),g,d),3),z=q[0],A=q[1],B=q[2],C=null!=j?j:p;return{value:C,context:A,actions:z,changed:j!==p||z.length>0||B,matches:a(C)}}}}catch(t){s={error:t}}finally{try{b&&!b.done&&(l=h.return)&&l.call(h)}finally{if(s)throw s.error}}}return c(p,g)}};return y}var l=function(t,n){return t.actions.forEach((function(e){var r=e.exec;return r&&r(t.context,n)}))};function v(t){var r=t.initialState,i=n.NotStarted,o=new Set,c={_machine:t,send:function(e){i===n.Running&&(r=t.transition(r,e),l(r,u(e)),o.forEach((function(t){return t(r)})))},subscribe:function(t){return o.add(t),t(r),{unsubscribe:function(){return o.delete(t)}}},start:function(o){if(o){var u=\"object\"==typeof o?o:{context:t.config.context,value:o};r={value:u.value,actions:[],context:u.context,matches:a(u.value)}}else r=t.initialState;return i=n.Running,l(r,e),c},stop:function(){return i=n.Stopped,o.clear(),c},get state(){return r},get status(){return i}};return c}export{n as InterpreterStatus,i as assign,s as createMachine,v as interpret};\n","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import * as React from 'react';\nexport default function useConstant(fn) {\n    var ref = React.useRef();\n    if (!ref.current) {\n        ref.current = { v: fn() };\n    }\n    return ref.current.v;\n}\n","var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { createMachine, interpret, InterpreterStatus } from '@xstate/fsm';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport useConstant from './useConstant';\nfunction identity(a) {\n    return a;\n}\nvar getServiceState = function (service) {\n    var currentValue;\n    service\n        .subscribe(function (state) {\n        currentValue = state;\n    })\n        .unsubscribe();\n    return currentValue;\n};\nexport function useMachine(stateMachine, options) {\n    var persistedStateRef = useRef();\n    if (process.env.NODE_ENV !== 'production') {\n        var _a = __read(useState(stateMachine), 1), initialMachine = _a[0];\n        if (stateMachine !== initialMachine) {\n            console.warn('Machine given to `useMachine` has changed between renders. This is not supported and might lead to unexpected results.\\n' +\n                'Please make sure that you pass the same Machine as argument each time.');\n        }\n    }\n    var _b = __read(useConstant(function () {\n        var queue = [];\n        var service = interpret(createMachine(stateMachine.config, options ? options : stateMachine._options));\n        var send = service.send;\n        service.send = function (event) {\n            if (service.status === InterpreterStatus.NotStarted) {\n                queue.push(event);\n                return;\n            }\n            send(event);\n            persistedStateRef.current = service.state;\n        };\n        return [service, queue];\n    }), 2), service = _b[0], queue = _b[1];\n    useIsomorphicLayoutEffect(function () {\n        if (options) {\n            service._machine._options = options;\n        }\n    });\n    var useServiceResult = useService(service);\n    useEffect(function () {\n        service.start(persistedStateRef.current);\n        queue.forEach(service.send);\n        persistedStateRef.current = service.state;\n        return function () {\n            service.stop();\n        };\n    }, []);\n    return useServiceResult;\n}\nvar isEqual = function (_prevState, nextState) { return nextState.changed === false; };\nexport function useService(service) {\n    var getSnapshot = useCallback(function () { return getServiceState(service); }, [service]);\n    var subscribe = useCallback(function (handleStoreChange) {\n        var unsubscribe = service.subscribe(handleStoreChange).unsubscribe;\n        return unsubscribe;\n    }, [service]);\n    var storeSnapshot = useSyncExternalStoreWithSelector(subscribe, getSnapshot, getSnapshot, identity, isEqual);\n    return [storeSnapshot, service.send, service];\n}\n","import type {PartialDeep} from 'type-fest';\n\n/**\n * The `flattenConnection` utility transforms a connection object from the Storefront API (for example, [Product-related connections](https://shopify.dev/api/storefront/reference/products/product)) into a flat array of nodes.\n * The utility works with either `nodes` or `edges.node`.\n *\n * If `connection` is null or undefined, will return an empty array instead in production. In development, an error will be thrown.\n */\nexport function flattenConnection<\n  ConnectionGeneric extends\n    | PartialDeep<ConnectionEdges, {recurseIntoArrays: true}>\n    | PartialDeep<ConnectionNodes, {recurseIntoArrays: true}>\n    | ConnectionEdges\n    | ConnectionNodes,\n>(\n  connection?: ConnectionGeneric,\n): ConnectionGeneric extends\n  | {\n      edges: Array<{node: infer ConnectionBaseType}>;\n    }\n  | {\n      nodes: Array<infer ConnectionBaseType>;\n    }\n  ? // if it's not a PartialDeep, then return the infered type\n    ConnectionBaseType[]\n  : ConnectionGeneric extends\n      | PartialDeep<\n          {edges: {node: Array<infer ConnectionBaseType>}},\n          {recurseIntoArrays: true}\n        >\n      | PartialDeep<\n          {\n            nodes: Array<infer ConnectionBaseType>;\n          },\n          {recurseIntoArrays: true}\n        >\n  ? // if it is a PartialDeep, return a PartialDeep inferred type\n    PartialDeep<ConnectionBaseType[], {recurseIntoArrays: true}>\n  : never {\n  if (!connection) {\n    const noConnectionErr = `flattenConnection(): needs a 'connection' to flatten, but received '${\n      connection ?? ''\n    }' instead.`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(noConnectionErr);\n    } else {\n      console.error(noConnectionErr + ` Returning an empty array`);\n      // @ts-expect-error We don't want to crash prod, so return an empty array\n      return [];\n    }\n  }\n\n  if ('nodes' in connection) {\n    // @ts-expect-error return type is failing\n    return connection.nodes;\n  }\n\n  if ('edges' in connection && Array.isArray(connection.edges)) {\n    // @ts-expect-error return type is failing\n    return connection.edges.map((edge) => {\n      if (!edge?.node) {\n        throw new Error(\n          'flattenConnection(): Connection edges must contain nodes',\n        );\n      }\n      return edge.node;\n    }) as Array<unknown>;\n  }\n\n  if (__HYDROGEN_DEV__) {\n    console.warn(\n      `flattenConnection(): The connection did not contain either \"nodes\" or \"edges.node\". Returning an empty array.`,\n    );\n  }\n\n  // @ts-expect-error We don't want to crash prod, so return an empty array\n  return [];\n}\n\ntype ConnectionEdges = {\n  edges: Array<{node: unknown}>;\n};\n\ntype ConnectionNodes = {\n  nodes: Array<unknown>;\n};\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface ConnectionGenericForDoc {\n  connection?: ConnectionEdges | ConnectionNodes;\n}\nexport type FlattenConnectionReturnForDoc = Array<unknown>;\n","export const CartLineAdd = (cartFragment: string): string => /* GraphQL */ `\n  mutation CartLineAdd(\n    $cartId: ID!\n    $lines: [CartLineInput!]!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesAdd(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartCreate = (cartFragment: string): string => /* GraphQL */ `\n  mutation CartCreate(\n    $input: CartInput!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartCreate(input: $input) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartLineRemove = (cartFragment: string): string => /* GraphQL */ `\n  mutation CartLineRemove(\n    $cartId: ID!\n    $lines: [ID!]!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesRemove(cartId: $cartId, lineIds: $lines) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartLineUpdate = (cartFragment: string): string => /* GraphQL */ `\n  mutation CartLineUpdate(\n    $cartId: ID!\n    $lines: [CartLineUpdateInput!]!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartLinesUpdate(cartId: $cartId, lines: $lines) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartNoteUpdate = (cartFragment: string): string => /* GraphQL */ `\n  mutation CartNoteUpdate(\n    $cartId: ID!\n    $note: String!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartNoteUpdate(cartId: $cartId, note: $note) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartBuyerIdentityUpdate = (\n  cartFragment: string,\n): string => /* GraphQL */ `\n  mutation CartBuyerIdentityUpdate(\n    $cartId: ID!\n    $buyerIdentity: CartBuyerIdentityInput!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartAttributesUpdate = (\n  cartFragment: string,\n): string => /* GraphQL */ `\n  mutation CartAttributesUpdate(\n    $attributes: [AttributeInput!]!\n    $cartId: ID!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartAttributesUpdate(attributes: $attributes, cartId: $cartId) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartDiscountCodesUpdate = (\n  cartFragment: string,\n): string => /* GraphQL */ `\n  mutation CartDiscountCodesUpdate(\n    $cartId: ID!\n    $discountCodes: [String!]\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cartDiscountCodesUpdate(cartId: $cartId, discountCodes: $discountCodes) {\n      cart {\n        ...CartFragment\n      }\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const CartQuery = (cartFragment: string): string => /* GraphQL */ `\n  query CartQuery(\n    $id: ID!\n    $numCartLines: Int = 250\n    $country: CountryCode = ZZ\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    cart(id: $id) {\n      ...CartFragment\n    }\n  }\n\n  ${cartFragment}\n`;\n\nexport const defaultCartFragment = /* GraphQL */ `\n  fragment CartFragment on Cart {\n    id\n    checkoutUrl\n    totalQuantity\n    buyerIdentity {\n      countryCode\n      customer {\n        id\n        email\n        firstName\n        lastName\n        displayName\n      }\n      email\n      phone\n    }\n    lines(first: $numCartLines) {\n      edges {\n        node {\n          id\n          quantity\n          attributes {\n            key\n            value\n          }\n          cost {\n            totalAmount {\n              amount\n              currencyCode\n            }\n            compareAtAmountPerQuantity {\n              amount\n              currencyCode\n            }\n          }\n          merchandise {\n            ... on ProductVariant {\n              id\n              availableForSale\n              compareAtPrice {\n                ...MoneyFragment\n              }\n              price {\n                ...MoneyFragment\n              }\n              requiresShipping\n              title\n              image {\n                ...ImageFragment\n              }\n              product {\n                handle\n                title\n                id\n              }\n              selectedOptions {\n                name\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n    cost {\n      subtotalAmount {\n        ...MoneyFragment\n      }\n      totalAmount {\n        ...MoneyFragment\n      }\n      totalDutyAmount {\n        ...MoneyFragment\n      }\n      totalTaxAmount {\n        ...MoneyFragment\n      }\n    }\n    note\n    attributes {\n      key\n      value\n    }\n    discountCodes {\n      code\n      applicable\n    }\n  }\n\n  fragment MoneyFragment on MoneyV2 {\n    currencyCode\n    amount\n  }\n  fragment ImageFragment on Image {\n    id\n    url\n    altText\n    width\n    height\n  }\n`;\n","export const SFAPI_VERSION = '2024-10';\n","import {SFAPI_VERSION} from './storefront-api-constants.js';\n\nexport type StorefrontClientProps = {\n  /** The host name of the domain (eg: `{shop}.myshopify.com`). */\n  storeDomain?: string;\n  /** The Storefront API delegate access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) and [delegate access token](https://shopify.dev/apps/auth/oauth/delegate-access-tokens) documentation for more details. */\n  privateStorefrontToken?: string;\n  /** The Storefront API access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  publicStorefrontToken?: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen React was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details.  */\n  storefrontApiVersion?: string;\n  /**\n   * Customizes which `\"content-type\"` header is added when using `getPrivateTokenHeaders()` and `getPublicTokenHeaders()`. When fetching with a `JSON.stringify()`-ed `body`, use `\"json\"`. When fetching with a `body` that is a plain string, use `\"graphql\"`. Defaults to `\"json\"`\n   *\n   * Can also be customized on a call-by-call basis by passing in `'contentType'` to both `getPrivateTokenHeaders({...})` and `getPublicTokenHeaders({...})`, for example: `getPublicTokenHeaders({contentType: 'graphql'})`\n   */\n  contentType?: 'json' | 'graphql';\n};\n\nconst MOCK_SHOP_DOMAIN = 'mock.shop';\nconst isMockShop = (domain: string): boolean =>\n  domain.includes(MOCK_SHOP_DOMAIN);\n\n/**\n * The `createStorefrontClient()` function creates helpers that enable you to quickly query the Shopify Storefront API.\n *\n * When used on the server, it is recommended to use the `privateStorefrontToken` prop. When used on the client, it is recommended to use the `publicStorefrontToken` prop.\n */\nexport function createStorefrontClient({\n  storeDomain,\n  privateStorefrontToken,\n  publicStorefrontToken,\n  storefrontApiVersion = SFAPI_VERSION,\n  contentType,\n}: StorefrontClientProps): StorefrontClientReturn {\n  if (!storeDomain) {\n    if (__HYDROGEN_DEV__) {\n      storeDomain = MOCK_SHOP_DOMAIN;\n      warnOnce(\n        `storeDomain missing, defaulting to ${MOCK_SHOP_DOMAIN}`,\n        'info',\n      );\n    } else {\n      throw new Error(\n        H2_PREFIX_ERROR +\n          `\\`storeDomain\\` is required when creating a new Storefront client in production.`,\n      );\n    }\n  }\n\n  if (storefrontApiVersion !== SFAPI_VERSION) {\n    warnOnce(\n      `The Storefront API version that you're using is different than the version this build of Hydrogen React is targeting.` +\n        `\\nYou may run into unexpected errors if these versions don't match. Received version: \"${storefrontApiVersion}\"; expected version \"${SFAPI_VERSION}\"`,\n    );\n  }\n\n  // only warn if not in a browser environment\n  if (\n    __HYDROGEN_DEV__ &&\n    !privateStorefrontToken &&\n    !globalThis.document &&\n    !isMockShop(storeDomain)\n  ) {\n    warnOnce(\n      `Using a private storefront token is recommended for server environments.` +\n        `\\nRefer to the authentication https://shopify.dev/api/storefront#authentication documentation for more details.`,\n    );\n  }\n\n  // only warn if in a browser environment and you're using the privateStorefrontToken\n  if (__HYDROGEN_DEV__ && privateStorefrontToken && globalThis.document) {\n    warnOnce(\n      'You are attempting to use a private token in an environment where it can be easily accessed by anyone.' +\n        '\\nThis is a security risk; please use the public token and the `publicStorefrontToken` prop',\n    );\n  }\n\n  const getShopifyDomain: StorefrontClientReturn['getShopifyDomain'] = (\n    overrideProps,\n  ) => {\n    const domain = overrideProps?.storeDomain ?? storeDomain;\n    return domain.includes('://') ? domain : `https://${domain}`;\n  };\n\n  return {\n    getShopifyDomain,\n    getStorefrontApiUrl(overrideProps): string {\n      const domain = getShopifyDomain(overrideProps);\n      const apiUrl = domain + (domain.endsWith('/') ? 'api' : '/api');\n\n      if (isMockShop(domain)) return apiUrl;\n\n      return `${apiUrl}/${\n        overrideProps?.storefrontApiVersion ?? storefrontApiVersion\n      }/graphql.json`;\n    },\n    getPrivateTokenHeaders(overrideProps): Record<string, string> {\n      if (\n        !privateStorefrontToken &&\n        !overrideProps?.privateStorefrontToken &&\n        !isMockShop(storeDomain)\n      ) {\n        throw new Error(\n          H2_PREFIX_ERROR +\n            'You did not pass in a `privateStorefrontToken` while using `createStorefrontClient()` or `getPrivateTokenHeaders()`',\n        );\n      }\n\n      if (__HYDROGEN_DEV__ && !overrideProps?.buyerIp) {\n        warnOnce(\n          'It is recommended to pass in the `buyerIp` property which improves analytics and data in the admin.',\n        );\n      }\n\n      const finalContentType = overrideProps?.contentType ?? contentType;\n\n      return {\n        // default to json\n        'content-type':\n          finalContentType === 'graphql'\n            ? 'application/graphql'\n            : 'application/json',\n        'X-SDK-Variant': 'hydrogen-react',\n        'X-SDK-Variant-Source': 'react',\n        'X-SDK-Version': storefrontApiVersion,\n        'Shopify-Storefront-Private-Token':\n          overrideProps?.privateStorefrontToken ?? privateStorefrontToken ?? '',\n        ...(overrideProps?.buyerIp\n          ? {'Shopify-Storefront-Buyer-IP': overrideProps.buyerIp}\n          : {}),\n      };\n    },\n    getPublicTokenHeaders(overrideProps): Record<string, string> {\n      if (\n        !publicStorefrontToken &&\n        !overrideProps?.publicStorefrontToken &&\n        !isMockShop(storeDomain)\n      ) {\n        throw new Error(\n          H2_PREFIX_ERROR +\n            'You did not pass in a `publicStorefrontToken` while using `createStorefrontClient()` or `getPublicTokenHeaders()`',\n        );\n      }\n\n      const finalContentType =\n        overrideProps?.contentType ?? contentType ?? 'json';\n\n      return getPublicTokenHeadersRaw(\n        finalContentType,\n        storefrontApiVersion,\n        overrideProps?.publicStorefrontToken ?? publicStorefrontToken ?? '',\n      );\n    },\n  };\n}\n\nexport function getPublicTokenHeadersRaw(\n  contentType: 'graphql' | 'json',\n  storefrontApiVersion: string,\n  accessToken: string,\n): {\n  'content-type': string;\n  'X-SDK-Variant': string;\n  'X-SDK-Variant-Source': string;\n  'X-SDK-Version': string;\n  'X-Shopify-Storefront-Access-Token': string;\n} {\n  return {\n    // default to json\n    'content-type':\n      contentType === 'graphql' ? 'application/graphql' : 'application/json',\n    'X-SDK-Variant': 'hydrogen-react',\n    'X-SDK-Variant-Source': 'react',\n    'X-SDK-Version': storefrontApiVersion,\n    'X-Shopify-Storefront-Access-Token': accessToken,\n  };\n}\n\nconst warnings = new Set<string>();\nconst H2_PREFIX_ERROR = '[h2:error:createStorefrontClient] ';\nconst warnOnce = (string: string, type: 'warn' | 'info' = 'warn'): void => {\n  if (!warnings.has(string)) {\n    console[type](`[h2:${type}:createStorefrontClient] ` + string);\n    warnings.add(string);\n  }\n};\n\ntype OverrideTokenHeaderProps = Partial<\n  Pick<StorefrontClientProps, 'contentType'>\n>;\n\ntype StorefrontClientReturn = {\n  /**\n   * Creates the fully-qualified URL to your myshopify.com domain.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getShopifyDomain({...})`:\n   *\n   * - `storeDomain`\n   */\n  getShopifyDomain: (\n    props?: Partial<Pick<StorefrontClientProps, 'storeDomain'>>,\n  ) => string;\n  /**\n   * Creates the fully-qualified URL to your store's GraphQL endpoint.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getStorefrontApiUrl({...})`:\n   *\n   * - `storeDomain`\n   * - `storefrontApiVersion`\n   */\n  getStorefrontApiUrl: (\n    props?: Partial<\n      Pick<StorefrontClientProps, 'storeDomain' | 'storefrontApiVersion'>\n    >,\n  ) => string;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This method uses the private Server-to-Server token which reduces the chance of throttling but must not be exposed to clients. Server-side calls should prefer using this over `getPublicTokenHeaders()`.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getPrivateTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `privateStorefrontToken`\n   * - `buyerIp`\n   *\n   * Note that `contentType` defaults to what you configured in `createStorefrontClient({...})` and defaults to `'json'`, but a specific call may require using `graphql`. When using `JSON.stringify()` on the `body`, use `'json'`; otherwise, use `'graphql'`.\n   */\n  getPrivateTokenHeaders: (\n    props?: OverrideTokenHeaderProps &\n      Pick<StorefrontClientProps, 'privateStorefrontToken'> & {\n        /**\n         * The client's IP address. Passing this to the Storefront API when using a server-to-server token will help improve your store's analytics data.\n         */\n        buyerIp?: string;\n      },\n  ) => Record<string, string>;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This method uses the public token which increases the chance of throttling but also can be exposed to clients. Server-side calls should prefer using `getPublicTokenHeaders()`.\n   *\n   * By default, it will use the config you passed in when calling `createStorefrontClient()`. However, you can override the following settings on each invocation of `getPublicTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `publicStorefrontToken`\n   *\n   * Note that `contentType` defaults to what you configured in `createStorefrontClient({...})` and defaults to `'json'`, but a specific call may require using `graphql`. When using `JSON.stringify()` on the `body`, use `'json'`; otherwise, use `'graphql'`.\n   */\n  getPublicTokenHeaders: (\n    props?: OverrideTokenHeaderProps &\n      Pick<StorefrontClientProps, 'publicStorefrontToken'>,\n  ) => Record<string, string>;\n};\n","import {createContext, useContext, useMemo, type ReactNode} from 'react';\nimport type {LanguageCode, CountryCode} from './storefront-api-types.js';\nimport {SFAPI_VERSION} from './storefront-api-constants.js';\nimport {getPublicTokenHeadersRaw} from './storefront-client.js';\n\nexport const defaultShopifyContext: ShopifyContextValue = {\n  storeDomain: 'test',\n  storefrontToken: 'abc123',\n  storefrontApiVersion: SFAPI_VERSION,\n  countryIsoCode: 'US',\n  languageIsoCode: 'EN',\n  getStorefrontApiUrl() {\n    return '';\n  },\n  getPublicTokenHeaders() {\n    return {};\n  },\n  getShopifyDomain() {\n    return '';\n  },\n};\n\nconst ShopifyContext = createContext<ShopifyContextValue>(\n  defaultShopifyContext,\n);\n\n/**\n * The `<ShopifyProvider/>` component enables use of the `useShop()` hook. The component should wrap your app.\n */\nexport function ShopifyProvider({\n  children,\n  ...shopifyConfig\n}: ShopifyProviderProps): JSX.Element {\n  if (\n    !shopifyConfig.countryIsoCode ||\n    !shopifyConfig.languageIsoCode ||\n    !shopifyConfig.storeDomain ||\n    !shopifyConfig.storefrontToken ||\n    !shopifyConfig.storefrontApiVersion\n  ) {\n    throw new Error(\n      `Please provide the necessary props to '<ShopifyProvider/>'`,\n    );\n  }\n\n  if (shopifyConfig.storefrontApiVersion !== SFAPI_VERSION) {\n    console.warn(\n      `<ShopifyProvider/>: This version of Hydrogen React is built for Shopify's Storefront API version ${SFAPI_VERSION}, but it looks like you're using version ${shopifyConfig.storefrontApiVersion}. There may be issues or bugs if you use a mismatched version of Hydrogen React and the Storefront API.`,\n    );\n  }\n\n  const finalConfig = useMemo<ShopifyContextValue>(() => {\n    function getShopifyDomain(overrideProps?: {storeDomain?: string}): string {\n      const domain = overrideProps?.storeDomain ?? shopifyConfig.storeDomain;\n      return domain.includes('://') ? domain : `https://${domain}`;\n    }\n\n    return {\n      ...shopifyConfig,\n      getPublicTokenHeaders(overrideProps): Record<string, string> {\n        return getPublicTokenHeadersRaw(\n          overrideProps.contentType,\n          shopifyConfig.storefrontApiVersion,\n          overrideProps.storefrontToken ?? shopifyConfig.storefrontToken,\n        );\n      },\n      getShopifyDomain,\n      getStorefrontApiUrl(overrideProps): string {\n        const finalDomainUrl = getShopifyDomain({\n          storeDomain: overrideProps?.storeDomain ?? shopifyConfig.storeDomain,\n        });\n        return `${finalDomainUrl}${\n          finalDomainUrl.endsWith('/') ? '' : '/'\n        }api/${\n          overrideProps?.storefrontApiVersion ??\n          shopifyConfig.storefrontApiVersion\n        }/graphql.json`;\n      },\n    };\n  }, [shopifyConfig]);\n\n  return (\n    <ShopifyContext.Provider value={finalConfig}>\n      {children}\n    </ShopifyContext.Provider>\n  );\n}\n\n/**\n * Provides access to the `shopifyConfig` prop of `<ShopifyProvider/>`. Must be a descendent of `<ShopifyProvider/>`.\n */\nexport function useShop(): ShopifyContextValue {\n  const shopContext = useContext(ShopifyContext);\n  if (!shopContext) {\n    throw new Error(`'useShop()' must be a descendent of <ShopifyProvider/>`);\n  }\n  return shopContext;\n}\n\nexport interface ShopifyProviderBase {\n  /** The globally-unique identifier for the Shop */\n  storefrontId?: string;\n  /** The full domain of your Shopify storefront URL (eg: the complete string of `{subdomain}.myshopify.com`). */\n  storeDomain: string;\n  /** The Storefront API public access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  storefrontToken: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen React was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details.  */\n  storefrontApiVersion: string;\n  /**\n   * The code designating a country, which generally follows ISO 3166-1 alpha-2 guidelines. If a territory doesn't have a country code value in the `CountryCode` enum, it might be considered a subdivision of another country. For example, the territories associated with Spain are represented by the country code `ES`, and the territories associated with the United States of America are represented by the country code `US`.\n   */\n  countryIsoCode: CountryCode;\n  /**\n   * `ISO 369` language codes supported by Shopify.\n   */\n  languageIsoCode: LanguageCode;\n}\n\n/**\n * Shopify-specific values that are used in various Hydrogen React components and hooks.\n */\nexport interface ShopifyProviderProps extends ShopifyProviderBase {\n  /** React children to render. */\n  children?: ReactNode;\n}\n\nexport interface ShopifyContextValue\n  extends ShopifyProviderBase,\n    ShopifyContextReturn {}\n\ntype ShopifyContextReturn = {\n  /**\n   * Creates the fully-qualified URL to your store's GraphQL endpoint.\n   *\n   * By default, it will use the config you passed in when creating `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getStorefrontApiUrl({...})`:\n   *\n   * - `storeDomain`\n   * - `storefrontApiVersion`\n   */\n  getStorefrontApiUrl: (props?: GetStorefrontApiUrlProps) => string;\n  /**\n   * Returns an object that contains headers that are needed for each query to Storefront API GraphQL endpoint. This uses the public Storefront API token.\n   *\n   * By default, it will use the config you passed in when creating `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getPublicTokenHeaders({...})`:\n   *\n   * - `contentType`\n   * - `storefrontToken`\n   *\n   */\n  getPublicTokenHeaders: (\n    props: GetPublicTokenHeadersProps,\n  ) => Record<string, string>;\n  /**\n   * Creates the fully-qualified URL to your myshopify.com domain.\n   *\n   * By default, it will use the config you passed in when calling `<ShopifyProvider/>`. However, you can override the following settings on each invocation of `getShopifyDomain({...})`:\n   *\n   * - `storeDomain`\n   */\n  getShopifyDomain: (props?: GetShopifyDomainProps) => string;\n};\n\ntype GetStorefrontApiUrlProps = {\n  /** The host name of the domain (eg: `{shop}.myshopify.com`). */\n  storeDomain?: string;\n  /** The Storefront API version. This should almost always be the same as the version Hydrogen-UI was built for. Learn more about Shopify [API versioning](https://shopify.dev/api/usage/versioning) for more details. */\n  storefrontApiVersion?: string;\n};\n\ntype GetPublicTokenHeadersProps = {\n  /**\n   * Customizes which `\"content-type\"` header is added when using `getPrivateTokenHeaders()` and `getPublicTokenHeaders()`. When fetching with a `JSON.stringify()`-ed `body`, use `\"json\"`. When fetching with a `body` that is a plain string, use `\"graphql\"`. Defaults to `\"json\"`\n   */\n  contentType: 'json' | 'graphql';\n  /** The Storefront API access token. Refer to the [authentication](https://shopify.dev/api/storefront#authentication) documentation for more details. */\n  storefrontToken?: string;\n};\n\ntype GetShopifyDomainProps = {storeDomain?: string};\n","export const CART_ID_STORAGE_KEY = 'shopifyCartId';\nexport const CART_COOKIE_TTL_DAYS = 14;\n\n// Needed for cart analytics within Shopify\nexport const SHOPIFY_STOREFRONT_ID_HEADER = 'Shopify-Storefront-Id';\nexport const SHOPIFY_STOREFRONT_Y_HEADER = 'Shopify-Storefront-Y';\nexport const SHOPIFY_STOREFRONT_S_HEADER = 'Shopify-Storefront-S';\nexport const SHOPIFY_Y = '_shopify_y';\nexport const SHOPIFY_S = '_shopify_s';\n","// src/cookie.ts\nvar g = new Set([\n  \"domain\",\n  \"path\",\n  \"max-age\",\n  \"expires\",\n  \"samesite\",\n  \"secure\",\n  \"httponly\"\n]);\nfunction u(a) {\n  let r = {}, e, t, n = 0, m = a.split(/;\\s*/g), s, i;\n  for (; n < m.length; n++)\n    if (t = m[n], e = t.indexOf(\"=\"), ~e) {\n      if (s = t.substring(0, e++).trim(), i = t.substring(e).trim(), i[0] === '\"' && (i = i.substring(1, i.length - 1)), ~i.indexOf(\"%\"))\n        try {\n          i = decodeURIComponent(i);\n        } catch (f) {\n        }\n      g.has(t = s.toLowerCase()) ? t === \"expires\" ? r.expires = new Date(i) : t === \"max-age\" ? r.maxage = +i : r[t] = i : r[s] = i;\n    } else\n      (s = t.trim().toLowerCase()) && (s === \"httponly\" || s === \"secure\") && (r[s] = !0);\n  return r;\n}\nfunction l(a, r, e = {}) {\n  let t = a + \"=\" + encodeURIComponent(r);\n  return e.expires && (t += \"; Expires=\" + new Date(e.expires).toUTCString()), e.maxage != null && e.maxage >= 0 && (t += \"; Max-Age=\" + (e.maxage | 0)), e.domain && (t += \"; Domain=\" + e.domain), e.path && (t += \"; Path=\" + e.path), e.samesite && (t += \"; SameSite=\" + e.samesite), (e.secure || e.samesite === \"None\") && (t += \"; Secure\"), e.httponly && (t += \"; HttpOnly\"), t;\n}\nexport {\n  u as parse,\n  l as stringify\n};\n","import {parse} from 'worktop/cookie';\nimport {ShopifyCookies} from './analytics-types.js';\nimport {SHOPIFY_Y, SHOPIFY_S} from './cart-constants.js';\n\nconst tokenHash = 'xxxx-4xxx-xxxx-xxxxxxxxxxxx';\n\nexport function buildUUID(): string {\n  let hash = '';\n\n  try {\n    const crypto: Crypto = window.crypto;\n    const randomValuesArray = new Uint16Array(31);\n    crypto.getRandomValues(randomValuesArray);\n\n    // Generate a strong UUID\n    let i = 0;\n    hash = tokenHash\n      .replace(/[x]/g, (c: string): string => {\n        const r = randomValuesArray[i] % 16;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        i++;\n        return v.toString(16);\n      })\n      .toUpperCase();\n  } catch (err) {\n    // crypto not available, generate weak UUID\n    hash = tokenHash\n      .replace(/[x]/g, (c: string): string => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      })\n      .toUpperCase();\n  }\n\n  return `${hexTime()}-${hash}`;\n}\n\nexport function hexTime(): string {\n  // 32 bit representations of new Date().getTime() and performance.now()\n  let dateNumber = 0;\n  let perfNumber = 0;\n\n  // Result of zero-fill right shift is always positive\n  dateNumber = new Date().getTime() >>> 0;\n\n  try {\n    perfNumber = performance.now() >>> 0;\n  } catch (err) {\n    perfNumber = 0;\n  }\n\n  const output = Math.abs(dateNumber + perfNumber)\n    .toString(16)\n    .toLowerCase();\n\n  // Ensure the output is exactly 8 characters\n  return output.padStart(8, '0');\n}\n\nexport function getShopifyCookies(cookies: string): ShopifyCookies {\n  const cookieData = parse(cookies);\n  return {\n    [SHOPIFY_Y]: cookieData[SHOPIFY_Y] || '',\n    [SHOPIFY_S]: cookieData[SHOPIFY_S] || '',\n  };\n}\n","import {useState, useCallback} from 'react';\nimport {useShop} from './ShopifyProvider.js';\nimport {flattenConnection} from './flatten-connection.js';\nimport {CartInput, Cart as CartType} from './storefront-api-types.js';\nimport {CartCreate, defaultCartFragment} from './cart-queries.js';\nimport {Cart} from './cart-types.js';\nimport {\n  SHOPIFY_STOREFRONT_ID_HEADER,\n  SHOPIFY_STOREFRONT_Y_HEADER,\n  SHOPIFY_STOREFRONT_S_HEADER,\n  SHOPIFY_Y,\n  SHOPIFY_S,\n} from './cart-constants.js';\nimport type {StorefrontApiResponseOkPartial} from './storefront-api-response.types.js';\nimport {getShopifyCookies} from './cookies-utils.js';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useCartFetch() {\n  const {storefrontId, getPublicTokenHeaders, getStorefrontApiUrl} = useShop();\n\n  return useCallback(\n    <ReturnDataGeneric,>({\n      query,\n      variables,\n    }: {\n      query: string;\n      variables: Record<string, unknown>;\n    }): Promise<StorefrontApiResponseOkPartial<ReturnDataGeneric>> => {\n      const headers = getPublicTokenHeaders({contentType: 'json'});\n\n      if (storefrontId) {\n        headers[SHOPIFY_STOREFRONT_ID_HEADER] = storefrontId;\n      }\n\n      // Find Shopify cookies\n      const cookieData = getShopifyCookies(document.cookie);\n      headers[SHOPIFY_STOREFRONT_Y_HEADER] = cookieData[SHOPIFY_Y];\n      headers[SHOPIFY_STOREFRONT_S_HEADER] = cookieData[SHOPIFY_S];\n\n      return fetch(getStorefrontApiUrl(), {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          query: query.toString(),\n          variables,\n        }),\n      })\n        .then(\n          (res) =>\n            res.json() as StorefrontApiResponseOkPartial<ReturnDataGeneric>,\n        )\n        .catch((error) => {\n          return {\n            data: undefined,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            errors: error?.toString(),\n          };\n        });\n    },\n    [getPublicTokenHeaders, storefrontId, getStorefrontApiUrl],\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useInstantCheckout() {\n  const [cart, updateCart] = useState<Cart | undefined>();\n  const [checkoutUrl, updateCheckoutUrl] = useState<Cart['checkoutUrl']>();\n  const [error, updateError] = useState<string | undefined>();\n\n  const fetch = useCartFetch();\n\n  const createInstantCheckout = useCallback(\n    async (cartInput: CartInput) => {\n      const {data, errors} = await fetch<{\n        cartCreate: {cart: CartType};\n      }>({\n        query: CartCreate(defaultCartFragment),\n        variables: {\n          input: cartInput,\n        },\n      });\n\n      if (errors) {\n        updateError(errors.toString());\n        updateCart(undefined);\n        updateCheckoutUrl(undefined);\n      }\n\n      if (data?.cartCreate?.cart) {\n        const dataCart = data.cartCreate.cart;\n        updateCart({\n          ...dataCart,\n          lines: flattenConnection(dataCart.lines),\n          note: dataCart.note ?? undefined,\n        });\n        updateCheckoutUrl(dataCart.checkoutUrl);\n      }\n    },\n    [fetch],\n  );\n\n  return {cart, checkoutUrl, error, createInstantCheckout};\n}\n","import {useCallback, useMemo} from 'react';\nimport {\n  AttributeInput,\n  CartBuyerIdentityInput,\n  CartInput,\n  CartLineInput,\n  CartLineUpdateInput,\n  CountryCode,\n  LanguageCode,\n  Cart as CartType,\n  MutationCartDiscountCodesUpdateArgs,\n  MutationCartNoteUpdateArgs,\n} from './storefront-api-types.js';\nimport {\n  CartAttributesUpdate,\n  CartBuyerIdentityUpdate,\n  CartCreate,\n  CartDiscountCodesUpdate,\n  CartLineAdd,\n  CartLineRemove,\n  CartLineUpdate,\n  CartNoteUpdate,\n  CartQuery,\n} from './cart-queries.js';\nimport {useCartFetch} from './cart-hooks.js';\nimport {PartialDeep} from 'type-fest';\n\ntype CartResponse = PartialDeep<CartType, {recurseIntoArrays: true}>;\n\n/**\n * The `useCartActions` hook returns helper graphql functions for Storefront Cart API\n *\n * See [cart API graphql mutations](https://shopify.dev/api/storefront/2024-10/objects/Cart)\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useCartActions({\n  numCartLines,\n  cartFragment,\n  countryCode = 'US',\n  languageCode = 'EN',\n}: {\n  /**  Maximum number of cart lines to fetch. Defaults to 250 cart lines. */\n  numCartLines?: number;\n  /** A fragment used to query the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart) for all queries and mutations. A default value is used if no argument is provided. */\n  cartFragment: string;\n  /** The ISO country code for i18n. Default to `US` */\n  countryCode?: CountryCode;\n  /** The ISO language code for i18n. Default to `EN` */\n  languageCode?: LanguageCode;\n}) {\n  const fetchCart = useCartFetch();\n\n  const cartFetch = useCallback(\n    (cartId: string) => {\n      return fetchCart<{cart: CartResponse}>({\n        query: CartQuery(cartFragment),\n        variables: {\n          id: cartId,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [fetchCart, cartFragment, numCartLines, countryCode, languageCode],\n  );\n\n  const cartCreate = useCallback(\n    (cart: CartInput) => {\n      return fetchCart<{cartCreate: {cart: CartResponse}}>({\n        query: CartCreate(cartFragment),\n        variables: {\n          input: cart,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const cartLineAdd = useCallback(\n    (cartId: string, lines: CartLineInput[]) => {\n      return fetchCart<{cartLinesAdd: {cart: CartResponse}}>({\n        query: CartLineAdd(cartFragment),\n        variables: {\n          cartId,\n          lines,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const cartLineUpdate = useCallback(\n    (cartId: string, lines: CartLineUpdateInput[]) => {\n      return fetchCart<{cartLinesUpdate: {cart: CartResponse}}>({\n        query: CartLineUpdate(cartFragment),\n        variables: {\n          cartId,\n          lines,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const cartLineRemove = useCallback(\n    (cartId: string, lines: string[]) => {\n      return fetchCart<{cartLinesRemove: {cart: CartResponse}}>({\n        query: CartLineRemove(cartFragment),\n        variables: {\n          cartId,\n          lines,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const noteUpdate = useCallback(\n    (cartId: string, note: MutationCartNoteUpdateArgs['note']) => {\n      return fetchCart<{cartNoteUpdate: {cart: CartResponse}}>({\n        query: CartNoteUpdate(cartFragment),\n        variables: {\n          cartId,\n          note,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [fetchCart, cartFragment, numCartLines, countryCode, languageCode],\n  );\n\n  const buyerIdentityUpdate = useCallback(\n    (cartId: string, buyerIdentity: CartBuyerIdentityInput) => {\n      return fetchCart<{cartBuyerIdentityUpdate: {cart: CartResponse}}>({\n        query: CartBuyerIdentityUpdate(cartFragment),\n        variables: {\n          cartId,\n          buyerIdentity,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const cartAttributesUpdate = useCallback(\n    (cartId: string, attributes: AttributeInput[]) => {\n      return fetchCart<{cartAttributesUpdate: {cart: CartResponse}}>({\n        query: CartAttributesUpdate(cartFragment),\n        variables: {\n          cartId,\n          attributes,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  const discountCodesUpdate = useCallback(\n    (\n      cartId: string,\n      discountCodes: MutationCartDiscountCodesUpdateArgs['discountCodes'],\n    ) => {\n      return fetchCart<{cartDiscountCodesUpdate: {cart: CartResponse}}>({\n        query: CartDiscountCodesUpdate(cartFragment),\n        variables: {\n          cartId,\n          discountCodes,\n          numCartLines,\n          country: countryCode,\n          language: languageCode,\n        },\n      });\n    },\n    [cartFragment, countryCode, fetchCart, numCartLines, languageCode],\n  );\n\n  return useMemo(\n    () => ({\n      cartFetch,\n      cartCreate,\n      cartLineAdd,\n      cartLineUpdate,\n      cartLineRemove,\n      noteUpdate,\n      buyerIdentityUpdate,\n      cartAttributesUpdate,\n      discountCodesUpdate,\n      cartFragment,\n    }),\n    [\n      cartFetch,\n      cartCreate,\n      cartLineAdd,\n      cartLineUpdate,\n      cartLineRemove,\n      noteUpdate,\n      buyerIdentityUpdate,\n      cartAttributesUpdate,\n      discountCodesUpdate,\n      cartFragment,\n    ],\n  );\n}\n","import {useMachine} from '@xstate/react/fsm';\nimport {createMachine, assign, StateMachine} from '@xstate/fsm';\nimport {\n  Cart,\n  CartMachineActionEvent,\n  CartMachineActions,\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineFetchResultEvent,\n  CartMachineTypeState,\n} from './cart-types.js';\nimport {flattenConnection} from './flatten-connection.js';\nimport {useCartActions} from './useCartActions.js';\nimport {useMemo} from 'react';\nimport {InitEvent} from '@xstate/fsm/lib/types.js';\nimport {\n  CountryCode,\n  Cart as CartType,\n  LanguageCode,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nfunction invokeCart(\n  action: keyof CartMachineActions,\n  options?: {\n    entryActions?: [keyof CartMachineActions];\n    resolveTarget?: CartMachineTypeState['value'];\n    errorTarget?: CartMachineTypeState['value'];\n    exitActions?: [keyof CartMachineActions];\n  },\n): StateMachine.Config<CartMachineContext, CartMachineEvent>['states']['on'] {\n  return {\n    entry: [\n      ...(options?.entryActions || []),\n      assign({\n        lastValidCart: (context) => context?.cart,\n      }),\n      'onCartActionEntry',\n      'onCartActionOptimisticUI',\n      action,\n    ],\n    on: {\n      RESOLVE: {\n        target: options?.resolveTarget || 'idle',\n        actions: [\n          assign({\n            prevCart: (context) => context?.lastValidCart,\n            cart: (_, event) => event?.payload?.cart,\n            rawCartResult: (_, event) => event?.payload?.rawCartResult,\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            errors: (_) => undefined,\n          }),\n        ],\n      },\n      ERROR: {\n        target: options?.errorTarget || 'error',\n        actions: [\n          assign({\n            prevCart: (context) => context?.lastValidCart,\n            cart: (context) => context?.lastValidCart,\n            errors: (_, event) => event?.payload?.errors,\n          }),\n        ],\n      },\n      CART_COMPLETED: {\n        target: 'cartCompleted',\n        actions: assign({\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          prevCart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          cart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          lastValidCart: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          rawCartResult: (_) => undefined,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          errors: (_) => undefined,\n        }),\n      },\n    },\n    exit: ['onCartActionComplete', ...(options?.exitActions || [])],\n  };\n}\n\nconst INITIALIZING_CART_EVENTS: StateMachine.Machine<\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState\n>['config']['states']['uninitialized']['on'] = {\n  CART_FETCH: {\n    target: 'cartFetching',\n  },\n  CART_CREATE: {\n    target: 'cartCreating',\n  },\n  CART_SET: {\n    target: 'idle',\n    actions: [\n      assign({\n        rawCartResult: (_, event) => event.payload.cart,\n        cart: (_, event) => cartFromGraphQL(event.payload.cart),\n      }),\n    ],\n  },\n};\n\nconst UPDATING_CART_EVENTS: StateMachine.Machine<\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState\n>['config']['states']['idle']['on'] = {\n  CARTLINE_ADD: {\n    target: 'cartLineAdding',\n  },\n  CARTLINE_UPDATE: {\n    target: 'cartLineUpdating',\n  },\n  CARTLINE_REMOVE: {\n    target: 'cartLineRemoving',\n  },\n  NOTE_UPDATE: {\n    target: 'noteUpdating',\n  },\n  BUYER_IDENTITY_UPDATE: {\n    target: 'buyerIdentityUpdating',\n  },\n  CART_ATTRIBUTES_UPDATE: {\n    target: 'cartAttributesUpdating',\n  },\n  DISCOUNT_CODES_UPDATE: {\n    target: 'discountCodesUpdating',\n  },\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createCartMachine(\n  initialCart?: PartialDeep<CartType, {recurseIntoArrays: true}>,\n) {\n  return createMachine<\n    CartMachineContext,\n    CartMachineEvent,\n    CartMachineTypeState\n  >({\n    id: 'Cart',\n    initial: initialCart ? 'idle' : 'uninitialized',\n    context: {\n      cart: initialCart && cartFromGraphQL(initialCart),\n    },\n    states: {\n      uninitialized: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      cartCompleted: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      initializationError: {\n        on: INITIALIZING_CART_EVENTS,\n      },\n      idle: {\n        on: {...INITIALIZING_CART_EVENTS, ...UPDATING_CART_EVENTS},\n      },\n      error: {\n        on: {...INITIALIZING_CART_EVENTS, ...UPDATING_CART_EVENTS},\n      },\n      cartFetching: invokeCart('cartFetchAction', {\n        errorTarget: 'initializationError',\n      }),\n      cartCreating: invokeCart('cartCreateAction', {\n        errorTarget: 'initializationError',\n      }),\n      cartLineRemoving: invokeCart('cartLineRemoveAction'),\n      cartLineUpdating: invokeCart('cartLineUpdateAction'),\n      cartLineAdding: invokeCart('cartLineAddAction'),\n      noteUpdating: invokeCart('noteUpdateAction'),\n      buyerIdentityUpdating: invokeCart('buyerIdentityUpdateAction'),\n      cartAttributesUpdating: invokeCart('cartAttributesUpdateAction'),\n      discountCodesUpdating: invokeCart('discountCodesUpdateAction'),\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useCartAPIStateMachine({\n  numCartLines,\n  onCartActionEntry,\n  onCartActionOptimisticUI,\n  onCartActionComplete,\n  data: cart,\n  cartFragment,\n  countryCode,\n  languageCode,\n}: {\n  /**  Maximum number of cart lines to fetch. Defaults to 250 cart lines. */\n  numCartLines?: number;\n  /** A callback that is invoked just before a Cart API action executes. */\n  onCartActionEntry?: (\n    context: CartMachineContext,\n    event: CartMachineActionEvent,\n  ) => void;\n  /** A callback that is invoked after executing the entry actions for optimistic UI changes.  */\n  onCartActionOptimisticUI?: (\n    context: CartMachineContext,\n    event: CartMachineEvent,\n  ) => Partial<CartMachineContext>;\n  /** A callback that is invoked after a Cart API completes. */\n  onCartActionComplete?: (\n    context: CartMachineContext,\n    event: CartMachineFetchResultEvent,\n  ) => void;\n  /** An object with fields that correspond to the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart). */\n  data?: PartialDeep<CartType, {recurseIntoArrays: true}>;\n  /** A fragment used to query the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart) for all queries and mutations. A default value is used if no argument is provided. */\n  cartFragment: string;\n  /** The ISO country code for i18n. */\n  countryCode?: CountryCode;\n  /** The ISO language code for i18n. */\n  languageCode?: LanguageCode;\n}) {\n  const {\n    cartFetch,\n    cartCreate,\n    cartLineAdd,\n    cartLineUpdate,\n    cartLineRemove,\n    noteUpdate,\n    buyerIdentityUpdate,\n    cartAttributesUpdate,\n    discountCodesUpdate,\n  } = useCartActions({\n    numCartLines,\n    cartFragment,\n    countryCode,\n    languageCode,\n  });\n\n  const cartMachine = useMemo(() => createCartMachine(cart), [cart]);\n\n  const [state, send, service] = useMachine(cartMachine, {\n    actions: {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartFetchAction: async (_, event) => {\n        if (event.type !== 'CART_FETCH') return;\n\n        const {data, errors} = await cartFetch(event?.payload?.cartId);\n        const resultEvent = eventFromFetchResult(event, data?.cart, errors);\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartCreateAction: async (_, event) => {\n        if (event.type !== 'CART_CREATE') return;\n\n        const {data, errors} = await cartCreate(event?.payload);\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartCreate?.cart,\n          errors,\n        );\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineAddAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_ADD' || !context?.cart?.id) return;\n\n        const {data, errors} = await cartLineAdd(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesAdd?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineUpdateAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_UPDATE' || !context?.cart?.id) return;\n        const {data, errors} = await cartLineUpdate(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartLineRemoveAction: async (context, event) => {\n        if (event.type !== 'CARTLINE_REMOVE' || !context?.cart?.id) return;\n        const {data, errors} = await cartLineRemove(\n          context.cart.id,\n          event.payload.lines,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartLinesRemove?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      noteUpdateAction: async (context, event) => {\n        if (event.type !== 'NOTE_UPDATE' || !context?.cart?.id) return;\n        const {data, errors} = await noteUpdate(\n          context.cart.id,\n          event.payload.note,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartNoteUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      buyerIdentityUpdateAction: async (context, event) => {\n        if (event.type !== 'BUYER_IDENTITY_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await buyerIdentityUpdate(\n          context.cart.id,\n          event.payload.buyerIdentity,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartBuyerIdentityUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cartAttributesUpdateAction: async (context, event) => {\n        if (event.type !== 'CART_ATTRIBUTES_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await cartAttributesUpdate(\n          context.cart.id,\n          event.payload.attributes,\n        );\n\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartAttributesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      discountCodesUpdateAction: async (context, event) => {\n        if (event.type !== 'DISCOUNT_CODES_UPDATE' || !context?.cart?.id)\n          return;\n        const {data, errors} = await discountCodesUpdate(\n          context.cart.id,\n          event.payload.discountCodes,\n        );\n        const resultEvent = eventFromFetchResult(\n          event,\n          data?.cartDiscountCodesUpdate?.cart,\n          errors,\n        );\n\n        send(resultEvent);\n      },\n      ...(onCartActionEntry && {\n        onCartActionEntry: (context, event): void => {\n          if (isCartActionEvent(event)) {\n            onCartActionEntry(context, event);\n          }\n        },\n      }),\n      ...(onCartActionOptimisticUI && {\n        onCartActionOptimisticUI: assign((context, event) => {\n          return onCartActionOptimisticUI(context, event);\n        }),\n      }),\n      ...(onCartActionComplete && {\n        onCartActionComplete: (context, event): void => {\n          if (isCartFetchResultEvent(event)) {\n            onCartActionComplete(context, event);\n          }\n        },\n      }),\n    } as CartMachineActions,\n  });\n\n  return useMemo(() => [state, send, service] as const, [state, send, service]);\n}\n\nexport function cartFromGraphQL(\n  cart: PartialDeep<CartType, {recurseIntoArrays: true}>,\n): Cart {\n  return {\n    ...cart,\n    lines: flattenConnection(cart?.lines),\n    note: cart.note ?? undefined,\n  };\n}\n\nfunction eventFromFetchResult(\n  cartActionEvent: CartMachineActionEvent,\n  cart?: PartialDeep<CartType, {recurseIntoArrays: true}> | null,\n  errors?: unknown,\n): CartMachineFetchResultEvent {\n  if (errors) {\n    return {type: 'ERROR', payload: {errors, cartActionEvent}};\n  }\n\n  if (!cart) {\n    return {\n      type: 'CART_COMPLETED',\n      payload: {\n        cartActionEvent,\n      },\n    };\n  }\n\n  return {\n    type: 'RESOLVE',\n    payload: {\n      cart: cartFromGraphQL(cart),\n      rawCartResult: cart,\n      cartActionEvent,\n    },\n  };\n}\n\nfunction isCartActionEvent(\n  event: CartMachineEvent | InitEvent,\n): event is CartMachineActionEvent {\n  return (\n    event.type === 'CART_CREATE' ||\n    event.type === 'CARTLINE_ADD' ||\n    event.type === 'CARTLINE_UPDATE' ||\n    event.type === 'CARTLINE_REMOVE' ||\n    event.type === 'NOTE_UPDATE' ||\n    event.type === 'BUYER_IDENTITY_UPDATE' ||\n    event.type === 'CART_ATTRIBUTES_UPDATE' ||\n    event.type === 'DISCOUNT_CODES_UPDATE'\n  );\n}\n\nfunction isCartFetchResultEvent(\n  event: CartMachineEvent | InitEvent,\n): event is CartMachineFetchResultEvent {\n  return (\n    event.type === 'RESOLVE' ||\n    event.type === 'ERROR' ||\n    event.type === 'CART_COMPLETED'\n  );\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useTransition,\n  createContext,\n  useContext,\n} from 'react';\nimport {\n  AttributeInput,\n  CartBuyerIdentityInput,\n  CartInput,\n  CartLineInput,\n  CartLineUpdateInput,\n  CountryCode,\n  LanguageCode,\n  Cart as CartType,\n  MutationCartNoteUpdateArgs,\n} from './storefront-api-types.js';\nimport {\n  BuyerIdentityUpdateEvent,\n  CartMachineContext,\n  CartMachineEvent,\n  CartMachineTypeState,\n  CartWithActions,\n  CartWithActionsDocs,\n} from './cart-types.js';\nimport {useCartAPIStateMachine} from './useCartAPIStateMachine.js';\nimport {CART_ID_STORAGE_KEY} from './cart-constants.js';\nimport {PartialDeep} from 'type-fest';\nimport {defaultCartFragment} from './cart-queries.js';\nimport {useShop} from './ShopifyProvider.js';\n\nexport const CartContext = createContext<CartWithActions | null>(null);\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype UseCartDocs = () => CartWithActionsDocs;\n\n/**\n * The `useCart` hook provides access to the cart object. It must be a descendent of a `CartProvider` component.\n */\nexport function useCart(): CartWithActions {\n  const context = useContext(CartContext);\n\n  if (!context) {\n    throw new Error('Expected a Cart Context, but no Cart Context was found');\n  }\n\n  return context;\n}\n\ntype CartProviderProps = {\n  /** Any `ReactNode` elements. */\n  children: React.ReactNode;\n  /**  Maximum number of cart lines to fetch. Defaults to 250 cart lines. */\n  numCartLines?: number;\n  /** A callback that is invoked when the process to create a cart begins, but before the cart is created in the Storefront API. */\n  onCreate?: () => void;\n  /** A callback that is invoked when the process to add a line item to the cart begins, but before the line item is added to the Storefront API. */\n  onLineAdd?: () => void;\n  /** A callback that is invoked when the process to remove a line item to the cart begins, but before the line item is removed from the Storefront API. */\n  onLineRemove?: () => void;\n  /** A callback that is invoked when the process to update a line item in the cart begins, but before the line item is updated in the Storefront API. */\n  onLineUpdate?: () => void;\n  /** A callback that is invoked when the process to add or update a note in the cart begins, but before the note is added or updated in the Storefront API. */\n  onNoteUpdate?: () => void;\n  /** A callback that is invoked when the process to update the buyer identity begins, but before the buyer identity is updated in the Storefront API. */\n  onBuyerIdentityUpdate?: () => void;\n  /** A callback that is invoked when the process to update the cart attributes begins, but before the attributes are updated in the Storefront API. */\n  onAttributesUpdate?: () => void;\n  /** A callback that is invoked when the process to update the cart discount codes begins, but before the discount codes are updated in the Storefront API. */\n  onDiscountCodesUpdate?: () => void;\n  /** A callback that is invoked when the process to create a cart completes */\n  onCreateComplete?: () => void;\n  /** A callback that is invoked when the process to add a line item to the cart completes */\n  onLineAddComplete?: () => void;\n  /** A callback that is invoked when the process to remove a line item to the cart completes */\n  onLineRemoveComplete?: () => void;\n  /** A callback that is invoked when the process to update a line item in the cart completes */\n  onLineUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to add or update a note in the cart completes */\n  onNoteUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the buyer identity completes */\n  onBuyerIdentityUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the cart attributes completes */\n  onAttributesUpdateComplete?: () => void;\n  /** A callback that is invoked when the process to update the cart discount codes completes */\n  onDiscountCodesUpdateComplete?: () => void;\n  /** An object with fields that correspond to the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart). */\n  data?: PartialDeep<CartType, {recurseIntoArrays: true}>;\n  /** A fragment used to query the Storefront API's [Cart object](https://shopify.dev/api/storefront/2024-10/objects/cart) for all queries and mutations. A default value is used if no argument is provided. */\n  cartFragment?: string;\n  /** A customer access token that's accessible on the server if there's a customer login. */\n  customerAccessToken?: CartBuyerIdentityInput['customerAccessToken'];\n  /** The ISO country code for i18n. */\n  countryCode?: CountryCode;\n  /** The ISO language code for i18n. */\n  languageCode?: LanguageCode;\n};\n\n/**\n * The `CartProvider` component synchronizes the state of the Storefront API Cart and a customer's cart,\n * and allows you to more easily manipulate the cart by adding, removing, and updating it.\n * It could be placed at the root of your app so that your whole app is able to use the `useCart()` hook anywhere.\n *\n * There are props that trigger when a call to the Storefront API is made, such as `onLineAdd={}` when a line is added to the cart.\n * There are also props that trigger when a call to the Storefront API is completed, such as `onLineAddComplete={}` when the fetch request for adding a line to the cart completes.\n *\n * The `CartProvider` component must be a descendant of the `ShopifyProvider` component.\n */\nexport function CartProvider({\n  children,\n  numCartLines,\n  onCreate,\n  onLineAdd,\n  onLineRemove,\n  onLineUpdate,\n  onNoteUpdate,\n  onBuyerIdentityUpdate,\n  onAttributesUpdate,\n  onDiscountCodesUpdate,\n  onCreateComplete,\n  onLineAddComplete,\n  onLineRemoveComplete,\n  onLineUpdateComplete,\n  onNoteUpdateComplete,\n  onBuyerIdentityUpdateComplete,\n  onAttributesUpdateComplete,\n  onDiscountCodesUpdateComplete,\n  data: cart,\n  cartFragment = defaultCartFragment,\n  customerAccessToken,\n  countryCode,\n  languageCode,\n}: CartProviderProps): JSX.Element {\n  const shop = useShop();\n\n  if (!shop)\n    throw new Error(\n      '<CartProvider> needs to be a descendant of <ShopifyProvider>',\n    );\n\n  countryCode = (\n    (countryCode as string) ??\n    shop.countryIsoCode ??\n    'US'\n  ).toUpperCase() as CountryCode;\n\n  languageCode = (\n    (languageCode as string) ??\n    shop.languageIsoCode ??\n    'EN'\n  ).toUpperCase() as LanguageCode;\n\n  if (countryCode) countryCode = countryCode.toUpperCase() as CountryCode;\n\n  const [prevCountryCode, setPrevCountryCode] = useState(countryCode);\n  const [prevCustomerAccessToken, setPrevCustomerAccessToken] =\n    useState(customerAccessToken);\n  const customerOverridesCountryCode = useRef(false);\n\n  if (\n    prevCountryCode !== countryCode ||\n    prevCustomerAccessToken !== customerAccessToken\n  ) {\n    setPrevCountryCode(countryCode);\n    setPrevCustomerAccessToken(customerAccessToken);\n    customerOverridesCountryCode.current = false;\n  }\n\n  const [cartState, cartSend] = useCartAPIStateMachine({\n    numCartLines,\n    data: cart,\n    cartFragment,\n    countryCode,\n    languageCode,\n    onCartActionEntry(_, event) {\n      try {\n        switch (event.type) {\n          case 'CART_CREATE':\n            return onCreate?.();\n          case 'CARTLINE_ADD':\n            return onLineAdd?.();\n          case 'CARTLINE_REMOVE':\n            return onLineRemove?.();\n          case 'CARTLINE_UPDATE':\n            return onLineUpdate?.();\n          case 'NOTE_UPDATE':\n            return onNoteUpdate?.();\n          case 'BUYER_IDENTITY_UPDATE':\n            return onBuyerIdentityUpdate?.();\n          case 'CART_ATTRIBUTES_UPDATE':\n            return onAttributesUpdate?.();\n          case 'DISCOUNT_CODES_UPDATE':\n            return onDiscountCodesUpdate?.();\n        }\n      } catch (error) {\n        console.error('Cart entry action failed', error);\n      }\n    },\n    onCartActionOptimisticUI(context, event) {\n      if (!context.cart) return {...context};\n      switch (event.type) {\n        case 'CARTLINE_REMOVE':\n          return {\n            ...context,\n            cart: {\n              ...context.cart,\n              lines: context?.cart?.lines?.filter(\n                (line) => line?.id && !event.payload.lines.includes(line?.id),\n              ),\n            },\n          };\n        case 'CARTLINE_UPDATE':\n          return {\n            ...context,\n            cart: {\n              ...context.cart,\n              lines: context?.cart?.lines?.map((line) => {\n                const updatedLine = event.payload.lines.find(\n                  ({id}) => id === line?.id,\n                );\n\n                if (updatedLine && updatedLine.quantity) {\n                  return {\n                    ...line,\n                    quantity: updatedLine.quantity,\n                  };\n                }\n\n                return line;\n              }),\n            },\n          };\n      }\n      return {...context};\n    },\n    onCartActionComplete(context, event) {\n      const cartActionEvent = event.payload.cartActionEvent;\n      try {\n        switch (event.type) {\n          case 'RESOLVE':\n            switch (cartActionEvent.type) {\n              case 'CART_CREATE':\n                return onCreateComplete?.();\n              case 'CARTLINE_ADD':\n                return onLineAddComplete?.();\n              case 'CARTLINE_REMOVE':\n                return onLineRemoveComplete?.();\n              case 'CARTLINE_UPDATE':\n                return onLineUpdateComplete?.();\n              case 'NOTE_UPDATE':\n                return onNoteUpdateComplete?.();\n              case 'BUYER_IDENTITY_UPDATE':\n                if (countryCodeNotUpdated(context, cartActionEvent)) {\n                  customerOverridesCountryCode.current = true;\n                }\n                return onBuyerIdentityUpdateComplete?.();\n              case 'CART_ATTRIBUTES_UPDATE':\n                return onAttributesUpdateComplete?.();\n              case 'DISCOUNT_CODES_UPDATE':\n                return onDiscountCodesUpdateComplete?.();\n            }\n        }\n      } catch (error) {\n        console.error('onCartActionComplete failed', error);\n      }\n    },\n  });\n\n  const cartReady = useRef(false);\n  const [isCartReady, setIsCartReady] = useState(false);\n  const cartCompleted = cartState.matches('cartCompleted');\n\n  const countryChanged =\n    (cartState.value === 'idle' ||\n      cartState.value === 'error' ||\n      cartState.value === 'cartCompleted') &&\n    countryCode !== cartState?.context?.cart?.buyerIdentity?.countryCode &&\n    !cartState.context.errors;\n\n  const fetchingFromStorage = useRef(false);\n\n  /**\n   * Initializes cart with priority in this order:\n   * 1. cart props\n   * 2. localStorage cartId\n   */\n  useEffect(() => {\n    if (!cartReady.current && !fetchingFromStorage.current) {\n      if (!cart && storageAvailable('localStorage')) {\n        fetchingFromStorage.current = true;\n        try {\n          const cartId = window.localStorage.getItem(CART_ID_STORAGE_KEY);\n          if (cartId) {\n            cartSend({type: 'CART_FETCH', payload: {cartId}});\n          }\n        } catch (error) {\n          console.warn('error fetching cartId');\n          console.warn(error);\n        }\n      }\n      cartReady.current = true;\n      // Providing a separate cart ready state variable to avoid re-renders in this logic while still being able to pass the reactive status through context.\n      setIsCartReady(true);\n    }\n  }, [cart, cartReady, cartSend]);\n\n  // Update cart country code if cart and props countryCode's as different\n  useEffect(() => {\n    if (!countryChanged || customerOverridesCountryCode.current) return;\n    cartSend({\n      type: 'BUYER_IDENTITY_UPDATE',\n      payload: {buyerIdentity: {countryCode, customerAccessToken}},\n    });\n  }, [\n    countryCode,\n    customerAccessToken,\n    countryChanged,\n    customerOverridesCountryCode,\n    cartSend,\n  ]);\n\n  // send cart events when ready\n  const onCartReadySend = useCallback(\n    (cartEvent: CartMachineEvent) => {\n      if (!cartReady.current) {\n        return console.warn(\"Cart isn't ready yet\");\n      }\n      cartSend(cartEvent);\n    },\n    [cartSend],\n  );\n\n  // save cart id to local storage\n  useEffect(() => {\n    if (cartState?.context?.cart?.id && storageAvailable('localStorage')) {\n      try {\n        window.localStorage.setItem(\n          CART_ID_STORAGE_KEY,\n          cartState.context.cart?.id,\n        );\n      } catch (error) {\n        console.warn('Failed to save cartId to localStorage', error);\n      }\n    }\n  }, [cartState?.context?.cart?.id]);\n\n  // delete cart from local storage if cart fetched has been completed\n  useEffect(() => {\n    if (cartCompleted && storageAvailable('localStorage')) {\n      try {\n        window.localStorage.removeItem(CART_ID_STORAGE_KEY);\n      } catch (error) {\n        console.warn('Failed to delete cartId from localStorage', error);\n      }\n    }\n  }, [cartCompleted]);\n\n  const cartCreate = useCallback(\n    (cartInput: CartInput) => {\n      if (countryCode && !cartInput.buyerIdentity?.countryCode) {\n        if (cartInput.buyerIdentity == null) {\n          cartInput.buyerIdentity = {};\n        }\n        cartInput.buyerIdentity.countryCode = countryCode;\n      }\n\n      if (\n        customerAccessToken &&\n        !cartInput.buyerIdentity?.customerAccessToken\n      ) {\n        if (cartInput.buyerIdentity == null) {\n          cartInput.buyerIdentity = {};\n        }\n        cartInput.buyerIdentity.customerAccessToken = customerAccessToken;\n      }\n      onCartReadySend({\n        type: 'CART_CREATE',\n        payload: cartInput,\n      });\n    },\n    [countryCode, customerAccessToken, onCartReadySend],\n  );\n\n  // Delays the cart state in the context if the page is hydrating\n  // preventing suspense boundary errors.\n  const cartDisplayState = useDelayedStateUntilHydration(cartState);\n\n  const cartContextValue = useMemo<CartWithActions>(() => {\n    return {\n      ...(cartDisplayState?.context?.cart ?? {lines: [], attributes: []}),\n      status: transposeStatus(cartDisplayState.value),\n      error: cartDisplayState?.context?.errors,\n      totalQuantity: cartDisplayState?.context?.cart?.totalQuantity ?? 0,\n      cartCreate,\n      cartReady: isCartReady,\n      linesAdd(lines: CartLineInput[]): void {\n        if (cartDisplayState?.context?.cart?.id) {\n          onCartReadySend({\n            type: 'CARTLINE_ADD',\n            payload: {lines},\n          });\n        } else {\n          cartCreate({lines});\n        }\n      },\n      linesRemove(lines: string[]): void {\n        onCartReadySend({\n          type: 'CARTLINE_REMOVE',\n          payload: {\n            lines,\n          },\n        });\n      },\n      linesUpdate(lines: CartLineUpdateInput[]): void {\n        onCartReadySend({\n          type: 'CARTLINE_UPDATE',\n          payload: {\n            lines,\n          },\n        });\n      },\n      noteUpdate(note: MutationCartNoteUpdateArgs['note']): void {\n        onCartReadySend({\n          type: 'NOTE_UPDATE',\n          payload: {\n            note,\n          },\n        });\n      },\n      buyerIdentityUpdate(buyerIdentity: CartBuyerIdentityInput): void {\n        onCartReadySend({\n          type: 'BUYER_IDENTITY_UPDATE',\n          payload: {\n            buyerIdentity,\n          },\n        });\n      },\n      cartAttributesUpdate(attributes: AttributeInput[]): void {\n        onCartReadySend({\n          type: 'CART_ATTRIBUTES_UPDATE',\n          payload: {\n            attributes,\n          },\n        });\n      },\n      discountCodesUpdate(discountCodes: string[]): void {\n        onCartReadySend({\n          type: 'DISCOUNT_CODES_UPDATE',\n          payload: {\n            discountCodes,\n          },\n        });\n      },\n      cartFragment,\n    };\n  }, [\n    cartCreate,\n    isCartReady,\n    cartDisplayState?.context?.cart,\n    cartDisplayState?.context?.errors,\n    cartDisplayState.value,\n    cartFragment,\n    onCartReadySend,\n  ]);\n\n  return (\n    <CartContext.Provider value={cartContextValue}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nfunction transposeStatus(\n  status: CartMachineTypeState['value'],\n): CartWithActions['status'] {\n  switch (status) {\n    case 'uninitialized':\n    case 'initializationError':\n      return 'uninitialized';\n    case 'idle':\n    case 'cartCompleted':\n    case 'error':\n      return 'idle';\n    case 'cartFetching':\n      return 'fetching';\n    case 'cartCreating':\n      return 'creating';\n    case 'cartLineAdding':\n    case 'cartLineRemoving':\n    case 'cartLineUpdating':\n    case 'noteUpdating':\n    case 'buyerIdentityUpdating':\n    case 'cartAttributesUpdating':\n    case 'discountCodesUpdating':\n      return 'updating';\n  }\n}\n\n/**\n * Delays a state update until hydration finishes. Useful for preventing suspense boundaries errors when updating a context\n * @remarks this uses startTransition and waits for it to finish.\n */\nfunction useDelayedStateUntilHydration<T>(state: T): T {\n  const [isPending, startTransition] = useTransition();\n  const [delayedState, setDelayedState] = useState(state);\n\n  const firstTimePending = useRef(false);\n  if (isPending) {\n    firstTimePending.current = true;\n  }\n\n  const firstTimePendingFinished = useRef(false);\n  if (!isPending && firstTimePending.current) {\n    firstTimePendingFinished.current = true;\n  }\n\n  useEffect(() => {\n    startTransition(() => {\n      if (!firstTimePendingFinished.current) {\n        setDelayedState(state);\n      }\n    });\n  }, [state]);\n\n  const displayState = firstTimePendingFinished.current ? state : delayedState;\n\n  return displayState;\n}\n\n/**\n * Check for storage availability function obtained from\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n */\nexport function storageAvailable(\n  type: 'localStorage' | 'sessionStorage',\n): boolean {\n  let storage;\n  try {\n    storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return !!(\n      e instanceof DOMException &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nfunction countryCodeNotUpdated(\n  context: CartMachineContext,\n  event: BuyerIdentityUpdateEvent,\n): boolean {\n  return !!(\n    event.payload.buyerIdentity.countryCode &&\n    context.cart?.buyerIdentity?.countryCode !==\n      event.payload.buyerIdentity.countryCode\n  );\n}\n","import {\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n  createContext,\n  useContext,\n} from 'react';\nimport type {\n  SelectedOption as SelectedOptionType,\n  SellingPlan,\n  SellingPlanAllocation,\n  Product,\n  ProductVariant as ProductVariantType,\n  ProductVariantConnection,\n  SellingPlan as SellingPlanType,\n  SellingPlanAllocation as SellingPlanAllocationType,\n  SellingPlanGroup as SellingPlanGroupType,\n  SellingPlanGroupConnection,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\n\nconst ProductOptionsContext = createContext<ProductHookValue | null>(null);\n\ntype InitialVariantId = ProductVariantType['id'] | null;\n\ninterface ProductProviderProps {\n  /** A Storefront API [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** A `ReactNode` element. */\n  children: React.ReactNode;\n  /**\n   * The initially selected variant.\n   * The following logic applies to `initialVariantId`:\n   * 1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n   * 2. If `initialVariantId` is provided but is `null`, then no variant is used.\n   * 3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n   * 4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.\n   */\n  initialVariantId?: InitialVariantId;\n}\n\n/**\n * `<ProductProvider />` is a context provider that enables use of the `useProduct()` hook.\n *\n * It helps manage selected options and variants for a product.\n */\nexport function ProductProvider({\n  children,\n  data: product,\n  initialVariantId: explicitVariantId,\n}: ProductProviderProps): JSX.Element {\n  // The flattened variants\n  const variants = useMemo(\n    () => flattenConnection(product.variants ?? {}),\n    [product.variants],\n  );\n\n  if (!isProductVariantArray(variants)) {\n    throw new Error(\n      `<ProductProvider/> requires 'product.variants.nodes' or 'product.variants.edges'`,\n    );\n  }\n\n  // All the options available for a product, based on all the variants\n  const options = useMemo(() => getOptions(variants), [variants]);\n\n  /**\n   * Track the selectedVariant within the provider.\n   */\n  const [selectedVariant, setSelectedVariant] = useState<\n    | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n    | undefined\n    | null\n  >(() => getVariantBasedOnIdProp(explicitVariantId, variants));\n\n  /**\n   * Track the selectedOptions within the provider. If a `initialVariantId`\n   * is passed, use that to select initial options.\n   */\n  const [selectedOptions, setSelectedOptions] = useState<SelectedOptions>(() =>\n    getSelectedOptions(selectedVariant),\n  );\n\n  /**\n   * When the initialVariantId changes, we need to make sure we\n   * update the selected variant and selected options. If not,\n   * then the selected variant and options will reference incorrect\n   * values.\n   */\n  useEffect(() => {\n    const newSelectedVariant = getVariantBasedOnIdProp(\n      explicitVariantId,\n      variants,\n    );\n    setSelectedVariant(newSelectedVariant);\n    setSelectedOptions(getSelectedOptions(newSelectedVariant));\n  }, [explicitVariantId, variants]);\n\n  /**\n   * Allow the developer to select an option.\n   */\n  const setSelectedOption = useCallback(\n    (name: string, value: string) => {\n      setSelectedOptions((selectedOptions) => {\n        const opts = {...selectedOptions, [name]: value};\n        setSelectedVariant(getSelectedVariant(variants, opts));\n        return opts;\n      });\n    },\n    [setSelectedOptions, variants],\n  );\n\n  const isOptionInStock = useCallback(\n    (option: string, value: string) => {\n      const proposedVariant = getSelectedVariant(variants, {\n        ...selectedOptions,\n        ...{[option]: value},\n      });\n\n      return proposedVariant?.availableForSale ?? true;\n    },\n    [selectedOptions, variants],\n  );\n\n  const sellingPlanGroups = useMemo(\n    () =>\n      flattenConnection(product.sellingPlanGroups ?? {}).map(\n        (sellingPlanGroup) => ({\n          ...sellingPlanGroup,\n          sellingPlans: flattenConnection(sellingPlanGroup?.sellingPlans ?? {}),\n        }),\n      ),\n    [product.sellingPlanGroups],\n  );\n\n  /**\n   * Track the selectedSellingPlan within the hook. If `initialSellingPlanId`\n   * is passed, use that as an initial value. Look it up from the `selectedVariant`, since\n   * that is also a requirement.\n   */\n  const [selectedSellingPlan, setSelectedSellingPlan] = useState<\n    PartialDeep<SellingPlan, {recurseIntoArrays: true}> | undefined\n  >(undefined);\n\n  const selectedSellingPlanAllocation = useMemo<\n    PartialDeep<SellingPlanAllocation, {recurseIntoArrays: true}> | undefined\n  >(() => {\n    if (!selectedVariant || !selectedSellingPlan) {\n      return;\n    }\n\n    if (\n      !selectedVariant.sellingPlanAllocations?.nodes &&\n      !selectedVariant.sellingPlanAllocations?.edges\n    ) {\n      throw new Error(\n        `<ProductProvider/>: You must include 'sellingPlanAllocations.nodes' or 'sellingPlanAllocations.edges' in your variants in order to calculate selectedSellingPlanAllocation`,\n      );\n    }\n\n    return flattenConnection(selectedVariant.sellingPlanAllocations).find(\n      (allocation) => allocation?.sellingPlan?.id === selectedSellingPlan.id,\n    );\n  }, [selectedVariant, selectedSellingPlan]);\n\n  const value = useMemo<ProductHookValue>(\n    () => ({\n      product,\n      variants,\n      variantsConnection: product.variants,\n      options,\n      selectedVariant,\n      setSelectedVariant,\n      selectedOptions,\n      setSelectedOption,\n      setSelectedOptions,\n      isOptionInStock,\n      selectedSellingPlan,\n      setSelectedSellingPlan,\n      selectedSellingPlanAllocation,\n      sellingPlanGroups,\n      sellingPlanGroupsConnection: product.sellingPlanGroups,\n    }),\n    [\n      product,\n      isOptionInStock,\n      options,\n      selectedOptions,\n      selectedSellingPlan,\n      selectedSellingPlanAllocation,\n      selectedVariant,\n      sellingPlanGroups,\n      setSelectedOption,\n      variants,\n    ],\n  );\n\n  return (\n    <ProductOptionsContext.Provider value={value}>\n      {children}\n    </ProductOptionsContext.Provider>\n  );\n}\n\n/**\n * Provides access to the context value provided by `<ProductProvider />`. Must be a descendent of `<ProductProvider />`.\n */\nexport function useProduct(): ProductHookValue {\n  const context = useContext(ProductOptionsContext);\n\n  if (!context) {\n    throw new Error(`'useProduct' must be a child of <ProductProvider />`);\n  }\n\n  return context;\n}\n\nfunction getSelectedVariant(\n  variants: PartialDeep<ProductVariantType, {recurseIntoArrays: true}>[],\n  choices: SelectedOptions,\n): PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined {\n  /**\n   * Ensure the user has selected all the required options, not just some.\n   */\n  if (\n    !variants.length ||\n    variants?.[0]?.selectedOptions?.length !== Object.keys(choices).length\n  ) {\n    return;\n  }\n\n  return variants?.find((variant) => {\n    return Object.entries(choices).every(([name, value]) => {\n      return variant?.selectedOptions?.some(\n        (option) => option?.name === name && option?.value === value,\n      );\n    });\n  });\n}\n\nfunction getOptions(\n  variants: PartialDeep<ProductVariantType, {recurseIntoArrays: true}>[],\n): OptionWithValues[] {\n  const map = variants.reduce((memo, variant) => {\n    if (!variant.selectedOptions) {\n      throw new Error(`'getOptions' requires 'variant.selectedOptions'`);\n    }\n    variant?.selectedOptions?.forEach((opt) => {\n      memo[opt?.name ?? ''] = memo[opt?.name ?? ''] || new Set();\n      memo[opt?.name ?? ''].add(opt?.value ?? '');\n    });\n\n    return memo;\n  }, {} as Record<string, Set<string>>);\n\n  return Object.keys(map).map((option) => {\n    return {\n      name: option,\n      values: Array.from(map[option]),\n    };\n  });\n}\n\nfunction getVariantBasedOnIdProp(\n  explicitVariantId: InitialVariantId | undefined,\n  variants: Array<\n    PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined\n  >,\n):\n  | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n  | undefined\n  | null {\n  // get the initial variant based on the logic outlined in the comments for 'initialVariantId' above\n  // * 1. If `initialVariantId` is provided, then it's used even if it's out of stock.\n  if (explicitVariantId) {\n    const foundVariant = variants.find(\n      (variant) => variant?.id === explicitVariantId,\n    );\n    if (!foundVariant) {\n      console.warn(\n        `<ProductProvider/> received a 'initialVariantId' prop, but could not actually find a variant with that ID`,\n      );\n    }\n    return foundVariant;\n  }\n  // * 2. If `initialVariantId` is provided but is `null`, then no variant is used.\n  if (explicitVariantId === null) {\n    return null;\n  }\n  // * 3. If nothing is passed to `initialVariantId` then the first available / in-stock variant is used.\n  // * 4. If nothing is passed to `initialVariantId` and no variants are in stock, then the first variant is used.\n  if (explicitVariantId === undefined) {\n    return variants.find((variant) => variant?.availableForSale) || variants[0];\n  }\n}\n\nfunction getSelectedOptions(\n  selectedVariant:\n    | PartialDeep<ProductVariantType, {recurseIntoArrays: true}>\n    | undefined\n    | null,\n): SelectedOptions {\n  return selectedVariant?.selectedOptions\n    ? selectedVariant.selectedOptions.reduce<SelectedOptions>(\n        (memo, optionSet) => {\n          memo[optionSet?.name ?? ''] = optionSet?.value ?? '';\n          return memo;\n        },\n        {},\n      )\n    : {};\n}\n\nfunction isProductVariantArray(\n  maybeVariantArray:\n    | (PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | undefined)[]\n    | undefined,\n): maybeVariantArray is PartialDeep<\n  ProductVariantType,\n  {recurseIntoArrays: true}\n>[] {\n  if (!maybeVariantArray || !Array.isArray(maybeVariantArray)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport interface OptionWithValues {\n  name: SelectedOptionType['name'];\n  values: SelectedOptionType['value'][];\n}\n\ntype UseProductObjects = {\n  /** The raw product from the Storefront API */\n  product: Product;\n  /** An array of the variant `nodes` from the `VariantConnection`. */\n  variants: ProductVariantType[];\n  variantsConnection?: ProductVariantConnection;\n  /** An array of the product's options and values. */\n  options: OptionWithValues[];\n  /** The selected variant. */\n  selectedVariant?: ProductVariantType | null;\n  selectedOptions: SelectedOptions;\n  /** The selected selling plan. */\n  selectedSellingPlan?: SellingPlanType;\n  /** The selected selling plan allocation. */\n  selectedSellingPlanAllocation?: SellingPlanAllocationType;\n  /** The selling plan groups. */\n  sellingPlanGroups?: (Omit<SellingPlanGroupType, 'sellingPlans'> & {\n    sellingPlans: SellingPlanType[];\n  })[];\n  sellingPlanGroupsConnection?: SellingPlanGroupConnection;\n};\n\ntype UseProductFunctions = {\n  /** A callback to set the selected variant to the variant passed as an argument. */\n  setSelectedVariant: (\n    variant: PartialDeep<ProductVariantType, {recurseIntoArrays: true}> | null,\n  ) => void;\n  /** A callback to set the selected option. */\n  setSelectedOption: (\n    name: SelectedOptionType['name'],\n    value: SelectedOptionType['value'],\n  ) => void;\n  /** A callback to set multiple selected options at once. */\n  setSelectedOptions: (options: SelectedOptions) => void;\n  /** A callback to set the selected selling plan to the one passed as an argument. */\n  setSelectedSellingPlan: (\n    sellingPlan: PartialDeep<SellingPlanType, {recurseIntoArrays: true}>,\n  ) => void;\n  /** A callback that returns a boolean indicating if the option is in stock. */\n  isOptionInStock: (\n    name: SelectedOptionType['name'],\n    value: SelectedOptionType['value'],\n  ) => boolean;\n};\n\ntype ProductHookValue = PartialDeep<\n  UseProductObjects,\n  {recurseIntoArrays: true}\n> &\n  UseProductFunctions;\n\nexport type SelectedOptions = {\n  [key: string]: string;\n};\n","import {ReactNode, Ref, useCallback} from 'react';\n\nexport interface CustomBaseButtonProps<AsType> {\n  /** Provide a React element or component to render as the underlying button. Note: for accessibility compliance, almost always you should use a `button` element, or a component that renders an underlying button. */\n  as?: AsType;\n  /** Any ReactNode elements. */\n  children: ReactNode;\n  /** Click event handler. Default behaviour triggers unless prevented */\n  onClick?: (\n    event?: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => void | boolean;\n  /** A default `onClick` behavior */\n  defaultOnClick?: (\n    event?: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => void | boolean;\n  /** A `ref` to the underlying button */\n  buttonRef?: Ref<HTMLButtonElement>;\n}\n\nexport type BaseButtonProps<AsType extends React.ElementType> =\n  CustomBaseButtonProps<AsType> &\n    (AsType extends keyof React.JSX.IntrinsicElements\n      ? Omit<\n          React.ComponentPropsWithoutRef<AsType>,\n          keyof CustomBaseButtonProps<AsType>\n        >\n      : React.ComponentPropsWithoutRef<AsType>);\n\nexport function BaseButton<AsType extends React.ElementType = 'button'>(\n  props: BaseButtonProps<AsType>,\n): JSX.Element {\n  const {\n    as,\n    onClick,\n    defaultOnClick,\n    children,\n    buttonRef,\n    ...passthroughProps\n  } = props;\n\n  const handleOnClick = useCallback(\n    (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (onClick) {\n        const clickShouldContinue = onClick(event);\n        if (\n          (typeof clickShouldContinue === 'boolean' &&\n            clickShouldContinue === false) ||\n          event?.defaultPrevented\n        )\n          return;\n      }\n\n      defaultOnClick?.(event);\n    },\n    [defaultOnClick, onClick],\n  );\n\n  const Component = as || 'button';\n\n  return (\n    <Component ref={buttonRef} onClick={handleOnClick} {...passthroughProps}>\n      {children}\n    </Component>\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useCart} from './CartProvider.js';\nimport {useProduct} from './ProductProvider.js';\nimport {\n  BaseButton,\n  type CustomBaseButtonProps,\n  type BaseButtonProps,\n} from './BaseButton.js';\nimport * as React from 'react';\n\nexport interface AddToCartButtonPropsBase {\n  /** An array of cart line attributes that belong to the item being added to the cart. */\n  attributes?: {\n    key: string;\n    value: string;\n  }[];\n  /** The ID of the variant. */\n  variantId?: string | null;\n  /** The item quantity. */\n  quantity?: number;\n  /** The text that is announced by the screen reader when the item is being added to the cart. Used for accessibility purposes only and not displayed on the page. */\n  accessibleAddingToCartLabel?: string;\n  /** The selling plan ID of the subscription variant */\n  sellingPlanId?: string;\n}\n\nexport type AddToCartButtonProps<AsType extends React.ElementType = 'button'> =\n  AddToCartButtonPropsBase & BaseButtonProps<AsType>;\n\n/**\n * The `AddToCartButton` component renders a button that adds an item to the cart when pressed.\n * It must be a descendent of the `CartProvider` component.\n */\nexport function AddToCartButton<AsType extends React.ElementType = 'button'>(\n  props: AddToCartButtonProps<AsType>,\n): JSX.Element {\n  const [addingItem, setAddingItem] = useState<boolean>(false);\n  const {\n    variantId: explicitVariantId,\n    quantity = 1,\n    attributes,\n    sellingPlanId,\n    onClick,\n    children,\n    accessibleAddingToCartLabel,\n    ...passthroughProps\n  } = props;\n  const {status, linesAdd} = useCart();\n  const {selectedVariant} = useProduct();\n  const variantId = explicitVariantId ?? selectedVariant?.id ?? '';\n  const disabled =\n    explicitVariantId === null ||\n    variantId === '' ||\n    selectedVariant === null ||\n    addingItem ||\n    // Only certain 'as' types such as 'button' contain `disabled`\n    (passthroughProps as {disabled?: boolean}).disabled;\n\n  useEffect(() => {\n    if (addingItem && status === 'idle') {\n      setAddingItem(false);\n    }\n  }, [status, addingItem]);\n\n  const handleAddItem = useCallback(() => {\n    setAddingItem(true);\n    linesAdd([\n      {\n        quantity,\n        merchandiseId: variantId || '',\n        attributes,\n        sellingPlanId,\n      },\n    ]);\n  }, [linesAdd, quantity, variantId, attributes, sellingPlanId]);\n\n  return (\n    <>\n      <BaseButton\n        {...passthroughProps}\n        disabled={disabled}\n        onClick={onClick}\n        defaultOnClick={handleAddItem}\n      >\n        {children}\n      </BaseButton>\n      {accessibleAddingToCartLabel ? (\n        <p\n          style={{\n            position: 'absolute',\n            width: '1px',\n            height: '1px',\n            padding: '0',\n            margin: '-1px',\n            overflow: 'hidden',\n            clip: 'rect(0, 0, 0, 0)',\n            whiteSpace: 'nowrap',\n            borderWidth: '0',\n          }}\n          role=\"alert\"\n          aria-live=\"assertive\"\n        >\n          {addingItem ? accessibleAddingToCartLabel : null}\n        </p>\n      ) : null}\n    </>\n  );\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface AddToCartButtonPropsForDocs<\n  AsType extends React.ElementType = 'button',\n> extends AddToCartButtonPropsBase,\n    CustomBaseButtonProps<AsType> {}\n","export const AnalyticsEventName = {\n  PAGE_VIEW: 'PAGE_VIEW',\n  ADD_TO_CART: 'ADD_TO_CART',\n  PAGE_VIEW_2: 'PAGE_VIEW_2',\n  COLLECTION_VIEW: 'COLLECTION_VIEW',\n  PRODUCT_VIEW: 'PRODUCT_VIEW',\n  SEARCH_VIEW: 'SEARCH_VIEW',\n} as const;\n\nexport const AnalyticsPageType: AnalyticsPageType = {\n  article: 'article',\n  blog: 'blog',\n  captcha: 'captcha',\n  cart: 'cart',\n  collection: 'collection',\n  customersAccount: 'customers/account',\n  customersActivateAccount: 'customers/activate_account',\n  customersAddresses: 'customers/addresses',\n  customersLogin: 'customers/login',\n  customersOrder: 'customers/order',\n  customersRegister: 'customers/register',\n  customersResetPassword: 'customers/reset_password',\n  giftCard: 'gift_card',\n  home: 'index',\n  listCollections: 'list-collections',\n  forbidden: '403',\n  notFound: '404',\n  page: 'page',\n  password: 'password',\n  product: 'product',\n  policy: 'policy',\n  search: 'search',\n} as const;\n\nexport const ShopifySalesChannel: ShopifySalesChannel = {\n  hydrogen: 'hydrogen',\n  headless: 'headless',\n} as const;\n\nexport const ShopifyAppId = {\n  hydrogen: '6167201',\n  headless: '12875497473',\n} as const;\n\n/**\n * These duplicated interface declaration is so that we can generate proper documentation\n * for these public facing constants\n */\nexport interface AnalyticsEventName {\n  /** Page view */\n  PAGE_VIEW: 'PAGE_VIEW';\n  /** Add to cart */\n  ADD_TO_CART: 'ADD_TO_CART';\n}\n\nexport interface AnalyticsPageType {\n  article: 'article';\n  blog: 'blog';\n  captcha: 'captcha';\n  cart: 'cart';\n  collection: 'collection';\n  customersAccount: 'customers/account';\n  customersActivateAccount: 'customers/activate_account';\n  customersAddresses: 'customers/addresses';\n  customersLogin: 'customers/login';\n  customersOrder: 'customers/order';\n  customersRegister: 'customers/register';\n  customersResetPassword: 'customers/reset_password';\n  giftCard: 'gift_card';\n  home: 'index';\n  listCollections: 'list-collections';\n  forbidden: '403';\n  notFound: '404';\n  page: 'page';\n  password: 'password';\n  product: 'product';\n  policy: 'policy';\n  search: 'search';\n}\n\nexport interface ShopifySalesChannel {\n  /** Shopify Hydrogen sales channel */\n  hydrogen: 'hydrogen';\n  /** Shopify Headless sales channel */\n  headless: 'headless';\n}\n","import type {\n  ShopifyMonorailPayload,\n  ShopifyMonorailEvent,\n  ShopifyGid,\n} from './analytics-types.js';\n\n/**\n * Builds a Shopify Monorail event from a Shopify Monorail payload and a schema ID.\n * @param payload - The Monorail payload\n * @param schemaId - The schema ID to use\n * @returns The formatted payload\n **/\nexport function schemaWrapper(\n  schemaId: string,\n  payload: ShopifyMonorailPayload,\n): ShopifyMonorailEvent {\n  return {\n    schema_id: schemaId,\n    payload,\n    metadata: {\n      event_created_at_ms: Date.now(),\n    },\n  };\n}\n\n/**\n * Parses global id (gid) and returns the resource type and id.\n * @see https://shopify.dev/api/usage/gids\n * @param gid - A shopify GID (string)\n *\n * @example\n * ```ts\n * const {id, resource} = parseGid('gid://shopify/Order/123')\n * // => id = \"123\", resource = 'Order'\n *\n *  * const {id, resource} = parseGid('gid://shopify/Cart/abc123')\n * // => id = \"abc123\", resource = 'Cart'\n * ```\n **/\nexport function parseGid(gid: string | undefined): ShopifyGid {\n  const defaultReturn: ShopifyGid = {\n    id: '',\n    resource: null,\n    resourceId: null,\n    search: '',\n    searchParams: new URLSearchParams(),\n    hash: '',\n  };\n\n  if (typeof gid !== 'string') {\n    return defaultReturn;\n  }\n\n  try {\n    const {search, searchParams, pathname, hash} = new URL(gid);\n    const pathnameParts = pathname.split('/');\n    const lastPathnamePart = pathnameParts[pathnameParts.length - 1];\n    const resourcePart = pathnameParts[pathnameParts.length - 2];\n\n    if (!lastPathnamePart || !resourcePart) {\n      return defaultReturn;\n    }\n\n    const id = `${lastPathnamePart}${search}${hash}` || '';\n    const resourceId = lastPathnamePart || null;\n    const resource = resourcePart ?? null;\n\n    return {id, resource, resourceId, search, searchParams, hash};\n  } catch {\n    return defaultReturn;\n  }\n}\n\n/**\n * Filters properties from an object and returns a new object with only the properties that have a truthy value.\n * @param keyValuePairs - An object of key-value pairs\n * @param formattedData - An object which will hold the truthy values\n * @returns The formatted object\n **/\nexport function addDataIf(\n  keyValuePairs: ShopifyMonorailPayload,\n  formattedData: ShopifyMonorailPayload,\n): ShopifyMonorailPayload {\n  if (typeof keyValuePairs !== 'object') {\n    return {};\n  }\n  Object.entries(keyValuePairs).forEach(([key, value]) => {\n    if (value) {\n      formattedData[key] = value;\n    }\n  });\n  return formattedData;\n}\n\n/**\n * Utility that errors if a function is called on the server.\n * @param fnName - The name of the function\n * @returns A boolean\n **/\nexport function errorIfServer(fnName: string): boolean {\n  if (typeof document === 'undefined') {\n    console.error(\n      `${fnName} should only be used within the useEffect callback or event handlers`,\n    );\n    return true;\n  }\n  return false;\n}\n","import {\n  ShopifyPageViewPayload,\n  ShopifyMonorailPayload,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {ShopifyAppId} from './analytics-constants.js';\nimport {addDataIf, schemaWrapper, parseGid} from './analytics-utils.js';\nimport {buildUUID} from './cookies-utils.js';\n\nconst SCHEMA_ID = 'trekkie_storefront_page_view/1.4';\nconst OXYGEN_DOMAIN = 'myshopify.dev';\n\nexport function pageView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const {id, resource} = parseGid(pageViewPayload.resourceId);\n  const resourceType = resource ? resource.toLowerCase() : undefined;\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          pageType: pageViewPayload.pageType,\n          customerId: parseInt(parseGid(pageViewPayload.customerId).id || '0'),\n          resourceType,\n          resourceId: parseInt(id),\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\nfunction formatPayload(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailPayload {\n  return {\n    appClientId: payload.shopifySalesChannel\n      ? ShopifyAppId[payload.shopifySalesChannel]\n      : ShopifyAppId.headless,\n    isMerchantRequest: isMerchantRequest(payload.url),\n    hydrogenSubchannelId:\n      payload.storefrontId || payload.hydrogenSubchannelId || '0',\n\n    isPersistentCookie: payload.hasUserConsent,\n    uniqToken: payload.uniqueToken,\n    visitToken: payload.visitToken,\n    microSessionId: buildUUID(),\n    microSessionCount: 1,\n\n    url: payload.url,\n    path: payload.path,\n    search: payload.search,\n    referrer: payload.referrer,\n    title: payload.title,\n\n    shopId: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency,\n    contentLanguage: payload.acceptedLanguage || 'en',\n  };\n}\n\nfunction isMerchantRequest(url: string): boolean {\n  if (typeof url !== 'string') {\n    return false;\n  }\n  const hostname = new URL(url).hostname;\n  if (hostname.indexOf(OXYGEN_DOMAIN) !== -1 || hostname === 'localhost') {\n    return true;\n  }\n  return false;\n}\n","import {\n  ShopifyAnalyticsPayload,\n  ShopifyPageViewPayload,\n  ShopifyAddToCartPayload,\n  ShopifyMonorailPayload,\n  ShopifyAnalyticsProduct,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsPageType, ShopifySalesChannel} from './analytics-constants.js';\nimport {addDataIf, schemaWrapper, parseGid} from './analytics-utils.js';\nimport {buildUUID} from './cookies-utils.js';\nimport {version} from '../package.json';\n\nconst SCHEMA_ID = 'custom_storefront_customer_tracking/1.2';\nconst PAGE_RENDERED_EVENT_NAME = 'page_rendered';\nconst COLLECTION_PAGE_RENDERED_EVENT_NAME = 'collection_page_rendered';\nconst PRODUCT_PAGE_RENDERED_EVENT_NAME = 'product_page_rendered';\nconst PRODUCT_ADDED_TO_CART_EVENT_NAME = 'product_added_to_cart';\nconst SEARCH_SUBMITTED_EVENT_NAME = 'search_submitted';\n\nfunction prepareAdditionalPayload(\n  payload: ShopifyPageViewPayload,\n): Pick<ShopifyMonorailPayload, 'canonical_url' | 'customer_id'> {\n  return {\n    canonical_url: payload.canonicalUrl || payload.url,\n    customer_id: parseInt(parseGid(payload.customerId).id || '0'),\n  };\n}\n\n// Send the page view event to the Monorail server.\n// It also sends additional page view events based on the page type.\nexport function pageView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  const pageType = pageViewPayload.pageType;\n  const pageViewEvents = [];\n\n  pageViewEvents.push(\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  );\n\n  switch (pageType) {\n    case AnalyticsPageType.collection:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              collection_name: pageViewPayload.collectionHandle,\n              collection_id: parseInt(\n                parseGid(pageViewPayload.collectionId).id,\n              ),\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.product:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              products: formatProductPayload(pageViewPayload.products),\n              total_value: pageViewPayload.totalValue,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.search:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: SEARCH_SUBMITTED_EVENT_NAME,\n              ...additionalPayload,\n              search_string: pageViewPayload.searchString,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n  }\n\n  return pageViewEvents;\n}\n\n// Sends page view event to the Monorail server.\nexport function pageView2(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends collection view event to the Monorail server.\nexport function collectionView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n          collection_name: pageViewPayload.collectionHandle,\n          collection_id: parseInt(parseGid(pageViewPayload.collectionId).id),\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends product view event to the Monorail server.\nexport function productView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n          products: formatProductPayload(pageViewPayload.products),\n          total_value: pageViewPayload.totalValue,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\n// Sends search view event to the Monorail server.\nexport function searchView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = prepareAdditionalPayload(pageViewPayload);\n\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: SEARCH_SUBMITTED_EVENT_NAME,\n          ...additionalPayload,\n          search_string: pageViewPayload.searchString,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  ];\n}\n\nexport function addToCart(\n  payload: ShopifyAddToCartPayload,\n): ShopifyMonorailEvent[] {\n  const addToCartPayload = payload;\n  const cartToken = parseGid(addToCartPayload.cartId);\n  const cart_token = cartToken?.id ? `${cartToken.id}` : null;\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PRODUCT_ADDED_TO_CART_EVENT_NAME,\n          customerId: addToCartPayload.customerId,\n          cart_token,\n          total_value: addToCartPayload.totalValue,\n          products: formatProductPayload(addToCartPayload.products),\n          customer_id: parseInt(\n            parseGid(addToCartPayload.customerId).id || '0',\n          ),\n        },\n        formatPayload(addToCartPayload),\n      ),\n    ),\n  ];\n}\n\nfunction formatPayload(\n  payload: ShopifyAnalyticsPayload,\n): ShopifyMonorailPayload {\n  return {\n    source: payload.shopifySalesChannel || ShopifySalesChannel.headless,\n    asset_version_id: payload.assetVersionId || version,\n    hydrogenSubchannelId:\n      payload.storefrontId || payload.hydrogenSubchannelId || '0',\n\n    is_persistent_cookie: payload.hasUserConsent,\n    deprecated_visit_token: payload.visitToken,\n    unique_token: payload.uniqueToken,\n    event_time: Date.now(),\n    event_id: buildUUID(),\n\n    event_source_url: payload.url,\n    referrer: payload.referrer,\n    user_agent: payload.userAgent,\n    navigation_type: payload.navigationType,\n    navigation_api: payload.navigationApi,\n\n    shop_id: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency,\n\n    ccpa_enforced: payload.ccpaEnforced || false,\n    gdpr_enforced: payload.gdprEnforced || false,\n    gdpr_enforced_as_string: payload.gdprEnforced ? 'true' : 'false',\n    analytics_allowed: payload.analyticsAllowed || false,\n    marketing_allowed: payload.marketingAllowed || false,\n    sale_of_data_allowed: payload.saleOfDataAllowed || false,\n  };\n}\n\nfunction formatProductPayload(products?: ShopifyAnalyticsProduct[]): string[] {\n  return products\n    ? products.map((p: ShopifyAnalyticsProduct) => {\n        const product = addDataIf(\n          {\n            variant_gid: p.variantGid,\n            category: p.category,\n            sku: p.sku,\n            product_id: parseInt(parseGid(p.productGid).id),\n            variant_id: parseInt(parseGid(p.variantGid).id),\n          },\n          {\n            product_gid: p.productGid,\n            name: p.name,\n            variant: p.variantName || '',\n            brand: p.brand,\n            price: parseFloat(p.price),\n            quantity: Number(p.quantity || 0),\n          },\n        );\n        return JSON.stringify(product);\n      })\n    : [];\n}\n","import {SHOPIFY_S, SHOPIFY_Y} from './cart-constants.js';\nimport type {\n  ClientBrowserParameters,\n  ShopifyAddToCartPayload,\n  ShopifyAnalytics,\n  ShopifyPageViewPayload,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsEventName} from './analytics-constants.js';\nimport {errorIfServer} from './analytics-utils.js';\nimport {getShopifyCookies} from './cookies-utils.js';\n\nimport {pageView as trekkiePageView} from './analytics-schema-trekkie-storefront-page-view.js';\nimport {\n  pageView as customerPageView,\n  pageView2 as customerPageView2,\n  collectionView as customerCollectionView,\n  productView as customerProductView,\n  searchView as customerSearchView,\n  addToCart as customerAddToCart,\n} from './analytics-schema-custom-storefront-customer-tracking.js';\n\n/**\n * Set user and session cookies and refresh the expiry time\n * @param event - The analytics event.\n * @param shopDomain - The Online Store domain to sent Shopify analytics under the same\n *   top level domain.\n */\nexport function sendShopifyAnalytics(\n  event: ShopifyAnalytics,\n  shopDomain?: string,\n): Promise<void> {\n  const {eventName, payload} = event;\n  if (!payload.hasUserConsent) return Promise.resolve();\n\n  let events: ShopifyMonorailEvent[] = [];\n  const pageViewPayload = payload as ShopifyPageViewPayload;\n\n  if (eventName === AnalyticsEventName.PAGE_VIEW) {\n    events = events.concat(\n      trekkiePageView(pageViewPayload),\n      customerPageView(pageViewPayload),\n    );\n  } else if (eventName === AnalyticsEventName.ADD_TO_CART) {\n    events = events.concat(\n      customerAddToCart(payload as ShopifyAddToCartPayload),\n    );\n  } else if (eventName === AnalyticsEventName.PAGE_VIEW_2) {\n    events = events.concat(\n      trekkiePageView(pageViewPayload),\n      customerPageView2(pageViewPayload),\n    );\n  } else if (eventName === AnalyticsEventName.COLLECTION_VIEW) {\n    events = events.concat(customerCollectionView(pageViewPayload));\n  } else if (eventName === AnalyticsEventName.PRODUCT_VIEW) {\n    events = events.concat(customerProductView(pageViewPayload));\n  } else if (eventName === AnalyticsEventName.SEARCH_VIEW) {\n    events = events.concat(customerSearchView(pageViewPayload));\n  }\n\n  if (events.length) {\n    return sendToShopify(events, shopDomain);\n  } else {\n    return Promise.resolve();\n  }\n}\n\n// Shopify monorail return invalid agent for Lighthouse userAgents\nfunction isLighthouseUserAgent(): boolean {\n  if (typeof window === 'undefined' || !window.navigator) return false;\n  return /Chrome-Lighthouse/.test(window.navigator.userAgent);\n}\n\ntype MonorailResponse = {\n  status: number;\n  message: string;\n};\n\nconst ERROR_MESSAGE = 'sendShopifyAnalytics request is unsuccessful';\n\nfunction sendToShopify(\n  events: ShopifyMonorailEvent[],\n  shopDomain?: string,\n): Promise<void> {\n  if (isLighthouseUserAgent()) {\n    return Promise.resolve();\n  }\n\n  const eventsToBeSent = {\n    events,\n    metadata: {\n      event_sent_at_ms: Date.now(),\n    },\n  };\n\n  try {\n    return fetch(\n      shopDomain\n        ? `https://${shopDomain}/.well-known/shopify/monorail/unstable/produce_batch`\n        : 'https://monorail-edge.shopifysvc.com/unstable/produce_batch',\n      {\n        method: 'post',\n        headers: {\n          'content-type': 'text/plain',\n        },\n        body: JSON.stringify(eventsToBeSent),\n      },\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Response failed');\n        }\n        return response.text();\n      })\n      .then((data) => {\n        if (data) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          const jsonResponse = JSON.parse(data);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n          jsonResponse.result.forEach((eventResponse: MonorailResponse) => {\n            if (eventResponse.status !== 200) {\n              console.error(ERROR_MESSAGE, '\\n\\n', eventResponse.message);\n            }\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(ERROR_MESSAGE, err);\n        if (__HYDROGEN_DEV__) {\n          throw new Error(ERROR_MESSAGE);\n        }\n      });\n  } catch (error) {\n    // Do nothing\n    return Promise.resolve();\n  }\n}\n\nexport function getClientBrowserParameters(): ClientBrowserParameters {\n  if (errorIfServer('getClientBrowserParameters')) {\n    return {\n      uniqueToken: '',\n      visitToken: '',\n      url: '',\n      path: '',\n      search: '',\n      referrer: '',\n      title: '',\n      userAgent: '',\n      navigationType: '',\n      navigationApi: '',\n    };\n  }\n\n  const [navigationType, navigationApi] = getNavigationType();\n  const cookies = getShopifyCookies(document.cookie);\n\n  return {\n    uniqueToken: cookies[SHOPIFY_Y],\n    visitToken: cookies[SHOPIFY_S],\n    url: location.href,\n    path: location.pathname,\n    search: location.search,\n    referrer: document.referrer,\n    title: document.title,\n    userAgent: navigator.userAgent,\n    navigationType,\n    navigationApi,\n  };\n}\n\nfunction getNavigationTypeExperimental(): string | undefined {\n  try {\n    const navigationEntries =\n      performance?.getEntriesByType &&\n      performance?.getEntriesByType('navigation');\n\n    if (navigationEntries && navigationEntries[0]) {\n      // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\n      const rawType = (\n        window.performance.getEntriesByType(\n          'navigation',\n        )[0] as PerformanceNavigationTiming\n      )['type'];\n      const navType = rawType && rawType.toString();\n\n      return navType;\n    }\n  } catch (err) {\n    // Do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationTypeLegacy(): string | undefined {\n  try {\n    if (\n      PerformanceNavigation &&\n      performance?.navigation?.type !== null &&\n      performance?.navigation?.type !== undefined\n    ) {\n      //  https://developer.mozilla.org/en-US/docs/Web/API/Performance/navigation\n      const rawType = performance.navigation.type;\n      switch (rawType) {\n        case PerformanceNavigation.TYPE_NAVIGATE:\n          return 'navigate';\n          break;\n        case PerformanceNavigation.TYPE_RELOAD:\n          return 'reload';\n          break;\n        case PerformanceNavigation.TYPE_BACK_FORWARD:\n          return 'back_forward';\n          break;\n        default:\n          return `unknown: ${rawType}`;\n      }\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationType(): [string, string] {\n  try {\n    let navApi = 'PerformanceNavigationTiming';\n    let navType = getNavigationTypeExperimental();\n    if (!navType) {\n      navType = getNavigationTypeLegacy();\n      navApi = 'performance.navigation';\n    }\n    if (navType) {\n      return [navType, navApi];\n    } else {\n      return ['unknown', 'unknown'];\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return ['error', 'error'];\n}\n","import {useEffect, useState, useCallback} from 'react';\nimport {useCart} from './CartProvider.js';\nimport {\n  BaseButton,\n  type BaseButtonProps,\n  type CustomBaseButtonProps,\n} from './BaseButton.js';\n\ninterface BuyNowButtonPropsBase {\n  /** The item quantity. Defaults to 1. */\n  quantity?: number;\n  /** The ID of the variant. */\n  variantId: string;\n  /** The selling plan ID of the subscription variant */\n  sellingPlanId?: string;\n  /** An array of cart line attributes that belong to the item being added to the cart. */\n  attributes?: {\n    key: string;\n    value: string;\n  }[];\n}\n\ntype BuyNowButtonProps<AsType extends React.ElementType = 'button'> =\n  BuyNowButtonPropsBase & BaseButtonProps<AsType>;\n\n/**\n * The `BuyNowButton` component renders a button that adds an item to the cart and redirects the customer to checkout.\n * Must be a child of a `CartProvider` component.\n */\nexport function BuyNowButton<AsType extends React.ElementType = 'button'>(\n  props: BuyNowButtonProps<AsType>,\n): JSX.Element {\n  const {cartCreate, checkoutUrl} = useCart();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    quantity,\n    variantId,\n    sellingPlanId,\n    onClick,\n    attributes,\n    children,\n    ...passthroughProps\n  } = props;\n\n  useEffect(() => {\n    if (loading && checkoutUrl) {\n      window.location.href = checkoutUrl;\n    }\n  }, [loading, checkoutUrl]);\n\n  const handleBuyNow = useCallback(() => {\n    setLoading(true);\n    cartCreate({\n      lines: [\n        {\n          quantity: quantity ?? 1,\n          merchandiseId: variantId,\n          attributes,\n          sellingPlanId,\n        },\n      ],\n    });\n  }, [cartCreate, quantity, variantId, attributes, sellingPlanId]);\n\n  return (\n    <BaseButton\n      // Only certain 'as' types such as 'button' contain `disabled`\n      disabled={loading ?? (passthroughProps as {disabled?: boolean}).disabled}\n      {...passthroughProps}\n      onClick={onClick}\n      defaultOnClick={handleBuyNow}\n    >\n      {children}\n    </BaseButton>\n  );\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface BuyNowButtonPropsForDocs<\n  AsType extends React.ElementType = 'button',\n> extends BuyNowButtonPropsBase,\n    CustomBaseButtonProps<AsType> {}\n","import {ReactNode, useEffect, useState} from 'react';\nimport {useCart} from './CartProvider.js';\nimport {\n  BaseButton,\n  type BaseButtonProps,\n  type CustomBaseButtonProps,\n} from './BaseButton.js';\n\ntype ChildrenProps = {\n  /** A `ReactNode` element. */\n  children: ReactNode;\n};\ntype CartCheckoutButtonProps = Omit<BaseButtonProps<'button'>, 'onClick'> &\n  ChildrenProps;\n\n/**\n * The `CartCheckoutButton` component renders a button that redirects to the checkout URL for the cart.\n * It must be a descendent of a `CartProvider` component.\n */\nexport function CartCheckoutButton(\n  props: CartCheckoutButtonProps,\n): JSX.Element {\n  const [requestedCheckout, setRequestedCheckout] = useState(false);\n  const {status, checkoutUrl} = useCart();\n  const {children, ...passthroughProps} = props;\n\n  useEffect(() => {\n    if (requestedCheckout && checkoutUrl && status === 'idle') {\n      window.location.href = checkoutUrl;\n    }\n  }, [requestedCheckout, status, checkoutUrl]);\n\n  return (\n    <BaseButton\n      {...passthroughProps}\n      disabled={requestedCheckout || passthroughProps.disabled}\n      onClick={(): void => setRequestedCheckout(true)}\n    >\n      {children}\n    </BaseButton>\n  );\n}\n\n// This is only for documentation purposes, and it is not used in the code.\n// we ignore this issue because it makes the documentation look better than the equivalent `type` that it wants us to convert to\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CartCheckoutButtonPropsForDocs<\n  AsType extends React.ElementType = 'button',\n> extends Omit<CustomBaseButtonProps<AsType>, 'onClick'> {}\n","import {useMemo} from 'react';\nimport {useShop} from './ShopifyProvider.js';\nimport {CurrencyCode, MoneyV2} from './storefront-api-types.js';\n\nexport type UseMoneyValue = {\n  /**\n   * The currency code from the `MoneyV2` object.\n   */\n  currencyCode: CurrencyCode;\n  /**\n   * The name for the currency code, returned by `Intl.NumberFormat`.\n   */\n  currencyName?: string;\n  /**\n   * The currency symbol returned by `Intl.NumberFormat`.\n   */\n  currencySymbol?: string;\n  /**\n   * The currency narrow symbol returned by `Intl.NumberFormat`.\n   */\n  currencyNarrowSymbol?: string;\n  /**\n   * The localized amount, without any currency symbols or non-number types from the `Intl.NumberFormat.formatToParts` parts.\n   */\n  amount: string;\n  /**\n   * All parts returned by `Intl.NumberFormat.formatToParts`.\n   */\n  parts: Intl.NumberFormatPart[];\n  /**\n   * A string returned by `new Intl.NumberFormat` for the amount and currency code,\n   * using the `locale` value in the [`LocalizationProvider` component](https://shopify.dev/api/hydrogen/components/localization/localizationprovider).\n   */\n  localizedString: string;\n  /**\n   * The `MoneyV2` object provided as an argument to the hook.\n   */\n  original: MoneyV2;\n  /**\n   * A string with trailing zeros removed from the fractional part, if any exist. If there are no trailing zeros, then the fractional part remains.\n   * For example, `$640.00` turns into `$640`.\n   * `$640.42` remains `$640.42`.\n   */\n  withoutTrailingZeros: string;\n  /**\n   * A string without currency and without trailing zeros removed from the fractional part, if any exist. If there are no trailing zeros, then the fractional part remains.\n   * For example, `$640.00` turns into `640`.\n   * `$640.42` turns into `640.42`.\n   */\n  withoutTrailingZerosAndCurrency: string;\n};\n\n/**\n * The `useMoney` hook takes a [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2) and returns a\n * default-formatted string of the amount with the correct currency indicator, along with some of the parts provided by\n * [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat).\n * Uses `locale` from `ShopifyProvider`\n * &nbsp;\n * @see {@link https://shopify.dev/api/hydrogen/hooks/usemoney}\n * @example initialize the money object\n * ```ts\n * const money = useMoney({\n *   amount: '100.00',\n *   currencyCode: 'USD'\n * })\n * ```\n * &nbsp;\n *\n * @example basic usage, outputs: $100.00\n * ```ts\n * money.localizedString\n * ```\n * &nbsp;\n *\n * @example without currency, outputs: 100.00\n * ```ts\n * money.amount\n * ```\n * &nbsp;\n *\n * @example without trailing zeros, outputs: $100\n * ```ts\n * money.withoutTrailingZeros\n * ```\n * &nbsp;\n *\n * @example currency name, outputs: US dollars\n * ```ts\n * money.currencyCode\n * ```\n * &nbsp;\n *\n * @example currency symbol, outputs: $\n * ```ts\n * money.currencySymbol\n * ```\n * &nbsp;\n *\n * @example without currency and without trailing zeros, outputs: 100\n * ```ts\n * money.withoutTrailingZerosAndCurrency\n * ```\n */\nexport function useMoney(money: MoneyV2): UseMoneyValue {\n  const {countryIsoCode, languageIsoCode} = useShop();\n  const locale = languageIsoCode.includes('_')\n    ? languageIsoCode.replace('_', '-')\n    : `${languageIsoCode}-${countryIsoCode}`;\n\n  if (!locale) {\n    throw new Error(\n      `useMoney(): Unable to get 'locale' from 'useShop()', which means that 'locale' was not passed to '<ShopifyProvider/>'. 'locale' is required for 'useMoney()' to work`,\n    );\n  }\n\n  const amount = parseFloat(money.amount);\n\n  const {\n    defaultFormatter,\n    nameFormatter,\n    narrowSymbolFormatter,\n    withoutTrailingZerosFormatter,\n    withoutCurrencyFormatter,\n    withoutTrailingZerosOrCurrencyFormatter,\n  } = useMemo(() => {\n    const options = {\n      style: 'currency' as const,\n      currency: money.currencyCode,\n    };\n\n    return {\n      defaultFormatter: getLazyFormatter(locale, options),\n      nameFormatter: getLazyFormatter(locale, {\n        ...options,\n        currencyDisplay: 'name',\n      }),\n      narrowSymbolFormatter: getLazyFormatter(locale, {\n        ...options,\n        currencyDisplay: 'narrowSymbol',\n      }),\n      withoutTrailingZerosFormatter: getLazyFormatter(locale, {\n        ...options,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n      withoutCurrencyFormatter: getLazyFormatter(locale),\n      withoutTrailingZerosOrCurrencyFormatter: getLazyFormatter(locale, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      }),\n    };\n  }, [money.currencyCode, locale]);\n\n  const isPartCurrency = (part: Intl.NumberFormatPart): boolean =>\n    part.type === 'currency';\n\n  // By wrapping these properties in functions, we only\n  // create formatters if they are going to be used.\n  const lazyFormatters = useMemo(\n    () => ({\n      original: () => money,\n      currencyCode: () => money.currencyCode,\n\n      localizedString: () => defaultFormatter().format(amount),\n\n      parts: () => defaultFormatter().formatToParts(amount),\n\n      withoutTrailingZeros: () =>\n        amount % 1 === 0\n          ? withoutTrailingZerosFormatter().format(amount)\n          : defaultFormatter().format(amount),\n\n      withoutTrailingZerosAndCurrency: () =>\n        amount % 1 === 0\n          ? withoutTrailingZerosOrCurrencyFormatter().format(amount)\n          : withoutCurrencyFormatter().format(amount),\n\n      currencyName: () =>\n        nameFormatter().formatToParts(amount).find(isPartCurrency)?.value ??\n        money.currencyCode, // e.g. \"US dollars\"\n\n      currencySymbol: () =>\n        defaultFormatter().formatToParts(amount).find(isPartCurrency)?.value ??\n        money.currencyCode, // e.g. \"USD\"\n\n      currencyNarrowSymbol: () =>\n        narrowSymbolFormatter().formatToParts(amount).find(isPartCurrency)\n          ?.value ?? '', // e.g. \"$\"\n\n      amount: () =>\n        defaultFormatter()\n          .formatToParts(amount)\n          .filter((part) =>\n            ['decimal', 'fraction', 'group', 'integer', 'literal'].includes(\n              part.type,\n            ),\n          )\n          .map((part) => part.value)\n          .join(''),\n    }),\n    [\n      money,\n      amount,\n      nameFormatter,\n      defaultFormatter,\n      narrowSymbolFormatter,\n      withoutCurrencyFormatter,\n      withoutTrailingZerosFormatter,\n      withoutTrailingZerosOrCurrencyFormatter,\n    ],\n  );\n\n  // Call functions automatically when the properties are accessed\n  // to keep these functions as an implementation detail.\n  return useMemo(\n    () =>\n      new Proxy(lazyFormatters as unknown as UseMoneyValue, {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        get: (target, key) => Reflect.get(target, key)?.call(null),\n      }),\n    [lazyFormatters],\n  );\n}\n\nconst formatterCache = new Map<string, Intl.NumberFormat>();\n\nfunction getLazyFormatter(\n  locale: string,\n  options?: Intl.NumberFormatOptions,\n): () => Intl.NumberFormat {\n  const key = JSON.stringify([locale, options]);\n\n  return function (): Intl.NumberFormat {\n    let formatter = formatterCache.get(key);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      formatterCache.set(key, formatter);\n    }\n    return formatter;\n  };\n}\n","import {type ReactNode} from 'react';\nimport {useMoney} from './useMoney.js';\nimport type {MoneyV2, UnitPriceMeasurement} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nexport interface MoneyPropsBase<ComponentGeneric extends React.ElementType> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`. */\n  as?: ComponentGeneric;\n  /** An object with fields that correspond to the Storefront API's [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2). */\n  data: PartialDeep<MoneyV2, {recurseIntoArrays: true}>;\n  /** Whether to remove the currency symbol from the output. */\n  withoutCurrency?: boolean;\n  /** Whether to remove trailing zeros (fractional money) from the output. */\n  withoutTrailingZeros?: boolean;\n  /** A [UnitPriceMeasurement object](https://shopify.dev/api/storefront/2024-10/objects/unitpricemeasurement). */\n  measurement?: PartialDeep<UnitPriceMeasurement, {recurseIntoArrays: true}>;\n  /** Customizes the separator between the money output and the measurement output. Used with the `measurement` prop. Defaults to `'/'`. */\n  measurementSeparator?: ReactNode;\n}\n\n// This article helps understand the typing here https://www.benmvp.com/blog/polymorphic-react-components-typescript/ Ben is the best :)\nexport type MoneyProps<ComponentGeneric extends React.ElementType> =\n  MoneyPropsBase<ComponentGeneric> &\n    (ComponentGeneric extends keyof React.JSX.IntrinsicElements\n      ? Omit<\n          React.ComponentPropsWithoutRef<ComponentGeneric>,\n          keyof MoneyPropsBase<ComponentGeneric>\n        >\n      : React.ComponentPropsWithoutRef<ComponentGeneric>);\n\n/**\n * The `Money` component renders a string of the Storefront API's\n * [MoneyV2 object](https://shopify.dev/api/storefront/reference/common-objects/moneyv2)\n * according to the `locale` in the `ShopifyProvider` component.\n * &nbsp;\n * @see {@link https://shopify.dev/api/hydrogen/components/money}\n * @example basic usage, outputs: $100.00\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} />\n * ```\n * &nbsp;\n *\n * @example without currency, outputs: 100.00\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} withoutCurrency />\n * ```\n * &nbsp;\n *\n * @example without trailing zeros, outputs: $100\n * ```ts\n * <Money data={{amount: '100.00', currencyCode: 'USD'}} withoutTrailingZeros />\n * ```\n * &nbsp;\n *\n * @example with per-unit measurement, outputs: $100.00 per G\n * ```ts\n * <Money\n *   data={{amount: '100.00', currencyCode: 'USD'}}\n *   measurement={{referenceUnit: 'G'}}\n *   measurementSeparator=\" per \"\n * />\n * ```\n */\nexport function Money<ComponentGeneric extends React.ElementType = 'div'>({\n  data,\n  as,\n  withoutCurrency,\n  withoutTrailingZeros,\n  measurement,\n  measurementSeparator = '/',\n  ...passthroughProps\n}: MoneyProps<ComponentGeneric>): JSX.Element {\n  if (!isMoney(data)) {\n    throw new Error(\n      `<Money/> needs a valid 'data' prop that has 'amount' and 'currencyCode'`,\n    );\n  }\n  const moneyObject = useMoney(data);\n  const Wrapper = as ?? 'div';\n\n  let output = moneyObject.localizedString;\n\n  if (withoutCurrency || withoutTrailingZeros) {\n    if (withoutCurrency && !withoutTrailingZeros) {\n      output = moneyObject.amount;\n    } else if (!withoutCurrency && withoutTrailingZeros) {\n      output = moneyObject.withoutTrailingZeros;\n    } else {\n      // both\n      output = moneyObject.withoutTrailingZerosAndCurrency;\n    }\n  }\n\n  return (\n    <Wrapper {...passthroughProps}>\n      {output}\n      {measurement && measurement.referenceUnit && (\n        <>\n          {measurementSeparator}\n          {measurement.referenceUnit}\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\n// required in order to narrow the money object down and make TS happy\nfunction isMoney(\n  maybeMoney: PartialDeep<MoneyV2, {recurseIntoArrays: true}>,\n): maybeMoney is MoneyV2 {\n  return (\n    typeof maybeMoney.amount === 'string' &&\n    !!maybeMoney.amount &&\n    typeof maybeMoney.currencyCode === 'string' &&\n    !!maybeMoney.currencyCode\n  );\n}\n","import {Money, type MoneyPropsBase} from './Money.js';\nimport {useCart} from './CartProvider.js';\n\ninterface CartCostPropsBase {\n  /** A string type that defines the type of cost needed. Valid values: `total`, `subtotal`, `tax`, or `duty`. */\n  amountType?: 'total' | 'subtotal' | 'tax' | 'duty';\n  /** Any `ReactNode` elements. */\n  children?: React.ReactNode;\n}\n\ntype CartCostProps = Omit<React.ComponentProps<typeof Money>, 'data'> &\n  CartCostPropsBase;\n\n/**\n * The `CartCost` component renders a `Money` component with the cost associated with the `amountType` prop.\n * If no `amountType` prop is specified, then it defaults to `totalAmount`.\n * Depends on `useCart()` and must be a child of `<CartProvider/>`\n */\nexport function CartCost(props: CartCostProps): JSX.Element | null {\n  const {cost} = useCart();\n  const {amountType = 'total', children, ...passthroughProps} = props;\n  let amount;\n\n  if (amountType == 'total') {\n    amount = cost?.totalAmount;\n  } else if (amountType == 'subtotal') {\n    amount = cost?.subtotalAmount;\n  } else if (amountType == 'tax') {\n    amount = cost?.totalTaxAmount;\n  } else if (amountType == 'duty') {\n    amount = cost?.totalDutyAmount;\n  }\n\n  if (amount == null) {\n    return null;\n  }\n\n  return (\n    <Money {...passthroughProps} data={amount}>\n      {children}\n    </Money>\n  );\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface CartCostPropsForDocs<AsType extends React.ElementType = 'div'>\n  extends Omit<MoneyPropsBase<AsType>, 'data'>,\n    CartCostPropsBase {}\n","import {useContext, createContext, type ReactNode} from 'react';\nimport {\n  ComponentizableCartLine,\n  type CartLine,\n} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\ntype CartLinePartialDeep = PartialDeep<\n  CartLine | ComponentizableCartLine,\n  {recurseIntoArrays: true}\n>;\n\nexport const CartLineContext = createContext<CartLinePartialDeep | null>(null);\n\n/**\n * The `useCartLine` hook provides access to the [CartLine object](https://shopify.dev/api/storefront/2024-10/objects/cartline) from the Storefront API. It must be a descendent of a `CartProvider` component.\n */\nexport function useCartLine(): CartLinePartialDeep {\n  const context = useContext(CartLineContext);\n\n  if (context == null) {\n    throw new Error('Expected a cart line context but none was found');\n  }\n\n  return context;\n}\n\ntype CartLineProviderProps = {\n  /** Any `ReactNode` elements. */\n  children: ReactNode;\n  /** A cart line object. */\n  line: CartLinePartialDeep;\n};\n\n/**\n * The `CartLineProvider` component creates a context for using a cart line.\n */\nexport function CartLineProvider({\n  children,\n  line,\n}: CartLineProviderProps): JSX.Element {\n  return (\n    <CartLineContext.Provider value={line}>{children}</CartLineContext.Provider>\n  );\n}\n","import type {ComponentPropsWithoutRef, ElementType} from 'react';\nimport {useCartLine} from './CartLineProvider.js';\n\ninterface CartLineQuantityBaseProps<\n  ComponentGeneric extends ElementType = 'span',\n> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `span`. */\n  as?: ComponentGeneric;\n}\n\nexport type CartLineQuantityProps<ComponentGeneric extends ElementType> =\n  CartLineQuantityBaseProps<ComponentGeneric> &\n    Omit<\n      ComponentPropsWithoutRef<ComponentGeneric>,\n      keyof CartLineQuantityBaseProps<ComponentGeneric>\n    >;\n\n/**\n * The `<CartLineQuantity/>` component renders a `span` (or another element / component that can be customized by the `as` prop) with the cart line's quantity.\n *\n * It must be a descendent of a `<CartLineProvider/>` component, and uses the `useCartLine()` hook internally.\n */\nexport function CartLineQuantity<ComponentGeneric extends ElementType = 'span'>(\n  props: CartLineQuantityProps<ComponentGeneric>,\n): JSX.Element {\n  const cartLine = useCartLine();\n  const {as, ...passthroughProps} = props;\n\n  const Wrapper = as ? as : 'span';\n\n  return <Wrapper {...passthroughProps}>{cartLine.quantity}</Wrapper>;\n}\n","import {useCallback} from 'react';\nimport {useCart} from './CartProvider.js';\nimport {useCartLine} from './CartLineProvider.js';\nimport {BaseButton, type BaseButtonProps} from './BaseButton.js';\nimport type {CartLineUpdateInput} from './storefront-api-types.js';\n\ninterface CartLineQuantityAdjustButtonBaseProps {\n  /** The adjustment for a cart line's quantity. Valid values: `increase` (default), `decrease`, or `remove`. */\n  adjust?: 'increase' | 'decrease' | 'remove';\n}\n\ntype CartLineQuantityAdjustButtonProps<\n  AsType extends React.ElementType = 'button',\n> = BaseButtonProps<AsType> & CartLineQuantityAdjustButtonBaseProps;\n\n/**\n * The `<CartLineQuantityAdjustButton />` component renders a button that adjusts the cart line's quantity when pressed.\n *\n * It must be a descendent of `<CartLineProvider/>` and `<CartProvider/>`.\n */\nexport function CartLineQuantityAdjustButton<\n  AsType extends React.ElementType = 'button',\n>(props: CartLineQuantityAdjustButtonProps<AsType>): JSX.Element {\n  const {status, linesRemove, linesUpdate} = useCart();\n  const cartLine = useCartLine();\n  const {children, adjust, onClick, ...passthroughProps} = props;\n\n  const handleAdjust = useCallback(() => {\n    if (adjust === 'remove') {\n      linesRemove([cartLine?.id ?? '']);\n      return;\n    }\n\n    const quantity =\n      adjust === 'decrease'\n        ? (cartLine?.quantity ?? 0) - 1\n        : (cartLine?.quantity ?? 0) + 1;\n\n    if (quantity <= 0) {\n      linesRemove([cartLine?.id ?? '']);\n      return;\n    }\n\n    const lineUpdate = {\n      id: cartLine?.id ?? '',\n      quantity,\n      attributes: (cartLine?.attributes ??\n        []) as CartLineUpdateInput['attributes'],\n    } satisfies CartLineUpdateInput;\n\n    linesUpdate([lineUpdate]);\n  }, [\n    adjust,\n    cartLine?.attributes,\n    cartLine?.id,\n    cartLine?.quantity,\n    linesRemove,\n    linesUpdate,\n  ]);\n\n  // Only certain 'as' types such as 'button' contain `disabled`\n  const disabledAttr = (passthroughProps as {disabled?: boolean}).disabled;\n\n  return (\n    <BaseButton\n      {...passthroughProps}\n      onClick={onClick}\n      defaultOnClick={handleAdjust}\n      disabled={\n        typeof disabledAttr !== 'undefined' ? disabledAttr : status !== 'idle'\n      }\n    >\n      {children}\n    </BaseButton>\n  );\n}\n","/**\n * Meant to be used with GraphQL CodeGen to type the Storefront API's custom scalars correctly.\n * Reference for the GraphQL types: https://shopify.dev/docs/api/storefront/2024-10/scalars/HTML\n * Note: JSON is generated as 'unknown' by default.\n */\nexport const storefrontApiCustomScalars = {\n  // Keep in sync with the definitions in the app/nextjs/codegen.ts!\n  DateTime: 'string',\n  Decimal: 'string',\n  HTML: 'string',\n  URL: 'string',\n  Color: 'string',\n  UnsignedInt64: 'string',\n};\n\n/**\n * Meant to be used with GraphQL CodeGen to type the Storefront API's custom scalars correctly.\n * Reference for the GraphQL types: https://shopify.dev/docs/api/customer/2024-10/scalars/HTML\n * Note: JSON is generated as 'unknown' by default.\n */\nexport const customerAccountApiCustomScalars = {\n  DateTime: 'string',\n  Decimal: 'string',\n  HTML: 'string',\n  ISO8601DateTime: 'string',\n  URL: 'string',\n  UnsignedInt64: 'string',\n};\n","import type {ExternalVideo as ExternalVideoType} from './storefront-api-types.js';\nimport type {Entries, PartialDeep} from 'type-fest';\nimport {forwardRef, IframeHTMLAttributes} from 'react';\n\nexport interface ExternalVideoBaseProps {\n  /**\n   * An object with fields that correspond to the Storefront API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n   */\n  data: PartialDeep<ExternalVideoType, {recurseIntoArrays: true}>;\n  /** An object containing the options available for either\n   * [YouTube](https://developers.google.com/youtube/player_parameters#Parameters) or\n   * [Vimeo](https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters).\n   */\n  options?: YouTube | Vimeo;\n}\n\nexport type ExternalVideoProps = Omit<\n  IframeHTMLAttributes<HTMLIFrameElement>,\n  'src'\n> &\n  ExternalVideoBaseProps;\n\n/**\n * The `ExternalVideo` component renders an embedded video for the Storefront\n * API's [ExternalVideo object](https://shopify.dev/api/storefront/reference/products/externalvideo).\n */\nexport const ExternalVideo = forwardRef<HTMLIFrameElement, ExternalVideoProps>(\n  (props, ref): JSX.Element => {\n    const {\n      data,\n      options,\n      id = data.id,\n      frameBorder = '0',\n      allow = 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture',\n      allowFullScreen = true,\n      loading = 'lazy',\n      ...passthroughProps\n    } = props;\n\n    if (!data.embedUrl) {\n      throw new Error(`<ExternalVideo/> requires the 'embedUrl' property`);\n    }\n\n    let finalUrl: string = data.embedUrl;\n\n    if (options) {\n      const urlObject = new URL(data.embedUrl);\n      for (const [key, value] of Object.entries(options) as Entries<\n        typeof options\n      >) {\n        if (typeof value === 'undefined') {\n          continue;\n        }\n\n        urlObject.searchParams.set(key, value.toString());\n      }\n      finalUrl = urlObject.toString();\n    }\n\n    return (\n      <iframe\n        {...passthroughProps}\n        id={id ?? data.embedUrl}\n        title={data.alt ?? data.id ?? 'external video'}\n        frameBorder={frameBorder}\n        allow={allow}\n        allowFullScreen={allowFullScreen}\n        src={finalUrl}\n        loading={loading}\n        ref={ref}\n      ></iframe>\n    );\n  },\n);\n\ninterface YouTube {\n  autoplay?: 0 | 1;\n  cc_lang_pref?: string;\n  cc_load_policy?: 1;\n  color?: 'red' | 'white';\n  controls?: 0 | 1;\n  disablekb?: 0 | 1;\n  enablejsapi?: 0 | 1;\n  end?: number;\n  fs?: 0 | 1;\n  hl?: string;\n  iv_load_policy?: 1 | 3;\n  list?: string;\n  list_type?: 'playlist' | 'user_uploads';\n  loop?: 0 | 1;\n  modest_branding?: 1;\n  origin?: string;\n  playlist?: string;\n  plays_inline?: 0 | 1;\n  rel?: 0 | 1;\n  start?: number;\n  widget_referrer?: string;\n}\n\ntype VimeoBoolean = 0 | 1 | boolean;\n\ninterface Vimeo {\n  autopause?: VimeoBoolean;\n  autoplay?: VimeoBoolean;\n  background?: VimeoBoolean;\n  byline?: VimeoBoolean;\n  color?: string;\n  controls?: VimeoBoolean;\n  dnt?: VimeoBoolean;\n  loop?: VimeoBoolean;\n  muted?: VimeoBoolean;\n  pip?: VimeoBoolean;\n  playsinline?: VimeoBoolean;\n  portrait?: VimeoBoolean;\n  quality?: '240p' | '360p' | '540p' | '720p' | '1080p' | '2k' | '4k';\n  speed?: VimeoBoolean;\n  '#t'?: string;\n  texttrack?: string;\n  title?: VimeoBoolean;\n  transparent?: VimeoBoolean;\n}\n","/**\n * This file provides utility functions for determining whether or not an option value combination is present in an encoded option value string.\n *\n * In V1 of the encoding strategy, option value arrays are encoded as a trie with the following rules:\n *  - `:` `,` ` ` and `-` are control characters.\n *  - `:` indicates a new option. ex: 0:1 indicates value 0 for the option in position 1, value 1 for the option in position 2.\n *  - `,` indicates the end of a repeated prefix, mulitple consecutive commas indicate the end of multiple repeated prefixes.\n *  - ` ` indicates a gap in the sequence of option values. ex: `0 4` indicates option values in position 0 and 4 are present.\n *  - `-` indicates a continuous range of option values. ex: `0 1-3 4`. Ranges are only present encoded in the final option value position, so for example the trie for the set [[0,0,0],[0,0,1], ..., [0,2,2]] will be structured as `0:0:0-2,1:0-2,2:0-2`, not `0:0-2:0-2`.\n */\n\nimport {Product} from './storefront-api-types.js';\n\nconst OPTION_VALUE_SEPARATOR = ',';\n\nconst V1_CONTROL_CHARS = {\n  OPTION: ':',\n  END_OF_PREFIX: ',',\n  SEQUENCE_GAP: ' ',\n  RANGE: '-',\n};\n\nexport type IsOptionValueCombinationInEncodedVariant = (\n  targetOptionValueCombination: number[],\n  encodedVariantField: string,\n) => boolean;\n\n/**\n * Determine whether an option value combination is present in an encoded option value string. Function is memoized by encodedVariantField.\n *\n * @param targetOptionValueCombination - Indices of option values to look up in the encoded option value string. A partial set of indices may be passed to determine whether a node or any children is present. For example, if a product has 3 options, passing [0] will return true if any option value combination for the first option's option value is present in the encoded string.\n * @param encodedVariantField - Encoded option value string from the Storefront API, e.g. [product.encodedVariantExistence](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantexistence) or [product.encodedVariantAvailability](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantavailability)\n * @returns - True if a full or partial targetOptionValueIndices is present in the encoded option value string, false otherwise.\n */\nexport const isOptionValueCombinationInEncodedVariant: IsOptionValueCombinationInEncodedVariant =\n  ((): IsOptionValueCombinationInEncodedVariant => {\n    const decodedOptionValues = new Map<string, Set<string>>();\n\n    return function (\n      targetOptionValueCombination: number[],\n      encodedVariantField: string,\n    ): boolean {\n      if (targetOptionValueCombination.length === 0) {\n        return false;\n      }\n\n      if (!decodedOptionValues.has(encodedVariantField)) {\n        const decodedOptionValuesSet = new Set<string>();\n\n        for (const optionValue of decodeEncodedVariant(encodedVariantField)) {\n          // add the complete option value to the decoded option values set\n          decodedOptionValuesSet.add(optionValue.join(OPTION_VALUE_SEPARATOR));\n\n          // add all composite parts of the option value to the decoded option values set. e.g. if the option value is [0,1,2], add \"0\", \"0,1\", \"0,1,2\"\n          for (let i = 0; i < optionValue.length; i++) {\n            decodedOptionValuesSet.add(\n              optionValue.slice(0, i + 1).join(OPTION_VALUE_SEPARATOR),\n            );\n          }\n        }\n\n        decodedOptionValues.set(encodedVariantField, decodedOptionValuesSet);\n      }\n\n      return Boolean(\n        decodedOptionValues\n          .get(encodedVariantField)\n          ?.has(targetOptionValueCombination.join(OPTION_VALUE_SEPARATOR)),\n      );\n    };\n  })();\n\ntype EncodedVariantField =\n  | Product['encodedVariantAvailability']\n  | Product['encodedVariantExistence'];\ntype DecodedOptionValues = number[][];\n\n/**\n * For an encoded option value string, decode into option value combinations. Entries represent a valid combination formatted as an array of option value positions.\n * @param encodedVariantField - Encoded option value string from the Storefront API, e.g. [product.encodedVariantExistence](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantexistence) or [product.encodedVariantAvailability](/docs/api/storefront/2024-10/objects/Product#field-encodedvariantavailability)\n * @returns Decoded option value combinations\n */\nexport function decodeEncodedVariant(\n  encodedVariantField: EncodedVariantField,\n): DecodedOptionValues {\n  if (!encodedVariantField) return [];\n\n  if (encodedVariantField.startsWith('v1_')) {\n    return v1Decoder(stripVersion(encodedVariantField));\n  }\n\n  throw new Error('Unsupported option value encoding');\n}\n\nconst stripVersion: (encodedVariantField: string) => string = (\n  encodedVariantField: string,\n) => encodedVariantField.replace(/^v1_/, '');\n\n/**\n * We encode an array of arrays representing variants, expressed in terms of options and option values, as a trie.\n *\n * This encoding strategy allows extremely large numbers of variants to be expressed in an extremely compact data structure.\n *\n * Integers represent option and values, so [0,0,0] represents option_value at array index 0 for the options at array indexes 0, 1 and 2\n *\n * `:`, `,`, ` ` and `-` are control characters.\n * `:` indicates a new option\n * `,` indicates the end of a repeated prefix, mulitple consecutive commas indicate the end of multiple repeated prefixes.\n * ` ` indicates a gap in the sequence of option values\n * `-` indicates a continuous range of option values\n *\n * Encoding process:\n *\n * example input array: [[0,0,0], [0,1,0], [0,1,1], [1,0,0], [1,0,1], [1,1,1], [2,0,1], [2,1,0]]\n *\n * step 1: encode as string: \"0:0:0,0:1:0,0:1:1,1:0:0,1:0:1,1:1:1,2:0:1,2:1:0,\"\n * step 2: combine nodes that share a prefix: \"0:0:0,0:1:0 1,1:0:0 1,1:1:1,2:0:1,2:1:0,\"\n * step 3: encode data as a trie so no prefixes need to be repeated: \"0:0:0,1:0 1,,1:0:0 1,1:1,,2:0:1,1:0,,\"\n * step 4: since the options are sorted, use a dash to express ranges: \"0:0:0,1:0-1,,1:0:0-1,1:1,,2:0:1,1:0,,\"\n */\nfunction v1Decoder(encodedVariantField: string): number[][] {\n  const tokenizer = /[ :,-]/g;\n  let index = 0;\n  let token: RegExpExecArray | null;\n  const options: number[][] = [];\n  const currentOptionValue: number[] = [];\n  let depth = 0;\n  let rangeStart: number | null = null;\n\n  // iterate over control characters\n  while ((token = tokenizer.exec(encodedVariantField))) {\n    const operation = token[0];\n    const optionValueIndex =\n      Number.parseInt(encodedVariantField.slice(index, token.index)) || 0;\n\n    if (rangeStart !== null) {\n      // If a range has been started, iterate over the range and add each option value to the list of options\n      // - `rangeStart` is set if the last control char was a dash, e.g. `0` for 0-2. It represents the numeric option value position for the start of the range.\n      // - `optionValueIndex` is the numeric option value position for the end of the range\n      for (; rangeStart < optionValueIndex; rangeStart++) {\n        currentOptionValue[depth] = rangeStart;\n        options.push([...currentOptionValue]);\n      }\n      // indicates the range has been processed\n      rangeStart = null;\n    }\n\n    currentOptionValue[depth] = optionValueIndex;\n\n    if (operation === V1_CONTROL_CHARS.RANGE) {\n      // dash operation indicates we are in a range. e.g. 0-2 means option values 0, 1, 2\n      rangeStart = optionValueIndex;\n    } else if (operation === V1_CONTROL_CHARS.OPTION) {\n      // colon operation indicates that we are moving down to the next layer of option values. e.g. 0:0:0-2 means we traverse down from option1 to option3 and represents [[0,0,0], [0,0,1], [0,0,2]]\n      depth++;\n    } else {\n      if (\n        operation === V1_CONTROL_CHARS.SEQUENCE_GAP ||\n        (operation === V1_CONTROL_CHARS.END_OF_PREFIX &&\n          encodedVariantField[token.index - 1] !==\n            V1_CONTROL_CHARS.END_OF_PREFIX)\n      ) {\n        // add the current option value to the list of options if we hit a gap in our sequence or we are at the end of our depth and need to move back up\n        options.push([...currentOptionValue]);\n      }\n      if (operation === V1_CONTROL_CHARS.END_OF_PREFIX) {\n        // go up an option level, trash the last item in currentOptionValue\n        currentOptionValue.pop();\n        depth--;\n      }\n    }\n    index = tokenizer.lastIndex;\n  }\n\n  // Because we iterate over control characters and the range processing happens in the while,\n  // if the last control char is a range we need to manually add the final range to the option list.\n  const lastRangeStartIndex = encodedVariantField.lastIndexOf('-');\n  if (rangeStart != null && lastRangeStartIndex > 0) {\n    const finalValueIndex = parseInt(\n      encodedVariantField.substring(lastRangeStartIndex + 1),\n    );\n    for (; rangeStart <= finalValueIndex; rangeStart++) {\n      currentOptionValue[depth] = rangeStart;\n      options.push([...currentOptionValue]);\n    }\n  }\n\n  return options;\n}\n","import {isOptionValueCombinationInEncodedVariant} from './optionValueDecoder.js';\nimport type {\n  Product,\n  ProductOption,\n  ProductOptionValue,\n  ProductVariant,\n  SelectedOption,\n} from './storefront-api-types';\n\nexport type RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\ntype ProductOptionsMapping = Record<string, number>;\ntype ProductOptionValueState = {\n  variant: ProductVariant;\n  handle: string;\n  variantUriQuery: string;\n  selected: boolean;\n  exists: boolean;\n  available: boolean;\n  isDifferentProduct: boolean;\n};\ntype MappedProductOptionValue = ProductOptionValue & ProductOptionValueState;\n\n/**\n * Creates a mapping of product options to their index for matching encoded values\n * For example, a product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      optionValues: [\\{name: 'Red'\\}, \\{name: 'Blue'\\}]\n *    \\},\n *    \\{\n *      name: 'Size',\n *      optionValues: [\\{name: 'Small'\\}, \\{name: 'Medium'\\}, \\{name: 'Large'\\}]\n *    \\}\n *  ]\n * Would return\n *  [\n *    \\{Red: 0, Blue: 1\\},\n *    \\{Small: 0, Medium: 1, Large: 2\\}\n *  ]\n */\nfunction mapProductOptions(options: ProductOption[]): ProductOptionsMapping[] {\n  return options.map((option: ProductOption) => {\n    return Object.assign(\n      {},\n      ...(option?.optionValues\n        ? option.optionValues.map((value, index) => {\n            return {[value.name]: index};\n          })\n        : []),\n    ) as ProductOptionsMapping;\n  });\n}\n\n/**\n * Converts the product option into an Object\\<key, value\\> for building query params\n * For example, a selected product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      value: 'Red',\n *    \\},\n *    \\{\n *      name: 'Size',\n *      value: 'Medium',\n *    \\}\n *  ]\n * Would return\n *  \\{\n *    Color: 'Red',\n *    Size: 'Medium',\n *  \\}\n */\nexport function mapSelectedProductOptionToObject(\n  options: Pick<SelectedOption, 'name' | 'value'>[],\n): Record<string, string> {\n  return Object.assign(\n    {},\n    ...options.map((key) => {\n      return {[key.name]: key.value};\n    }),\n  ) as Record<string, string>;\n}\n\n/**\n * Returns the JSON stringify result of mapSelectedProductOptionToObject\n */\nfunction mapSelectedProductOptionToObjectAsString(\n  options: Pick<SelectedOption, 'name' | 'value'>[],\n): string {\n  return JSON.stringify(mapSelectedProductOptionToObject(options));\n}\n\n/**\n * Encode the selected product option as a key for mapping to the encoded variants\n * For example, a selected product option of\n *  [\n *    \\{\n *      name: 'Color',\n *      value: 'Red',\n *    \\},\n *    \\{\n *      name: 'Size',\n *      value: 'Medium',\n *    \\}\n *  ]\n * Would return\n *  [0,1]\n *\n * Also works with the result of mapSelectedProductOption. For example:\n *  \\{\n *    Color: 'Red',\n *    Size: 'Medium',\n *  \\}\n * Would return\n *  [0,1]\n *\n * @param selectedOption - The selected product option\n * @param productOptionMappings - The result of product option mapping from mapProductOptions\n * @returns\n */\nfunction encodeSelectedProductOptionAsKey(\n  selectedOption:\n    | Pick<SelectedOption, 'name' | 'value'>[]\n    | Record<string, string>,\n  productOptionMappings: ProductOptionsMapping[],\n): string {\n  if (Array.isArray(selectedOption)) {\n    return JSON.stringify(\n      selectedOption.map((key, index) => {\n        return productOptionMappings[index][key.value];\n      }),\n    );\n  } else {\n    return JSON.stringify(\n      Object.keys(selectedOption).map((key, index) => {\n        return productOptionMappings[index][selectedOption[key]];\n      }),\n    );\n  }\n}\n\n/**\n * Takes an array of product variants and maps them to an object with the encoded selected option values as the key.\n * For example, a product variant of\n * [\n *  \\{\n *    id: 1,\n *    selectedOptions: [\n *      \\{name: 'Color', value: 'Red'\\},\n *      \\{name: 'Size', value: 'Small'\\},\n *    ],\n *  \\},\n *  \\{\n *    id: 2,\n *    selectedOptions: [\n *      \\{name: 'Color', value: 'Red'\\},\n *      \\{name: 'Size', value: 'Medium'\\},\n *    ],\n *  \\}\n * ]\n * Would return\n * \\{\n *    '[0,0]': \\{id: 1, selectedOptions: [\\{name: 'Color', value: 'Red'\\}, \\{name: 'Size', value: 'Small'\\}]\\},\n *    '[0,1]': \\{id: 2, selectedOptions: [\\{name: 'Color', value: 'Red'\\}, \\{name: 'Size', value: 'Medium'\\}]\\},\n * \\}\n */\nfunction mapVariants(\n  variants: ProductVariant[],\n  productOptionMappings: ProductOptionsMapping[],\n): Record<string, ProductVariant> {\n  return Object.assign(\n    {},\n    ...variants.map((variant) => {\n      const variantKey = encodeSelectedProductOptionAsKey(\n        variant.selectedOptions || [],\n        productOptionMappings,\n      );\n      return {[variantKey]: variant};\n    }),\n  ) as Record<string, ProductVariant>;\n}\n\nexport type MappedProductOptions = Omit<ProductOption, 'optionValues'> & {\n  optionValues: MappedProductOptionValue[];\n};\n\nconst PRODUCT_INPUTS = [\n  'options',\n  'selectedOrFirstAvailableVariant',\n  'adjacentVariants',\n];\n\nconst PRODUCT_INPUTS_EXTRA = [\n  'handle',\n  'encodedVariantExistence',\n  'encodedVariantAvailability',\n];\n\nfunction logErrorAndReturnFalse(key: string): boolean {\n  console.error(\n    `[h2:error:getProductOptions] product.${key} is missing. Make sure you query for this field from the Storefront API.`,\n  );\n  return false;\n}\n\nexport function checkProductParam(\n  product: RecursivePartial<Product>,\n  checkAll = false,\n): Product {\n  let validParam = true;\n  const productKeys = Object.keys(product);\n\n  // Check product input\n  (checkAll\n    ? [...PRODUCT_INPUTS, ...PRODUCT_INPUTS_EXTRA]\n    : PRODUCT_INPUTS\n  ).forEach((key) => {\n    if (!productKeys.includes(key)) {\n      validParam = logErrorAndReturnFalse(key);\n    }\n  });\n\n  // Check for nested options requirements\n  if (product.options) {\n    const firstOption = product?.options[0];\n\n    if (checkAll && !firstOption?.name) {\n      validParam = logErrorAndReturnFalse('options.name');\n    }\n\n    // Check for options.optionValues\n    if (product?.options[0]?.optionValues) {\n      const firstOptionValues = product.options[0].optionValues[0];\n\n      // Check for options.optionValues.name\n      if (checkAll && !firstOptionValues?.name) {\n        validParam = logErrorAndReturnFalse('options.optionValues.name');\n      }\n\n      // Check for options.optionValues.firstSelectableVariant\n      if (firstOptionValues?.firstSelectableVariant) {\n        // check product variant\n        validParam = checkProductVariantParam(\n          firstOptionValues.firstSelectableVariant,\n          'options.optionValues.firstSelectableVariant',\n          validParam,\n          checkAll,\n        );\n      } else {\n        validParam = logErrorAndReturnFalse(\n          'options.optionValues.firstSelectableVariant',\n        );\n      }\n    } else {\n      validParam = logErrorAndReturnFalse('options.optionValues');\n    }\n  }\n\n  // Check for nested selectedOrFirstAvailableVariant requirements\n  if (product.selectedOrFirstAvailableVariant) {\n    validParam = checkProductVariantParam(\n      product.selectedOrFirstAvailableVariant,\n      'selectedOrFirstAvailableVariant',\n      validParam,\n      checkAll,\n    );\n  }\n\n  // Check for nested adjacentVariants requirements\n  if (!!product.adjacentVariants && product.adjacentVariants[0]) {\n    validParam = checkProductVariantParam(\n      product.adjacentVariants[0],\n      'adjacentVariants',\n      validParam,\n      checkAll,\n    );\n  }\n\n  return (validParam ? product : {}) as Product;\n}\n\nfunction checkProductVariantParam(\n  variant: RecursivePartial<ProductVariant>,\n  key: string,\n  currentValidParamState: boolean,\n  checkAll: boolean,\n): boolean {\n  let validParam = currentValidParamState;\n\n  if (checkAll && !variant.product?.handle) {\n    validParam = logErrorAndReturnFalse(`${key}.product.handle`);\n  }\n  if (variant.selectedOptions) {\n    const firstSelectedOption = variant.selectedOptions[0];\n    if (!firstSelectedOption?.name) {\n      validParam = logErrorAndReturnFalse(`${key}.selectedOptions.name`);\n    }\n    if (!firstSelectedOption?.value) {\n      validParam = logErrorAndReturnFalse(`${key}.selectedOptions.value`);\n    }\n  } else {\n    validParam = logErrorAndReturnFalse(`${key}.selectedOptions`);\n  }\n\n  return validParam;\n}\n\n/**\n * Finds all the variants provided by adjacentVariants, options.optionValues.firstAvailableVariant,\n * and selectedOrFirstAvailableVariant and return them in a single array\n */\nexport function getAdjacentAndFirstAvailableVariants(\n  product: RecursivePartial<Product>,\n): ProductVariant[] {\n  // Checks for valid product input\n  const checkedProduct = checkProductParam(product);\n\n  if (!checkedProduct.options) return [];\n\n  const availableVariants: Record<string, ProductVariant> = {};\n  checkedProduct.options.map((option) => {\n    option.optionValues?.map((value) => {\n      if (value.firstSelectableVariant) {\n        const variantKey = mapSelectedProductOptionToObjectAsString(\n          value.firstSelectableVariant.selectedOptions,\n        );\n        availableVariants[variantKey] = value.firstSelectableVariant;\n      }\n    });\n  });\n\n  checkedProduct.adjacentVariants.map((variant) => {\n    const variantKey = mapSelectedProductOptionToObjectAsString(\n      variant.selectedOptions,\n    );\n    availableVariants[variantKey] = variant;\n  });\n\n  const selectedVariant = checkedProduct.selectedOrFirstAvailableVariant;\n  if (selectedVariant) {\n    const variantKey = mapSelectedProductOptionToObjectAsString(\n      selectedVariant.selectedOptions,\n    );\n    availableVariants[variantKey] = selectedVariant;\n  }\n\n  return Object.values(availableVariants);\n}\n\n/**\n * Returns a product options array with its relevant information\n * about the variant\n */\nexport function getProductOptions(\n  product: RecursivePartial<Product>,\n): MappedProductOptions[] {\n  // Checks for valid product input\n  const checkedProduct = checkProductParam(product, true);\n\n  if (!checkedProduct.options) return [];\n\n  const {\n    options,\n    selectedOrFirstAvailableVariant: selectedVariant,\n    adjacentVariants,\n    encodedVariantExistence,\n    encodedVariantAvailability,\n    handle: productHandle,\n  } = checkedProduct;\n  // Get a mapping of product option names to their index for matching encoded values\n  const productOptionMappings = mapProductOptions(options);\n\n  // Get the adjacent variants mapped to the encoded selected option values\n  const variants = mapVariants(\n    selectedVariant ? [selectedVariant, ...adjacentVariants] : adjacentVariants,\n    productOptionMappings,\n  );\n\n  // Get the key:value version of selected options for building url query params\n  const selectedOptions = mapSelectedProductOptionToObject(\n    selectedVariant ? selectedVariant.selectedOptions : [],\n  );\n\n  const productOptions = options.map((option, optionIndex) => {\n    return {\n      ...option,\n      optionValues: option.optionValues.map((value) => {\n        const targetOptionParams = {...selectedOptions}; // Clones the selected options\n\n        // Modify the selected option value to the current option value\n        targetOptionParams[option.name] = value.name;\n\n        // Encode the new selected option values as a key for mapping to the product variants\n        const targetKey = encodeSelectedProductOptionAsKey(\n          targetOptionParams || [],\n          productOptionMappings,\n        );\n\n        // Top-down option check for existence and availability\n        const topDownKey = (JSON.parse(targetKey) as number[]).slice(\n          0,\n          optionIndex + 1,\n        );\n        const exists = isOptionValueCombinationInEncodedVariant(\n          topDownKey,\n          encodedVariantExistence || '',\n        );\n        const available = isOptionValueCombinationInEncodedVariant(\n          topDownKey,\n          encodedVariantAvailability || '',\n        );\n\n        // Get the variant for the current option value if exists, else use the first selectable variant\n        const variant: ProductVariant =\n          variants[targetKey] || value.firstSelectableVariant;\n\n        // Build the query params for this option value\n        const variantOptionParam = mapSelectedProductOptionToObject(\n          variant.selectedOptions || [],\n        );\n        const searchParams = new URLSearchParams(variantOptionParam);\n        const handle = variant?.product?.handle;\n\n        return {\n          ...value,\n          variant,\n          handle,\n          variantUriQuery: searchParams.toString(),\n          selected: selectedOptions[option.name] === value.name,\n          exists,\n          available,\n          isDifferentProduct: handle !== productHandle,\n        };\n      }),\n    };\n  });\n\n  return productOptions;\n}\n","/* eslint-disable eslint-comments/disable-enable-pair */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable hydrogen/prefer-image-component */\nimport * as React from 'react';\nimport type {PartialDeep} from 'type-fest';\nimport type {Image as ImageType} from './storefront-api-types.js';\n\n/*\n * An optional prop you can use to change the\n * default srcSet generation behaviour\n */\ntype SrcSetOptions = {\n  /** The number of sizes to generate */\n  intervals: number;\n  /** The smallest image size */\n  startingWidth: number;\n  /** The increment by which to increase for each size, in pixels */\n  incrementSize: number;\n  /** The size used for placeholder fallback images */\n  placeholderWidth: number;\n};\n\ntype NormalizedProps = {\n  alt: string;\n  aspectRatio: string | undefined;\n  height: string;\n  src: string | undefined;\n  width: string;\n};\n\nexport type LoaderParams = {\n  /** The base URL of the image */\n  src?: ImageType['url'];\n  /** The URL param that controls width */\n  width?: number;\n  /** The URL param that controls height */\n  height?: number;\n  /** The URL param that controls the cropping region */\n  crop?: Crop;\n};\n\nexport type Loader = (params: LoaderParams) => string;\n\n/*\n * @TODO: Expand to include focal point support; and/or switch this to be an SF API type\n */\ntype Crop = 'center' | 'top' | 'bottom' | 'left' | 'right';\n\nexport type HydrogenImageProps = React.ComponentPropsWithRef<'img'> &\n  HydrogenImageBaseProps;\n\ntype HydrogenImageBaseProps = {\n  /** The aspect ratio of the image, in the format of `width/height`.\n   *\n   * @example\n   * ```\n   * <Image data={productImage} aspectRatio=\"4/5\" />\n   * ```\n   */\n  aspectRatio?: string;\n  /** The crop position of the image.\n   *\n   * @remarks\n   * In the event that AspectRatio is set, without specifying a crop,\n   * the Shopify CDN won't return the expected image.\n   *\n   * @defaultValue `center`\n   */\n  crop?: Crop;\n  /** Data mapping to the [Storefront API `Image`](https://shopify.dev/docs/api/storefront/2024-10/objects/Image) object. Must be an Image object.\n   *\n   * @example\n   * ```\n   * import {IMAGE_FRAGMENT, Image} from '@shopify/hydrogen';\n   *\n   * export const IMAGE_QUERY = `#graphql\n   * ${IMAGE_FRAGMENT}\n   * query {\n   *   product {\n   *     featuredImage {\n   *       ...Image\n   *     }\n   *   }\n   * }`\n   *\n   * <Image\n   *   data={productImage}\n   *   sizes=\"(min-width: 45em) 50vw, 100vw\"\n   *   aspectRatio=\"4/5\"\n   * />\n   * ```\n   *\n   * Image: {@link https://shopify.dev/api/storefront/reference/common-objects/image}\n   */\n  data?: PartialDeep<ImageType, {recurseIntoArrays: true}>;\n  /** A function that returns a URL string for an image.\n   *\n   * @remarks\n   * By default, this uses Shopify’s CDN {@link https://cdn.shopify.com/} but you can provide\n   * your own function to use a another provider, as long as they support URL based image transformations.\n   */\n  loader?: Loader;\n  /** An optional prop you can use to change the default srcSet generation behaviour */\n  srcSetOptions?: SrcSetOptions;\n};\n\n/**\n * A Storefront API GraphQL fragment that can be used to query for an image.\n */\nexport const IMAGE_FRAGMENT = `#graphql\n  fragment Image on Image {\n    altText\n    url\n    width\n    height\n  }\n`;\n\n/**\n * Hydrogen’s Image component is a wrapper around the HTML image element.\n * It supports the same props as the HTML `img` element, but automatically\n * generates the srcSet and sizes attributes for you. For most use cases,\n * you’ll want to set the `aspectRatio` prop to ensure the image is sized\n * correctly.\n *\n * @remarks\n * - `decoding` is set to `async` by default.\n * - `loading` is set to `lazy` by default.\n * - `alt` will automatically be set to the `altText` from the Storefront API if passed in the `data` prop\n * - `src` will automatically be set to the `url` from the Storefront API if passed in the `data` prop\n *\n * @example\n * A responsive image with a 4:5 aspect ratio:\n * ```\n * <Image\n *   data={product.featuredImage}\n *   aspectRatio=\"4/5\"\n *   sizes=\"(min-width: 45em) 40vw, 100vw\"\n * />\n * ```\n * @example\n * A fixed size image:\n * ```\n * <Image\n *   data={product.featuredImage}\n *   width={100}\n *   height={100}\n * />\n * ```\n *\n * {@link https://shopify.dev/docs/api/hydrogen-react/components/image}\n */\nexport const Image = React.forwardRef<HTMLImageElement, HydrogenImageProps>(\n  (\n    {\n      alt,\n      aspectRatio,\n      crop = 'center',\n      data,\n      decoding = 'async',\n      height = 'auto',\n      loader = shopifyLoader,\n      loading = 'lazy',\n      sizes,\n      src,\n      srcSetOptions = {\n        intervals: 15,\n        startingWidth: 200,\n        incrementSize: 200,\n        placeholderWidth: 100,\n      },\n      width = '100%',\n      ...passthroughProps\n    },\n    ref,\n  ) => {\n    /*\n     * Gets normalized values for width, height from data  prop\n     */\n    const normalizedData = React.useMemo(() => {\n      /* Only use data width if height is also set */\n      const dataWidth: number | undefined =\n        data?.width && data?.height ? data?.width : undefined;\n\n      const dataHeight: number | undefined =\n        data?.width && data?.height ? data?.height : undefined;\n\n      return {\n        width: dataWidth,\n        height: dataHeight,\n        unitsMatch: Boolean(unitsMatch(dataWidth, dataHeight)),\n      };\n    }, [data]);\n\n    /*\n     * Gets normalized values for width, height, src, alt, and aspectRatio props\n     * supporting the presence of `data` in addition to flat props.\n     */\n    const normalizedProps = React.useMemo(() => {\n      const nWidthProp: string | number = width || '100%';\n      const widthParts = getUnitValueParts(nWidthProp.toString());\n      const nWidth = `${widthParts.number}${widthParts.unit}`;\n\n      const autoHeight = height === undefined || height === null;\n      const heightParts = autoHeight\n        ? null\n        : getUnitValueParts(height.toString());\n\n      const fixedHeight = heightParts\n        ? `${heightParts.number}${heightParts.unit}`\n        : '';\n\n      const nHeight = autoHeight ? 'auto' : fixedHeight;\n\n      const nSrc: string | undefined = src || data?.url;\n\n      if (__HYDROGEN_DEV__ && !nSrc) {\n        console.warn(\n          `No src or data.url provided to Image component.`,\n          passthroughProps?.key || '',\n        );\n      }\n\n      const nAlt: string = data?.altText && !alt ? data?.altText : alt || '';\n\n      const nAspectRatio: string | undefined = aspectRatio\n        ? aspectRatio\n        : normalizedData.unitsMatch\n        ? [\n            getNormalizedFixedUnit(normalizedData.width),\n            getNormalizedFixedUnit(normalizedData.height),\n          ].join('/')\n        : undefined;\n\n      return {\n        width: nWidth,\n        height: nHeight,\n        src: nSrc,\n        alt: nAlt,\n        aspectRatio: nAspectRatio,\n      };\n    }, [\n      width,\n      height,\n      src,\n      data,\n      alt,\n      aspectRatio,\n      normalizedData,\n      passthroughProps?.key,\n    ]);\n\n    const {intervals, startingWidth, incrementSize, placeholderWidth} =\n      srcSetOptions;\n\n    /*\n     * This function creates an array of widths to be used in srcSet\n     */\n    const imageWidths = React.useMemo(() => {\n      return generateImageWidths(\n        width,\n        intervals,\n        startingWidth,\n        incrementSize,\n      );\n    }, [width, intervals, startingWidth, incrementSize]);\n\n    const fixedWidth = isFixedWidth(normalizedProps.width);\n\n    if (__HYDROGEN_DEV__ && !sizes && !fixedWidth) {\n      console.warn(\n        [\n          'No sizes prop provided to Image component,',\n          'you may be loading unnecessarily large images.',\n          `Image used is ${\n            src || data?.url || passthroughProps?.key || 'unknown'\n          }`,\n        ].join(' '),\n      );\n    }\n\n    /*\n     * We check to see whether the image is fixed width or not,\n     * if fixed, we still provide a srcSet, but only to account for\n     * different pixel densities.\n     */\n    if (fixedWidth) {\n      return (\n        <FixedWidthImage\n          aspectRatio={aspectRatio}\n          crop={crop}\n          decoding={decoding}\n          height={height}\n          imageWidths={imageWidths}\n          loader={loader}\n          loading={loading}\n          normalizedProps={normalizedProps}\n          passthroughProps={passthroughProps}\n          ref={ref}\n          width={width}\n          data={data}\n        />\n      );\n    } else {\n      return (\n        <FluidImage\n          aspectRatio={aspectRatio}\n          crop={crop}\n          decoding={decoding}\n          imageWidths={imageWidths}\n          loader={loader}\n          loading={loading}\n          normalizedProps={normalizedProps}\n          passthroughProps={passthroughProps}\n          placeholderWidth={placeholderWidth}\n          ref={ref}\n          sizes={sizes}\n          data={data}\n        />\n      );\n    }\n  },\n);\n\ntype FixedImageExludedProps =\n  | 'data'\n  | 'loader'\n  | 'loaderOptions'\n  | 'sizes'\n  | 'srcSetOptions'\n  | 'widths';\n\ntype FixedWidthImageProps = Omit<HydrogenImageProps, FixedImageExludedProps> &\n  Pick<HydrogenImageBaseProps, 'data'> & {\n    loader: Loader;\n    passthroughProps: React.ImgHTMLAttributes<HTMLImageElement>;\n    normalizedProps: NormalizedProps;\n    imageWidths: number[];\n    ref: React.Ref<HTMLImageElement>;\n  };\n\nconst FixedWidthImage = React.forwardRef<\n  HTMLImageElement,\n  FixedWidthImageProps\n>(\n  (\n    {\n      aspectRatio,\n      crop,\n      decoding,\n      height,\n      imageWidths,\n      loader = shopifyLoader,\n      loading,\n      normalizedProps,\n      passthroughProps,\n      width,\n      data,\n    },\n    ref,\n  ) => {\n    const fixed = React.useMemo(() => {\n      const intWidth: number | undefined = getNormalizedFixedUnit(width);\n      const intHeight: number | undefined = getNormalizedFixedUnit(height);\n\n      /*\n       * The aspect ratio for fixed width images is taken from the explicitly\n       * set prop, but if that's not present, and both width and height are\n       * set, we calculate the aspect ratio from the width and height—as\n       * long as they share the same unit type (e.g. both are 'px').\n       */\n      const fixedAspectRatio = aspectRatio\n        ? aspectRatio\n        : unitsMatch(normalizedProps.width, normalizedProps.height)\n        ? [intWidth, intHeight].join('/')\n        : normalizedProps.aspectRatio\n        ? normalizedProps.aspectRatio\n        : undefined;\n\n      /*\n       * The Sizes Array generates an array of all the parts\n       * that make up the srcSet, including the width, height, and crop\n       */\n      const sizesArray =\n        imageWidths === undefined\n          ? undefined\n          : generateSizes(imageWidths, fixedAspectRatio, crop, {\n              width: data?.width ?? undefined,\n              height: data?.height ?? undefined,\n            });\n\n      const fixedHeight = intHeight\n        ? intHeight\n        : fixedAspectRatio && intWidth\n        ? intWidth * (parseAspectRatio(fixedAspectRatio) ?? 1)\n        : undefined;\n\n      const srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader);\n      const src = loader({\n        src: normalizedProps.src,\n        width: intWidth,\n        height: fixedHeight,\n        crop: normalizedProps.height === 'auto' ? undefined : crop,\n      });\n\n      return {\n        width: intWidth,\n        aspectRatio: fixedAspectRatio,\n        height: fixedHeight,\n        srcSet,\n        src,\n      };\n    }, [\n      aspectRatio,\n      crop,\n      data,\n      height,\n      imageWidths,\n      loader,\n      normalizedProps,\n      width,\n    ]);\n\n    return (\n      <img\n        ref={ref}\n        alt={normalizedProps.alt}\n        decoding={decoding}\n        height={fixed.height}\n        loading={loading}\n        src={fixed.src}\n        srcSet={fixed.srcSet}\n        width={fixed.width}\n        style={{\n          aspectRatio: fixed.aspectRatio,\n          ...passthroughProps.style,\n        }}\n        {...passthroughProps}\n      />\n    );\n  },\n);\n\ntype FluidImageExcludedProps =\n  | 'data'\n  | 'width'\n  | 'height'\n  | 'loader'\n  | 'loaderOptions'\n  | 'srcSetOptions';\n\ntype FluidImageProps = Omit<HydrogenImageProps, FluidImageExcludedProps> &\n  Pick<HydrogenImageBaseProps, 'data'> & {\n    imageWidths: number[];\n    loader: Loader;\n    normalizedProps: NormalizedProps;\n    passthroughProps: React.ImgHTMLAttributes<HTMLImageElement>;\n    placeholderWidth: number;\n    ref: React.Ref<HTMLImageElement>;\n  };\n\nconst FluidImage = React.forwardRef<HTMLImageElement, FluidImageProps>(\n  (\n    {\n      crop,\n      decoding,\n      imageWidths,\n      loader = shopifyLoader,\n      loading,\n      normalizedProps,\n      passthroughProps,\n      placeholderWidth,\n      sizes,\n      data,\n    },\n    ref,\n  ) => {\n    const fluid = React.useMemo(() => {\n      const sizesArray =\n        imageWidths === undefined\n          ? undefined\n          : generateSizes(imageWidths, normalizedProps.aspectRatio, crop, {\n              width: data?.width ?? undefined,\n              height: data?.height ?? undefined,\n            });\n\n      const placeholderHeight =\n        normalizedProps.aspectRatio && placeholderWidth\n          ? placeholderWidth *\n            (parseAspectRatio(normalizedProps.aspectRatio) ?? 1)\n          : undefined;\n\n      const srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader);\n\n      const src = loader({\n        src: normalizedProps.src,\n        width: placeholderWidth,\n        height: placeholderHeight,\n        crop,\n      });\n\n      return {\n        placeholderHeight,\n        srcSet,\n        src,\n      };\n    }, [crop, data, imageWidths, loader, normalizedProps, placeholderWidth]);\n\n    return (\n      <img\n        ref={ref}\n        alt={normalizedProps.alt}\n        decoding={decoding}\n        height={fluid.placeholderHeight}\n        loading={loading}\n        sizes={sizes}\n        src={fluid.src}\n        srcSet={fluid.srcSet}\n        width={placeholderWidth}\n        {...passthroughProps}\n        style={{\n          width: normalizedProps.width,\n          aspectRatio: normalizedProps.aspectRatio,\n          ...passthroughProps.style,\n        }}\n      />\n    );\n  },\n);\n\n/**\n * The shopifyLoader function is a simple utility function that takes a src, width,\n * height, and crop and returns a string that can be used as the src for an image.\n * It can be used with the Hydrogen Image component or with the next/image component.\n * (or any others that accept equivalent configuration)\n * @param src - The source URL of the image, e.g. `https://cdn.shopify.com/static/sample-images/garnished.jpeg`\n * @param width - The width of the image, e.g. `100`\n * @param height - The height of the image, e.g. `100`\n * @param crop - The crop of the image, e.g. `center`\n * @returns A Shopify image URL with the correct query parameters, e.g. `https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=100&height=100&crop=center`\n *\n * @example\n * ```\n * shopifyLoader({\n *   src: 'https://cdn.shopify.com/static/sample-images/garnished.jpeg',\n *   width: 100,\n *   height: 100,\n *   crop: 'center',\n * })\n * ```\n */\nconst PLACEHOLDER_DOMAIN = 'https://placeholder.shopify.com';\nexport function shopifyLoader({src, width, height, crop}: LoaderParams) {\n  if (!src) {\n    return '';\n  }\n\n  const url = new URL(src, PLACEHOLDER_DOMAIN);\n\n  if (width) {\n    url.searchParams.append('width', Math.round(width).toString());\n  }\n\n  if (height) {\n    url.searchParams.append('height', Math.round(height).toString());\n  }\n\n  if (crop) {\n    url.searchParams.append('crop', crop);\n  }\n  return url.href.replace(PLACEHOLDER_DOMAIN, '');\n}\n\n/**\n * Checks whether the width and height share the same unit type\n * @param width - The width of the image, e.g. 100% | 10px\n * @param height - The height of the image, e.g. auto | 100px\n * @returns Whether the width and height share the same unit type (boolean)\n */\nfunction unitsMatch(\n  width: string | number = '100%',\n  height: string | number = 'auto',\n): boolean {\n  return (\n    getUnitValueParts(width.toString()).unit ===\n    getUnitValueParts(height.toString()).unit\n  );\n}\n\n/**\n * Given a CSS size, returns the unit and number parts of the value\n * @param value - The CSS size, e.g. 100px\n * @returns The unit and number parts of the value, e.g. \\{unit: 'px', number: 100\\}\n */\nfunction getUnitValueParts(value: string): {unit: string; number: number} {\n  const unit = value.replace(/[0-9.]/g, '');\n  const number = parseFloat(value.replace(unit, ''));\n\n  return {\n    unit: unit === '' ? (number === undefined ? 'auto' : 'px') : unit,\n    number,\n  };\n}\n\n/**\n * Given a value, returns the width of the image as an integer in pixels\n * @param value - The width of the image, e.g. 16px | 1rem | 1em | 16\n * @returns The width of the image in pixels, e.g. 16, or undefined if the value is not a fixed unit\n */\nfunction getNormalizedFixedUnit(value?: string | number): number | undefined {\n  if (value === undefined) {\n    return;\n  }\n\n  const {unit, number} = getUnitValueParts(value.toString());\n\n  switch (unit) {\n    case 'em':\n      return number * 16;\n    case 'rem':\n      return number * 16;\n    case 'px':\n      return number;\n    case '':\n      return number;\n    default:\n      return;\n  }\n}\n\n/**\n * This function checks whether a width is fixed or not.\n * @param width - The width of the image, e.g. 100 | '100px' | '100em' | '100rem'\n * @returns Whether the width is fixed or not\n */\nfunction isFixedWidth(width: string | number): boolean {\n  const fixedEndings = /\\d(px|em|rem)$/;\n  return typeof width === 'number' || fixedEndings.test(width);\n}\n\n/**\n * This function generates a srcSet for Shopify images.\n * @param src - The source URL of the image, e.g. https://cdn.shopify.com/static/sample-images/garnished.jpeg\n * @param sizesArray - An array of objects containing the `width`, `height`, and `crop` of the image, e.g. [\\{width: 200, height: 200, crop: 'center'\\}, \\{width: 400, height: 400, crop: 'center'\\}]\n * @param loader - A function that takes a Shopify image URL and returns a Shopify image URL with the correct query parameters\n * @returns A srcSet for Shopify images, e.g. 'https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=200&height=200&crop=center 200w, https://cdn.shopify.com/static/sample-images/garnished.jpeg?width=400&height=400&crop=center 400w'\n */\nexport function generateSrcSet(\n  src?: string,\n  sizesArray?: Array<{width?: number; height?: number; crop?: Crop}>,\n  loader: Loader = shopifyLoader,\n): string {\n  if (!src) {\n    return '';\n  }\n\n  if (sizesArray?.length === 0 || !sizesArray) {\n    return src;\n  }\n\n  return sizesArray\n    .map(\n      (size, i) =>\n        `${loader({\n          src,\n          width: size.width,\n          height: size.height,\n          crop: size.crop,\n        })} ${sizesArray.length === 3 ? `${i + 1}x` : `${size.width ?? 0}w`}`,\n    )\n    .join(`, `);\n}\n\n/**\n * This function generates an array of sizes for Shopify images, for both fixed and responsive images.\n * @param width - The CSS width of the image\n * @param intervals - The number of intervals to generate\n * @param startingWidth - The starting width of the image\n * @param incrementSize - The size of each interval\n * @returns An array of widths\n */\nexport function generateImageWidths(\n  width: string | number = '100%',\n  intervals: number,\n  startingWidth: number,\n  incrementSize: number,\n): number[] {\n  const responsive = Array.from(\n    {length: intervals},\n    (_, i) => i * incrementSize + startingWidth,\n  );\n\n  const fixed = Array.from(\n    {length: 3},\n    (_, i) => (i + 1) * (getNormalizedFixedUnit(width) ?? 0),\n  );\n\n  return isFixedWidth(width) ? fixed : responsive;\n}\n\n/**\n * Simple utility function to convert an aspect ratio CSS string to a decimal, currently only supports values like `1/1`, not `0.5`, or `auto`\n * @param aspectRatio - The aspect ratio of the image, e.g. `1/1`\n * @returns The aspect ratio as a number, e.g. `0.5`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio}\n */\nexport function parseAspectRatio(aspectRatio?: string): number | undefined {\n  if (!aspectRatio) return;\n  const [width, height] = aspectRatio.split('/');\n  return 1 / (Number(width) / Number(height));\n}\n\n// Generate data needed for Imagery loader\nexport function generateSizes(\n  imageWidths?: number[],\n  aspectRatio?: string,\n  crop: Crop = 'center',\n  sourceDimensions?: {width?: number; height?: number},\n):\n  | {\n      width: number;\n      height: number | undefined;\n      crop: Crop;\n    }[]\n  | undefined {\n  if (!imageWidths) return;\n  return imageWidths\n    .map((width: number) => {\n      return {\n        width,\n        height: aspectRatio\n          ? width * (parseAspectRatio(aspectRatio) ?? 1)\n          : undefined,\n        crop,\n      };\n    })\n    .filter(({width, height}) => {\n      if (sourceDimensions?.width && width > sourceDimensions.width) {\n        return false;\n      }\n\n      if (\n        sourceDimensions?.height &&\n        height &&\n        height > sourceDimensions.height\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n  /*\n    Given:\n      ([100, 200], 1/1, 'center')\n    Returns:\n      [{width: 100, height: 100, crop: 'center'},\n      {width: 200, height: 200, crop: 'center'}]\n  */\n}\n","import {useState, useEffect} from 'react';\n\nconst SCRIPTS_LOADED: Record<string, Promise<boolean>> = {};\n\ntype LoadScriptOptions = {\n  module?: boolean;\n  in?: 'head' | 'body';\n  attributes?: Record<string, string>;\n};\n\nexport function loadScript(\n  src: string,\n  options?: LoadScriptOptions,\n): Promise<boolean> {\n  const isScriptLoaded = SCRIPTS_LOADED[src];\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (isScriptLoaded) {\n    return isScriptLoaded;\n  }\n\n  const promise = new Promise<boolean>((resolve, reject) => {\n    const script = document.createElement('script');\n    if (options?.module) {\n      script.type = 'module';\n    } else {\n      script.type = 'text/javascript';\n    }\n    script.src = src;\n    script.onload = (): void => {\n      resolve(true);\n    };\n    script.onerror = (): void => {\n      reject(false);\n    };\n    if (options?.in === 'head') {\n      document.head.appendChild(script);\n    } else {\n      document.body.appendChild(script);\n    }\n\n    const attributes = options?.attributes;\n    if (attributes) {\n      Object.keys(attributes).forEach((key) => {\n        script.setAttribute(key, attributes[key]);\n      });\n    }\n  });\n\n  SCRIPTS_LOADED[src] = promise;\n\n  return promise;\n}\n\ntype LoadScriptParams = Parameters<typeof loadScript>;\n\n/**\n * The `useLoadScript` hook loads an external script tag in the browser. It allows React components to lazy-load large third-party dependencies.\n */\nexport function useLoadScript(\n  url: LoadScriptParams[0],\n  options?: LoadScriptParams[1],\n): ScriptState {\n  const [status, setStatus] = useState<ScriptState>('loading');\n\n  useEffect(\n    () => {\n      loadScript(url, options)\n        .then(() => setStatus('done'))\n        .catch(() => setStatus('error'));\n    },\n    // Ignore options changes since it won't trigger a new load.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [url],\n  );\n\n  return status;\n}\n\ntype ScriptState = 'loading' | 'done' | 'error';\n","import {forwardRef, type HTMLAttributes} from 'react';\nimport {shopifyLoader} from './Image.js';\nimport type {Video as VideoType} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nexport interface VideoProps {\n  /** An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/2024-10/objects/video). */\n  data: PartialDeep<VideoType, {recurseIntoArrays: true}>;\n  /** An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL. */\n  previewImageOptions?: Parameters<typeof shopifyLoader>[0];\n  /** Props that will be passed to the `video` element's `source` children elements. */\n  sourceProps?: HTMLAttributes<HTMLSourceElement> & {\n    'data-testid'?: string;\n  };\n}\n\n/**\n * The `Video` component renders a `video` for the Storefront API's [Video object](https://shopify.dev/api/storefront/reference/products/video).\n */\nexport const Video = forwardRef<\n  HTMLVideoElement,\n  JSX.IntrinsicElements['video'] & VideoProps\n>((props, ref): JSX.Element => {\n  const {\n    data,\n    previewImageOptions,\n    id = data.id,\n    playsInline = true,\n    controls = true,\n    sourceProps = {},\n    ...passthroughProps\n  } = props;\n\n  const posterUrl = shopifyLoader({\n    src: data.previewImage?.url ?? '',\n    ...previewImageOptions,\n  });\n\n  if (!data.sources) {\n    throw new Error(`<Video/> requires a 'data.sources' array`);\n  }\n\n  return (\n    // eslint-disable-next-line jsx-a11y/media-has-caption\n    <video\n      {...passthroughProps}\n      id={id}\n      playsInline={playsInline}\n      controls={controls}\n      poster={posterUrl}\n      ref={ref}\n    >\n      {data.sources.map((source) => {\n        if (!(source?.url && source?.mimeType)) {\n          throw new Error(`<Video/> needs 'source.url' and 'source.mimeType'`);\n        }\n        return (\n          <source\n            {...sourceProps}\n            key={source.url}\n            src={source.url}\n            type={source.mimeType}\n          />\n        );\n      })}\n    </video>\n  );\n});\n","import {useState, useEffect, useCallback} from 'react';\nimport {useLoadScript} from './load-script.js';\nimport type {Model3d} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport type {ModelViewerElement} from '@google/model-viewer/lib/model-viewer.js';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'model-viewer': PartialDeep<\n        ModelViewerElement,\n        {recurseIntoArrays: true}\n      >;\n    }\n  }\n}\n\ntype ModelViewerProps = Omit<\n  PartialDeep<JSX.IntrinsicElements['model-viewer'], {recurseIntoArrays: true}>,\n  'src'\n> &\n  ModelViewerBaseProps;\n\ntype ModelViewerBaseProps = {\n  /** An object with fields that correspond to the Storefront API's [Model3D object](https://shopify.dev/api/storefront/2024-10/objects/model3d). */\n  data: PartialDeep<Model3d, {recurseIntoArrays: true}>;\n  /** The callback to invoke when the 'error' event is triggered. Refer to [error in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-error). */\n  onError?: (event: Event) => void;\n  /** The callback to invoke when the `load` event is triggered. Refer to [load in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-load). */\n  onLoad?: (event: Event) => void;\n  /** The callback to invoke when the 'preload' event is triggered. Refer to [preload in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-preload). */\n  onPreload?: (event: Event) => void;\n  /** The callback to invoke when the 'model-visibility' event is triggered. Refer to [model-visibility in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-modelVisibility). */\n  onModelVisibility?: (event: Event) => void;\n  /** The callback to invoke when the 'progress' event is triggered. Refer to [progress in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-progress). */\n  onProgress?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-status' event is triggered. Refer to [ar-status in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arStatus). */\n  onArStatus?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-tracking' event is triggered. Refer to [ar-tracking in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arTracking). */\n  onArTracking?: (event: Event) => void;\n  /** The callback to invoke when the 'quick-look-button-tapped' event is triggered. Refer to [quick-look-button-tapped in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-quickLookButtonTapped). */\n  onQuickLookButtonTapped?: (event: Event) => void;\n  /** The callback to invoke when the 'camera-change' event is triggered. Refer to [camera-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-events-cameraChange). */\n  onCameraChange?: (event: Event) => void;\n  /** The callback to invoke when the 'environment-change' event is triggered. Refer to [environment-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-lightingandenv-events-environmentChange).  */\n  onEnvironmentChange?: (event: Event) => void;\n  /**  The callback to invoke when the 'play' event is triggered. Refer to [play in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-play). */\n  onPlay?: (event: Event) => void;\n  /**  The callback to invoke when the 'pause' event is triggered. Refer to [pause in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-pause). */\n  onPause?: (event: Event) => void;\n  /** The callback to invoke when the 'scene-graph-ready' event is triggered. Refer to [scene-graph-ready in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-scenegraph-events-sceneGraphReady). */\n  onSceneGraphReady?: (event: Event) => void;\n};\n\n/**\n * The `ModelViewer` component renders a 3D model (with the `model-viewer` custom element) for\n * the Storefront API's [Model3d object](https://shopify.dev/api/storefront/reference/products/model3d).\n *\n * The `model-viewer` custom element is lazily downloaded through a dynamically-injected `<script type=\"module\">` tag when the `<ModelViewer />` component is rendered\n *\n * ModelViewer is using version `1.21.1` of the `@google/model-viewer` library.\n */\nexport function ModelViewer(props: ModelViewerProps): JSX.Element | null {\n  const [modelViewer, setModelViewer] = useState<undefined | HTMLElement>(\n    undefined,\n  );\n  const callbackRef = useCallback((node: HTMLElement) => {\n    setModelViewer(node);\n  }, []);\n  const {data, children, className, ...passthroughProps} = props;\n\n  const modelViewerLoadedStatus = useLoadScript(\n    'https://unpkg.com/@google/model-viewer@v1.12.1/dist/model-viewer.min.js',\n    {\n      module: true,\n    },\n  );\n\n  useEffect(() => {\n    const hydrogenEventListener = {\n      error: passthroughProps.onError,\n      load: passthroughProps.onLoad,\n      preload: passthroughProps.onPreload,\n      'model-visibility': passthroughProps.onModelVisibility,\n      progress: passthroughProps.onProgress,\n      'ar-status': passthroughProps.onArStatus,\n      'ar-tracking': passthroughProps.onArTracking,\n      'quick-look-button-tapped': passthroughProps.onQuickLookButtonTapped,\n      'camera-change': passthroughProps.onCameraChange,\n      'environment-change': passthroughProps.onEnvironmentChange,\n      play: passthroughProps.onPlay,\n      pause: passthroughProps.onPause,\n      'scene-graph-ready': passthroughProps.onSceneGraphReady,\n    };\n\n    if (!modelViewer) {\n      return;\n    }\n    Object.entries(hydrogenEventListener).forEach(\n      ([eventName, callbackFunc]) => {\n        if (callbackFunc) {\n          modelViewer.addEventListener(eventName, callbackFunc);\n        }\n      },\n    );\n\n    return () => {\n      if (modelViewer == null) {\n        return;\n      }\n      Object.entries(hydrogenEventListener).forEach(\n        ([eventName, callbackFunc]) => {\n          if (callbackFunc) {\n            modelViewer.removeEventListener(eventName, callbackFunc);\n          }\n        },\n      );\n    };\n  }, [\n    modelViewer,\n    passthroughProps.onArStatus,\n    passthroughProps.onArTracking,\n    passthroughProps.onCameraChange,\n    passthroughProps.onEnvironmentChange,\n    passthroughProps.onError,\n    passthroughProps.onLoad,\n    passthroughProps.onModelVisibility,\n    passthroughProps.onPause,\n    passthroughProps.onPlay,\n    passthroughProps.onPreload,\n    passthroughProps.onProgress,\n    passthroughProps.onQuickLookButtonTapped,\n    passthroughProps.onSceneGraphReady,\n  ]);\n\n  if (modelViewerLoadedStatus !== 'done') {\n    // TODO: What do we want to display while the model-viewer library loads?\n    return null;\n  }\n\n  if (!data.sources?.[0]?.url) {\n    const sourcesUrlError = `<ModelViewer/> requires 'data.sources' prop to be an array, with an object that has a property 'url' on it. Rendering 'null'`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(sourcesUrlError);\n    } else {\n      console.error(sourcesUrlError);\n      return null;\n    }\n  }\n\n  if (__HYDROGEN_DEV__ && !data.alt) {\n    console.warn(\n      `<ModelViewer/> requires the 'data.alt' prop for accessibility`,\n    );\n  }\n\n  return (\n    <model-viewer\n      ref={callbackRef}\n      {...passthroughProps}\n      // @ts-expect-error src should exist\n      // @eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      class={className}\n      id={passthroughProps.id ?? data.id}\n      src={data.sources[0].url}\n      alt={data.alt ?? null}\n      camera-controls={passthroughProps.cameraControls ?? true}\n      poster={(passthroughProps.poster || data.previewImage?.url) ?? null}\n      autoplay={passthroughProps.autoplay ?? true}\n      loading={passthroughProps.loading}\n      reveal={passthroughProps.reveal}\n      ar={passthroughProps.ar}\n      ar-modes={passthroughProps.arModes}\n      ar-scale={passthroughProps.arScale}\n      // @ts-expect-error arPlacement should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-attributes-arPlacement\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ar-placement={passthroughProps.arPlacement}\n      ios-src={passthroughProps.iosSrc}\n      touch-action={passthroughProps.touchAction}\n      disable-zoom={passthroughProps.disableZoom}\n      orbit-sensitivity={passthroughProps.orbitSensitivity}\n      auto-rotate={passthroughProps.autoRotate}\n      auto-rotate-delay={passthroughProps.autoRotateDelay}\n      // @ts-expect-error rotationPerSecond should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-attributes-rotationPerSecond\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      rotation-per-second={passthroughProps.rotationPerSecond}\n      interaction-policy={passthroughProps.interactionPolicy}\n      interaction-prompt={passthroughProps.interactionPrompt}\n      interaction-prompt-style={passthroughProps.interactionPromptStyle}\n      interaction-prompt-threshold={passthroughProps.interactionPromptThreshold}\n      camera-orbit={passthroughProps.cameraOrbit}\n      camera-target={passthroughProps.cameraTarget}\n      field-of-view={passthroughProps.fieldOfView}\n      max-camera-orbit={passthroughProps.maxCameraOrbit}\n      min-camera-orbit={passthroughProps.minCameraOrbit}\n      max-field-of-view={passthroughProps.maxFieldOfView}\n      min-field-of-view={passthroughProps.minFieldOfView}\n      bounds={passthroughProps.bounds}\n      interpolation-decay={passthroughProps.interpolationDecay ?? 100}\n      skybox-image={passthroughProps.skyboxImage}\n      environment-image={passthroughProps.environmentImage}\n      exposure={passthroughProps.exposure}\n      shadow-intensity={passthroughProps.shadowIntensity ?? 0}\n      shadow-softness={passthroughProps.shadowSoftness ?? 0}\n      animation-name={passthroughProps.animationName}\n      animation-crossfade-duration={passthroughProps.animationCrossfadeDuration}\n      variant-name={passthroughProps.variantName}\n      orientation={passthroughProps.orientation}\n      scale={passthroughProps.scale}\n    >\n      {children}\n    </model-viewer>\n  );\n}\n","import {Image, type HydrogenImageProps} from './Image.js';\nimport {Video} from './Video.js';\nimport {ExternalVideo} from './ExternalVideo.js';\nimport {ModelViewer} from './ModelViewer.js';\nimport type {MediaEdge as MediaEdgeType} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport type {ModelViewerElement} from '@google/model-viewer/lib/model-viewer.js';\n\ntype BaseProps = React.HTMLAttributes<\n  HTMLImageElement | HTMLVideoElement | HTMLIFrameElement | ModelViewerElement\n>;\nexport interface MediaFileProps extends BaseProps {\n  /** An object with fields that correspond to the Storefront API's [Media object](https://shopify.dev/api/storefront/reference/products/media). */\n  data: PartialDeep<MediaEdgeType['node'], {recurseIntoArrays: true}>;\n  /** The options for the `Image`, `Video`, `ExternalVideo`, or `ModelViewer` components. */\n  mediaOptions?: MediaOptions;\n}\n\ntype MediaOptions = {\n  /** Props that will only apply when an `<Image />` is rendered */\n  image?: Omit<HydrogenImageProps, 'data'>;\n  /** Props that will only apply when a `<Video />` is rendered */\n  video?: Omit<React.ComponentProps<typeof Video>, 'data'>;\n  /** Props that will only apply when an `<ExternalVideo />` is rendered */\n  externalVideo?: Omit<\n    React.ComponentProps<typeof ExternalVideo>['options'],\n    'data'\n  >;\n  /** Props that will only apply when a `<ModelViewer />` is rendered */\n  modelViewer?: Omit<typeof ModelViewer, 'data'>;\n};\n\n/**\n * The `MediaFile` component renders the media for the Storefront API's\n * [Media object](https://shopify.dev/api/storefront/reference/products/media). It renders an `Image`, a\n * `Video`, an `ExternalVideo`, or a `ModelViewer` depending on the `__typename` of the `data` prop.\n */\nexport function MediaFile({\n  data,\n  mediaOptions,\n  ...passthroughProps\n}: MediaFileProps): JSX.Element | null {\n  switch (data.__typename) {\n    case 'MediaImage': {\n      if (!data.image) {\n        const noDataImage = `<MediaFile/>: 'data.image' does not exist for __typename of 'MediaImage'; rendering 'null' by default.`;\n        if (__HYDROGEN_DEV__) {\n          throw new Error(noDataImage);\n        } else {\n          console.warn(noDataImage);\n          return null;\n        }\n      }\n\n      return (\n        <Image\n          {...passthroughProps}\n          {...mediaOptions?.image}\n          data={data.image}\n        />\n      );\n    }\n    case 'Video': {\n      return (\n        <Video {...passthroughProps} {...mediaOptions?.video} data={data} />\n      );\n    }\n    case 'ExternalVideo': {\n      return (\n        <ExternalVideo\n          {...passthroughProps}\n          {...mediaOptions?.externalVideo}\n          data={data}\n        />\n      );\n    }\n    case 'Model3d': {\n      return (\n        // @ts-expect-error There are issues with the inferred HTML attribute types here for ModelViewer (and contentEditable), but I think that's a little bit beyond me at the moment\n        <ModelViewer\n          {...passthroughProps}\n          {...mediaOptions?.modelViewer}\n          data={data}\n        />\n      );\n    }\n    default: {\n      const typenameMissingMessage = `<MediaFile /> requires the '__typename' property to exist on the 'data' prop in order to render the matching sub-component for this type of media.`;\n      if (__HYDROGEN_DEV__) {\n        throw new Error(typenameMissingMessage);\n      } else {\n        console.error(`${typenameMissingMessage}  Rendering 'null' by default`);\n        return null;\n      }\n    }\n  }\n}\n","import type {\n  Collection,\n  GenericFile,\n  Metafield as MetafieldBaseType,\n  MoneyV2,\n  Page,\n  Product,\n  ProductVariant,\n} from './storefront-api-types.js';\nimport type {PartialDeep, Simplify} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\nimport {RootASTNode as RichTextRootASTNode} from './RichText.types.js';\n\n/**\n * A function that uses `metafield.type` to parse the Metafield's `value` or `reference` or `references` (depending on the `metafield.type`) and places the result in `metafield.parsedValue`\n *\n * TypeScript developers can use the type `ParsedMetafields` from this package to get the returned object's type correct. For example:\n *\n * ```\n * parseMetafield<ParsedMetafields['boolean']>({type: 'boolean', value: 'false'}\n * ```\n */\nexport function parseMetafield<ReturnGeneric>(\n  metafield: PartialDeep<MetafieldBaseType, {recurseIntoArrays: true}>,\n): ReturnGeneric {\n  if (!metafield.type) {\n    const noTypeError = `parseMetafield(): The 'type' field is required in order to parse the Metafield.`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(noTypeError);\n    } else {\n      console.error(`${noTypeError} Returning 'parsedValue' of 'null'`);\n      return {\n        ...metafield,\n        parsedValue: null,\n      } as ReturnGeneric;\n    }\n  }\n\n  switch (metafield.type) {\n    case 'boolean':\n      return {\n        ...metafield,\n        parsedValue: metafield.value === 'true',\n      } as ReturnGeneric;\n\n    case 'collection_reference':\n    case 'file_reference':\n    case 'page_reference':\n    case 'product_reference':\n    case 'variant_reference':\n      return {\n        ...metafield,\n        parsedValue: metafield.reference,\n      } as ReturnGeneric;\n\n    case 'color':\n    case 'multi_line_text_field':\n    case 'single_line_text_field':\n    case 'url':\n      return {\n        ...metafield,\n        parsedValue: metafield.value,\n      } as ReturnGeneric;\n\n    // TODO: 'money' should probably be parsed even further to like `useMoney()`, but that logic needs to be extracted first so it's not a hook\n    case 'dimension':\n    case 'money':\n    case 'json':\n    case 'rating':\n    case 'volume':\n    case 'weight':\n    case 'rich_text_field':\n    case 'list.color':\n    case 'list.dimension':\n    case 'list.number_integer':\n    case 'list.number_decimal':\n    case 'list.rating':\n    case 'list.single_line_text_field':\n    case 'list.url':\n    case 'list.volume':\n    case 'list.weight': {\n      let parsedValue = null;\n      try {\n        parsedValue = parseJSON(metafield.value ?? '');\n      } catch (err) {\n        const parseError = `parseMetafield(): attempted to JSON.parse the 'metafield.value' property, but failed.`;\n        if (__HYDROGEN_DEV__) {\n          throw new Error(parseError);\n        } else {\n          console.error(`${parseError} Returning 'null' for 'parsedValue'`);\n        }\n        parsedValue = null;\n      }\n      return {\n        ...metafield,\n        parsedValue,\n      } as ReturnGeneric;\n    }\n\n    case 'date':\n    case 'date_time':\n      return {\n        ...metafield,\n        parsedValue: new Date(metafield.value ?? ''),\n      } as ReturnGeneric;\n\n    case 'list.date':\n    case 'list.date_time': {\n      const jsonParseValue = parseJSON(metafield?.value ?? '') as string[];\n      return {\n        ...metafield,\n        parsedValue: jsonParseValue.map((dateString) => new Date(dateString)),\n      } as ReturnGeneric;\n    }\n\n    case 'number_decimal':\n    case 'number_integer':\n      return {\n        ...metafield,\n        parsedValue: Number(metafield.value),\n      } as ReturnGeneric;\n\n    case 'list.collection_reference':\n    case 'list.file_reference':\n    case 'list.page_reference':\n    case 'list.product_reference':\n    case 'list.variant_reference':\n      return {\n        ...metafield,\n        parsedValue: flattenConnection(metafield.references ?? undefined),\n      } as ReturnGeneric;\n\n    default: {\n      const typeNotFoundError = `parseMetafield(): the 'metafield.type' you passed in is not supported. Your type: \"${metafield.type}\". If you believe this is an error, please open an issue on GitHub.`;\n      if (__HYDROGEN_DEV__) {\n        throw new Error(typeNotFoundError);\n      } else {\n        console.error(\n          `${typeNotFoundError}  Returning 'parsedValue' of 'null'`,\n        );\n        return {\n          ...metafield,\n          parsedValue: null,\n        } as ReturnGeneric;\n      }\n    }\n  }\n}\n\n/**\n * Parses a JSON string while preventing prototype injection attacks.\n */\nexport function parseJSON(json: string): unknown {\n  if (String(json).includes('__proto__')) {\n    return JSON.parse(json, (k, v) => {\n      if (k !== '__proto__') return v as unknown;\n    }) as unknown;\n  }\n  return JSON.parse(json) as unknown;\n}\n\n// taken from https://shopify.dev/apps/metafields/types\nexport const allMetafieldTypesArray = [\n  'boolean',\n  'collection_reference',\n  'color',\n  'date',\n  'date_time',\n  'dimension',\n  'file_reference',\n  'json',\n  'money',\n  'rich_text_field',\n  'multi_line_text_field',\n  'number_decimal',\n  'number_integer',\n  'page_reference',\n  'product_reference',\n  'rating',\n  'single_line_text_field',\n  'url',\n  'variant_reference',\n  'volume',\n  'weight',\n  // list metafields\n  'list.collection_reference',\n  'list.color',\n  'list.date',\n  'list.date_time',\n  'list.dimension',\n  'list.file_reference',\n  'list.number_integer',\n  'list.number_decimal',\n  'list.page_reference',\n  'list.product_reference',\n  'list.rating',\n  'list.single_line_text_field',\n  'list.url',\n  'list.variant_reference',\n  'list.volume',\n  'list.weight',\n] as const;\n\n/** A union of all the supported `metafield.type`s */\nexport type MetafieldTypeTypes = (typeof allMetafieldTypesArray)[number];\n\n/**\n * A mapping of a Metafield's `type` to the TypeScript type that is returned from `parseMetafield()`\n * For example, when using `parseMetafield()`, the type will be correctly returned when used like the following:\n *\n * ```\n * const parsedMetafield = parseMetafield<ParsedMetafields['boolean']>(metafield);`\n * ```\n * `parsedMetafield.parsedValue`'s type is now `boolean`\n */\nexport type ParsedMetafields<ExtraTypeGeneric = void> = {\n  /** A Metafield that's been parsed, with a `parsedValue` of `boolean` */\n  boolean: Simplify<BooleanParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Collection` object (as defined by the Storefront API) */\n  collection_reference: Simplify<CollectionParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  color: Simplify<ColorParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Date` */\n  date: Simplify<DatesParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Date` */\n  date_time: Simplify<DatesParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  dimension: Simplify<MeasurementParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `GenericFile` object (as defined by the Storefront API) */\n  file_reference: Simplify<FileRefParsedMetafield>;\n  /**\n   * A Metafield that's been parsed, with a `parsedValue` of type `unknown`, unless you pass in the type as a generic. For example:\n   *\n   * ```\n   * ParsedMetafields<MyJsonType>['json']\n   * ```\n   */\n  json: Simplify<JsonParsedMetafield<ExtraTypeGeneric>>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Money` */\n  money: Simplify<MoneyParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  multi_line_text_field: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `number` */\n  number_decimal: Simplify<NumberParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `number` */\n  number_integer: Simplify<NumberParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Page` object (as defined by the Storefront API) */\n  page_reference: Simplify<PageParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `Product` object (as defined by the Storefront API) */\n  product_reference: Simplify<ProductParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Rating` */\n  rating: Simplify<RatingParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Rating` */\n  rich_text_field: Simplify<RichTextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  single_line_text_field: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `string` */\n  url: Simplify<TextParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of a `ProductVariant` object (as defined by the Storefront API) */\n  variant_reference: Simplify<VariantParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  volume: Simplify<MeasurementParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of type `Measurement` */\n  weight: Simplify<MeasurementParsedMetafield>;\n  // list metafields\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Collection` objects (as defined by the Storefront API) */\n  'list.collection_reference': Simplify<CollectionListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.color': Simplify<ColorListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of Date objects */\n  'list.date': Simplify<DatesListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of Date objects */\n  'list.date_time': Simplify<DatesListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement` objects */\n  'list.dimension': Simplify<MeasurementListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `GenericFile` objects (as defined by the Storefront API) */\n  'list.file_reference': Simplify<FileListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of numbers */\n  'list.number_integer': Simplify<NumberListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of numbers */\n  'list.number_decimal': Simplify<NumberListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Page` objects (as defined by the Storefront API) */\n  'list.page_reference': Simplify<PageListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Product` objects (as defined by the Storefront API) */\n  'list.product_reference': Simplify<ProductListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Rating`s */\n  'list.rating': Simplify<RatingListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.single_line_text_field': Simplify<TextListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of strings */\n  'list.url': Simplify<TextListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `ProductVariant` objects (as defined by the Storefront API) */\n  'list.variant_reference': Simplify<VariantListParsedRefMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement`s */\n  'list.volume': Simplify<MeasurementListParsedMetafield>;\n  /** A Metafield that's been parsed, with a `parsedValue` of an array of `Measurement`s */\n  'list.weight': Simplify<MeasurementListParsedMetafield>;\n};\n\ninterface ParsedBase extends MetafieldBaseType {\n  type: MetafieldTypeTypes;\n  parsedValue: unknown;\n}\n\ninterface BooleanParsedMetafield extends ParsedBase {\n  type: 'boolean';\n  parsedValue: boolean | null;\n}\ntype CollectionParsedRefMetafield = MetafieldBaseType & {\n  type: 'collection_reference';\n  parsedValue: Collection | null;\n};\ntype ColorParsedMetafield = MetafieldBaseType & {\n  type: 'color';\n  parsedValue: string | null;\n};\ntype DatesParsedMetafield = MetafieldBaseType & {\n  type: 'date' | 'date_time';\n  parsedValue: Date | null;\n};\n\ntype MeasurementParsedMetafield = MetafieldBaseType & {\n  type: 'dimension' | 'weight' | 'volume';\n  parsedValue: Measurement | null;\n};\n\ntype FileRefParsedMetafield = MetafieldBaseType & {\n  type: 'file_reference';\n  parsedValue: GenericFile | null;\n};\n\ntype JsonParsedMetafield<JsonTypeGeneric = void> = MetafieldBaseType & {\n  type: 'json';\n  parsedValue: JsonTypeGeneric extends void ? unknown : JsonTypeGeneric | null;\n};\n\ntype MoneyParsedMetafield = MetafieldBaseType & {\n  type: 'money';\n  parsedValue: MoneyV2 | null;\n};\n\ntype TextParsedMetafield = MetafieldBaseType & {\n  type: 'single_line_text_field' | 'multi_line_text_field' | 'url';\n  parsedValue: string | null;\n};\n\ntype NumberParsedMetafield = MetafieldBaseType & {\n  type: 'number_decimal' | 'number_integer';\n  parsedValue: number | null;\n};\n\ntype PageParsedRefMetafield = MetafieldBaseType & {\n  type: 'page_reference';\n  parsedValue: Page | null;\n};\n\ntype ProductParsedRefMetafield = MetafieldBaseType & {\n  type: 'product_reference';\n  parsedValue: Product | null;\n};\n\ntype RatingParsedMetafield = MetafieldBaseType & {\n  type: 'rating';\n  parsedValue: Rating | null;\n};\n\ntype RichTextParsedMetafield = MetafieldBaseType & {\n  type: 'rich_text_field';\n  parsedValue: RichTextRootASTNode | null;\n};\n\ntype VariantParsedRefMetafield = MetafieldBaseType & {\n  type: 'variant_reference';\n  parsedValue: ProductVariant | null;\n};\n\ntype CollectionListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.collection_reference';\n  parsedValue: Array<Collection> | null;\n};\n\ntype ColorListParsedMetafield = MetafieldBaseType & {\n  type: 'list.color';\n  parsedValue: Array<string> | null;\n};\n\ntype DatesListParsedMetafield = MetafieldBaseType & {\n  type: 'list.date' | 'list.date_time';\n  parsedValue: Array<Date> | null;\n};\n\ntype MeasurementListParsedMetafield = MetafieldBaseType & {\n  type: 'list.dimension' | 'list.weight' | 'list.volume';\n  parsedValue: Array<Measurement> | null;\n};\n\ntype FileListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.file_reference';\n  parsedValue: Array<GenericFile> | null;\n};\n\ntype TextListParsedMetafield = MetafieldBaseType & {\n  type: 'list.single_line_text_field' | 'list.url';\n  parsedValue: Array<string> | null;\n};\n\ntype NumberListParsedMetafield = MetafieldBaseType & {\n  type: 'list.number_decimal' | 'list.number_integer';\n  parsedValue: Array<number> | null;\n};\n\ntype PageListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.page_reference';\n  parsedValue: Array<Page> | null;\n};\n\ntype ProductListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.product_reference';\n  parsedValue: Array<Product> | null;\n};\n\ntype RatingListParsedMetafield = MetafieldBaseType & {\n  type: 'list.rating';\n  parsedValue: Array<Rating> | null;\n};\n\ntype VariantListParsedRefMetafield = MetafieldBaseType & {\n  type: 'list.variant_reference';\n  parsedValue: Array<ProductVariant> | null;\n};\n\nexport type Measurement = {\n  unit: string;\n  value: number;\n};\n\nexport interface Rating {\n  value: number;\n  scale_min: number;\n  scale_max: number;\n}\n","import type {\n  MoneyV2,\n  UnitPriceMeasurement,\n  Product,\n} from './storefront-api-types.js';\nimport {Money, type MoneyProps, type MoneyPropsBase} from './Money.js';\nimport type {PartialDeep} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\n\nexport interface ProductPriceProps {\n  /** A Storefront API [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** The type of price. Valid values: `regular` (default) or `compareAt`. */\n  priceType?: 'regular' | 'compareAt';\n  /** The type of value. Valid values: `min` (default), `max` or `unit`. */\n  valueType?: 'max' | 'min' | 'unit';\n  /** The ID of the variant. */\n  variantId?: string;\n}\n\n/**\n * The `ProductPrice` component renders a `Money` component with the product\n * [`priceRange`](https://shopify.dev/api/storefront/reference/products/productpricerange)'s `maxVariantPrice` or `minVariantPrice`, for either the regular price or compare at price range.\n */\nexport function ProductPrice<\n  ComponentGeneric extends React.ElementType = 'div',\n>(\n  props: ProductPriceProps &\n    Omit<MoneyProps<ComponentGeneric>, 'data' | 'measurement'>,\n): JSX.Element | null {\n  const {\n    priceType = 'regular',\n    variantId,\n    valueType = 'min',\n    data: product,\n    ...passthroughProps\n  } = props;\n\n  if (product == null) {\n    throw new Error(`<ProductPrice/> requires a product as the 'data' prop`);\n  }\n\n  let price: Partial<MoneyV2> | undefined | null;\n  let measurement: Partial<UnitPriceMeasurement> | undefined | null;\n\n  const variant = variantId\n    ? flattenConnection(product?.variants ?? {}).find(\n        (variant) => variant?.id === variantId,\n      ) ?? null\n    : null;\n\n  const variantPriceProperty =\n    valueType === 'max' ? 'maxVariantPrice' : 'minVariantPrice';\n\n  if (priceType === 'compareAt') {\n    if (variantId && variant) {\n      price = variant.compareAtPrice;\n    } else {\n      price = product?.compareAtPriceRange?.[variantPriceProperty];\n    }\n\n    let priceAsNumber: number;\n    if (variantId && variant) {\n      priceAsNumber = parseFloat(variant.price?.amount ?? '0');\n    } else {\n      priceAsNumber = parseFloat(\n        product?.priceRange?.[variantPriceProperty]?.amount ?? '0',\n      );\n    }\n\n    const compareAtPriceAsNumber = parseFloat(price?.amount ?? '0');\n\n    if (priceAsNumber >= compareAtPriceAsNumber) {\n      return null;\n    }\n  } else {\n    if (variantId && variant) {\n      price = variant.price;\n      if (valueType === 'unit') {\n        price = variant.unitPrice;\n        measurement = variant.unitPriceMeasurement;\n      }\n    } else if (valueType === 'max') {\n      price = product.priceRange?.maxVariantPrice;\n    } else {\n      price = product.priceRange?.minVariantPrice;\n    }\n  }\n\n  if (!price) {\n    return null;\n  }\n\n  if (measurement) {\n    return (\n      <Money {...passthroughProps} data={price} measurement={measurement} />\n    );\n  }\n\n  return <Money {...passthroughProps} data={price} />;\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport interface ProductPricePropsForDocs<\n  AsType extends React.ElementType = 'div',\n> extends Omit<MoneyPropsBase<AsType>, 'data' | 'measurement'>,\n    ProductPriceProps {}\n","import {createElement, type ReactNode} from 'react';\n\nexport type CustomComponents = {\n  /** The root node of the rich text. Defaults to `<div>` */\n  root?: typeof Root;\n  /** Customize the headings. Each heading has a `level` property from 1-6. Defaults to `<h1>` to `<h6>` */\n  heading?: typeof Heading;\n  /** Customize paragraphs. Defaults to `<p>` */\n  paragraph?: typeof Paragraph;\n  /** Customize how text nodes. They can either be bold or italic. Defaults to `<em>`, `<strong>` or text. */\n  text?: typeof Text;\n  /** Customize links. Defaults to a React Router `<Link>` component in Hydrogen and a `<a>` in Hydrogen React. */\n  link?: typeof RichTextLink;\n  /** Customize lists. They can be either ordered or unordered. Defaults to `<ol>` or `<ul>` */\n  list?: typeof List;\n  /** Customize list items. Defaults to `<li>`. */\n  listItem?: typeof ListItem;\n};\n\nexport const RichTextComponents = {\n  root: Root,\n  heading: Heading,\n  paragraph: Paragraph,\n  text: Text,\n  link: RichTextLink,\n  list: List,\n  'list-item': ListItem,\n};\n\nfunction Root({\n  node,\n}: {\n  node: {\n    type: 'root';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <div>{node.children}</div>;\n}\n\nfunction Heading({\n  node,\n}: {\n  node: {\n    type: 'heading';\n    level: number;\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return createElement(`h${node.level ?? '1'}`, null, node.children);\n}\n\nfunction Paragraph({\n  node,\n}: {\n  node: {\n    type: 'paragraph';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <p>{node.children}</p>;\n}\n\nfunction Text({\n  node,\n}: {\n  node: {\n    type: 'text';\n    italic?: boolean;\n    bold?: boolean;\n    value?: string;\n  };\n}): ReactNode {\n  if (node.bold && node.italic)\n    return (\n      <em>\n        <strong>{node.value}</strong>\n      </em>\n    );\n\n  if (node.bold) return <strong>{node.value}</strong>;\n  if (node.italic) return <em>{node.value}</em>;\n\n  return node.value;\n}\n\nfunction RichTextLink({\n  node,\n}: {\n  node: {\n    type: 'link';\n    url: string;\n    title?: string;\n    target?: string;\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return (\n    <a href={node.url} title={node.title} target={node.target}>\n      {node.children}\n    </a>\n  );\n}\n\nfunction List({\n  node,\n}: {\n  node: {\n    type: 'list';\n    listType: 'unordered' | 'ordered';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  const List = node.listType === 'unordered' ? 'ul' : 'ol';\n  return <List>{node.children}</List>;\n}\n\nfunction ListItem({\n  node,\n}: {\n  node: {\n    type: 'list-item';\n    children?: ReactNode[];\n  };\n}): ReactNode {\n  return <li>{node.children}</li>;\n}\n","import {createElement, Fragment, type ReactNode, useMemo} from 'react';\nimport type {RichTextASTNode} from './RichText.types.js';\nimport {\n  type CustomComponents,\n  RichTextComponents,\n} from './RichText.components.js';\n\nexport interface RichTextPropsBase<ComponentGeneric extends React.ElementType> {\n  /** An HTML tag or React Component to be rendered as the base element wrapper. The default is `div`. */\n  as?: ComponentGeneric;\n  /** The JSON string that correspond to the Storefront API's [RichText format](https://shopify.dev/docs/apps/custom-data/metafields/types#rich-text-formatting). */\n  data: string;\n  /** Customize how rich text components are rendered */\n  components?: CustomComponents;\n  /** Remove rich text formatting and render plain text */\n  plain?: boolean;\n}\n\nexport function RichText<ComponentGeneric extends React.ElementType = 'div'>({\n  as,\n  data,\n  plain,\n  components,\n  ...passthroughProps\n}: RichTextProps<ComponentGeneric>): JSX.Element {\n  try {\n    const Wrapper = as ?? 'div';\n    const parsedData = useMemo(\n      () => JSON.parse(data) as RichTextASTNode,\n      [data],\n    );\n\n    return (\n      <Wrapper {...passthroughProps}>\n        {plain\n          ? richTextToString(parsedData)\n          : serializeRichTextASTNode(components, parsedData)}\n      </Wrapper>\n    );\n  } catch (e) {\n    throw new Error(\n      '[h2:error:RichText] Parsing error. Make sure to pass a JSON string of rich text metafield',\n      {\n        cause: e,\n      },\n    );\n  }\n}\n\n// This article helps understand the typing here https://www.benmvp.com/blog/polymorphic-react-components-typescript/ Ben is the best :)\nexport type RichTextProps<ComponentGeneric extends React.ElementType> =\n  RichTextPropsBase<ComponentGeneric> &\n    Omit<\n      React.ComponentPropsWithoutRef<ComponentGeneric>,\n      keyof RichTextPropsBase<ComponentGeneric>\n    >;\n\nfunction serializeRichTextASTNode(\n  components: CustomComponents = {},\n  node: RichTextASTNode,\n  index = 0,\n): ReactNode {\n  let children;\n  if ('children' in node) {\n    children = node.children.map((child, childIndex) =>\n      serializeRichTextASTNode(components, child, childIndex),\n    );\n  }\n\n  const Component =\n    components[node.type === 'list-item' ? 'listItem' : node.type] ??\n    RichTextComponents[node.type];\n\n  switch (node.type) {\n    case 'root':\n      return createElement(\n        Component as Exclude<CustomComponents['root'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'root',\n            children,\n          },\n        },\n      );\n    case 'heading':\n      return createElement(\n        Component as Exclude<CustomComponents['heading'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'heading',\n            level: node.level,\n            children,\n          },\n        },\n      );\n    case 'paragraph':\n      return createElement(\n        Component as Exclude<CustomComponents['paragraph'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'paragraph',\n            children,\n          },\n        },\n      );\n    case 'text': {\n      const elements = (node.value ?? '')\n        .split('\\n')\n        .flatMap((value, subindex) => {\n          const key = `${index}-${value}-${subindex}`;\n          const textElement = createElement(\n            Component as Exclude<CustomComponents['text'], undefined>,\n            {\n              key,\n              node: {\n                type: 'text',\n                italic: node.italic,\n                bold: node.bold,\n                value,\n              },\n            },\n          );\n\n          // Add a `<br>` before each substring except the first one\n          return subindex === 0\n            ? textElement\n            : [createElement('br', {key: `${key}-br`}), textElement];\n        });\n\n      return elements.length > 1\n        ? createElement(Fragment, {key: index}, elements)\n        : elements[0];\n    }\n    case 'link':\n      return createElement(\n        Component as Exclude<CustomComponents['link'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'link',\n            url: node.url,\n            title: node.title,\n            target: node.target,\n            children,\n          },\n        },\n      );\n    case 'list':\n      return createElement(\n        Component as Exclude<CustomComponents['list'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'list',\n            listType: node.listType,\n            children,\n          },\n        },\n      );\n    case 'list-item':\n      return createElement(\n        Component as Exclude<CustomComponents['listItem'], undefined>,\n        {\n          key: index,\n          node: {\n            type: 'list-item',\n            children,\n          },\n        },\n      );\n  }\n}\n\nfunction richTextToString(\n  node: RichTextASTNode,\n  result: string[] = [],\n): string {\n  switch (node.type) {\n    case 'root':\n      node.children.forEach((child) => richTextToString(child, result));\n      break;\n    case 'heading':\n    case 'paragraph':\n      node.children.forEach((child) => richTextToString(child, result));\n      result.push(' ');\n      break;\n    case 'text':\n      result.push(node.value || '');\n      break;\n    case 'link':\n      node.children.forEach((child) => richTextToString(child, result));\n      break;\n    case 'list':\n      node.children.forEach((item) => {\n        if (item.children) {\n          item.children.forEach((child) => richTextToString(child, result));\n        }\n        result.push(' ');\n      });\n      break;\n    default:\n      throw new Error(`Unknown node encountered ${node.type}`);\n  }\n\n  return result.join('').trim();\n}\n\n// This is only for documentation purposes, and it is not used in the code.\nexport type RichTextPropsForDocs<AsType extends React.ElementType = 'div'> =\n  RichTextPropsBase<AsType>;\n","import {defaultShopifyContext, useShop} from './ShopifyProvider.js';\nimport {useLoadScript} from './load-script.js';\nimport {parseGid} from './analytics-utils.js';\n\n// By using 'never' in the \"or\" cases below, it makes these props \"exclusive\" and means that you cannot pass both of them; you must pass either one OR the other.\ntype ShopPayButtonProps = ShopPayButtonStyleProps &\n  ShopPayDomainProps &\n  ShopPayChannelAttribution &\n  (ShopPayVariantIds | ShopPayVariantAndQuantities);\n\ntype ShopPayButtonStyleProps = {\n  /** A string of classes to apply to the `div` that wraps the Shop Pay button. */\n  className?: string;\n  /** A string that's applied to the [CSS custom property (variable)](https://developer.mozilla.org/en-US/docs/Web/CSS/--*) `--shop-pay-button-width` for the [Buy with Shop Pay component](https://shopify.dev/custom-storefronts/tools/web-components#buy-with-shop-pay-component). */\n  width?: string;\n};\n\ntype ShopPayDomainProps = {\n  /** The domain of your Shopify storefront URL (eg: `your-store.myshopify.com`). */\n  storeDomain?: string;\n};\n\ntype ShopPayVariantIds = {\n  /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use `variantIdsAndQuantities`. */\n  variantIds: string[];\n  /** An array of variant IDs and quantities to purchase with Shop Pay. */\n  variantIdsAndQuantities?: never;\n};\n\ntype ShopPayVariantAndQuantities = {\n  /** An array of IDs of the variants to purchase with Shop Pay. This will only ever have a quantity of 1 for each variant. If you want to use other quantities, then use `variantIdsAndQuantities`. */\n  variantIds?: never;\n  /** An array of variant IDs and quantities to purchase with Shop Pay. */\n  variantIdsAndQuantities: Array<{\n    id: string;\n    quantity: number;\n  }>;\n};\n\ntype ShopPayChannelAttribution = {\n  /** A string that adds channel attribution to the order. Can be either `headless` or `hydrogen` */\n  channel?: 'headless' | 'hydrogen';\n};\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'shop-pay-button': {\n        channel?: string;\n        variants: string;\n        'store-url': string;\n      };\n    }\n  }\n}\n\nconst SHOPJS_URL =\n  'https://cdn.shopify.com/shopifycloud/shop-js/v1.0/client.js';\n\nfunction isChannel(\n  channel: string,\n): channel is Exclude<ShopPayChannelAttribution['channel'], undefined> {\n  return channel === 'headless' || channel === 'hydrogen';\n}\n\n/**\n * The `ShopPayButton` component renders a button that redirects to the Shop Pay checkout.\n * It renders a [`<shop-pay-button>`](https://shopify.dev/custom-storefronts/tools/web-components) custom element, for which it will lazy-load the source code automatically.\n * It relies on the `<ShopProvider>` context provider.\n */\nexport function ShopPayButton({\n  channel,\n  variantIds,\n  className,\n  variantIdsAndQuantities,\n  width,\n  storeDomain: _storeDomain,\n}: ShopPayButtonProps): JSX.Element {\n  const shop = useShop();\n  const storeDomain = _storeDomain || shop?.storeDomain;\n  const shopPayLoadedStatus = useLoadScript(SHOPJS_URL);\n\n  let ids: string[] = [];\n  let channelAttribution: string | undefined;\n\n  if (!storeDomain || storeDomain === defaultShopifyContext.storeDomain) {\n    throw new Error(MissingStoreDomainErrorMessage);\n  }\n\n  if (variantIds && variantIdsAndQuantities) {\n    throw new Error(DoublePropsErrorMessage);\n  }\n\n  if (!variantIds && !variantIdsAndQuantities) {\n    throw new Error(MissingPropsErrorMessage);\n  }\n\n  if (channel) {\n    if (isChannel(channel)) {\n      channelAttribution = channel;\n    } else {\n      throw new Error(InvalidChannelErrorMessage);\n    }\n  }\n\n  if (variantIds) {\n    ids = variantIds.reduce<string[]>((prev, curr) => {\n      const bareId = parseGid(curr).id;\n      if (bareId) {\n        prev.push(bareId);\n      }\n      return prev;\n    }, []);\n  } else if (variantIdsAndQuantities) {\n    ids = variantIdsAndQuantities.reduce<string[]>((prev, curr) => {\n      const bareId = parseGid(curr?.id).id;\n      if (bareId) {\n        prev.push(`${bareId}:${curr?.quantity ?? 1}`);\n      }\n      return prev;\n    }, []);\n  } else {\n    throw new Error(MissingPropsErrorMessage);\n  }\n\n  if (ids.length === 0) {\n    throw new Error(InvalidPropsErrorMessage);\n  }\n\n  const style = width\n    ? ({\n        '--shop-pay-button-width': width,\n      } as React.CSSProperties)\n    : undefined;\n\n  return (\n    <div className={className} style={style}>\n      {shopPayLoadedStatus === 'done' && (\n        <shop-pay-button\n          {...(channelAttribution ? {channel: channelAttribution} : {})}\n          store-url={storeDomain}\n          variants={ids.join(',')}\n        />\n      )}\n    </div>\n  );\n}\n\nexport const MissingStoreDomainErrorMessage =\n  'You must pass a \"storeDomain\" prop to the \"ShopPayButton\" component, or wrap it in a \"ShopifyProvider\" component.';\nexport const InvalidPropsErrorMessage = `You must pass in \"variantIds\" in the form of [\"gid://shopify/ProductVariant/1\"]`;\nexport const MissingPropsErrorMessage = `You must pass in either \"variantIds\" or \"variantIdsAndQuantities\" to ShopPayButton`;\nexport const DoublePropsErrorMessage = `You must provide either a variantIds or variantIdsAndQuantities prop, but not both in the ShopPayButton component`;\nexport const InvalidChannelErrorMessage = `Invalid channel attribution value. Must be either \"headless\" or \"hydrogen\"`;\n","import {useEffect} from 'react';\nimport {mapSelectedProductOptionToObject} from './getProductOptions.js';\nimport {SelectedOption} from './storefront-api-types.js';\n\nexport function useSelectedOptionInUrlParam(\n  selectedOptions: Pick<SelectedOption, 'name' | 'value'>[],\n): null {\n  useEffect(() => {\n    const optionsSearchParams = new URLSearchParams(\n      mapSelectedProductOptionToObject(selectedOptions || []),\n    );\n    const currentSearchParams = new URLSearchParams(window.location.search);\n\n    // ts ignoring the URLSearchParams not iterable error for now\n    // https://stackoverflow.com/questions/72522489/urlsearchparams-not-accepting-string#answer-72522838\n    // TODO: update ts lib\n    const combinedSearchParams = new URLSearchParams({\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ...Object.fromEntries(currentSearchParams),\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ...Object.fromEntries(optionsSearchParams),\n    });\n\n    if (combinedSearchParams.size > 0) {\n      window.history.replaceState(\n        {},\n        '',\n        `${window.location.pathname}?${combinedSearchParams.toString()}`,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(selectedOptions)]);\n\n  return null;\n}\n","import {useEffect} from 'react';\nimport {stringify} from 'worktop/cookie';\nimport {SHOPIFY_Y, SHOPIFY_S} from './cart-constants.js';\nimport {buildUUID, getShopifyCookies} from './cookies-utils.js';\n\nconst longTermLength = 60 * 60 * 24 * 360 * 1; // ~1 year expiry\nconst shortTermLength = 60 * 30; // 30 mins\n\ntype UseShopifyCookiesOptions = {\n  /**\n   * If set to `false`, Shopify cookies will be removed.\n   * If set to `true`, Shopify unique user token cookie will have cookie expiry of 1 year.\n   * Defaults to false.\n   **/\n  hasUserConsent?: boolean;\n  /**\n   * The domain scope of the cookie. Defaults to empty string.\n   **/\n  domain?: string;\n  /**\n   * The checkout domain of the shop. Defaults to empty string. If set, the cookie domain will check if it can be set with the checkout domain.\n   */\n  checkoutDomain?: string;\n};\n\nexport function useShopifyCookies(options?: UseShopifyCookiesOptions): void {\n  const {\n    hasUserConsent = false,\n    domain = '',\n    checkoutDomain = '',\n  } = options || {};\n  useEffect(() => {\n    const cookies = getShopifyCookies(document.cookie);\n\n    /**\n     * Setting cookie with domain\n     *\n     * If no domain is provided, the cookie will be set for the current host.\n     * For Shopify, we need to ensure this domain is set with a leading dot.\n     */\n\n    // Use override domain or current host\n    let currentDomain = domain || window.document.location.host;\n\n    if (checkoutDomain) {\n      const checkoutDomainParts = checkoutDomain.split('.').reverse();\n      const currentDomainParts = currentDomain.split('.').reverse();\n      const sameDomainParts: Array<string> = [];\n      checkoutDomainParts.forEach((part, index) => {\n        if (part === currentDomainParts[index]) {\n          sameDomainParts.push(part);\n        }\n      });\n\n      currentDomain = sameDomainParts.reverse().join('.');\n    }\n\n    // Reset domain if localhost\n    if (/^localhost/.test(currentDomain)) currentDomain = '';\n\n    // Shopify checkout only consumes cookies set with leading dot domain\n    const domainWithLeadingDot = currentDomain\n      ? /^\\./.test(currentDomain)\n        ? currentDomain\n        : `.${currentDomain}`\n      : '';\n\n    /**\n     * Set user and session cookies and refresh the expiry time\n     */\n    if (hasUserConsent) {\n      setCookie(\n        SHOPIFY_Y,\n        cookies[SHOPIFY_Y] || buildUUID(),\n        longTermLength,\n        domainWithLeadingDot,\n      );\n      setCookie(\n        SHOPIFY_S,\n        cookies[SHOPIFY_S] || buildUUID(),\n        shortTermLength,\n        domainWithLeadingDot,\n      );\n    } else {\n      setCookie(SHOPIFY_Y, '', 0, domainWithLeadingDot);\n      setCookie(SHOPIFY_S, '', 0, domainWithLeadingDot);\n    }\n  }, [options, hasUserConsent, domain, checkoutDomain]);\n}\n\nfunction setCookie(\n  name: string,\n  value: string,\n  maxage: number,\n  domain: string,\n): void {\n  document.cookie = stringify(name, value, {\n    maxage,\n    domain,\n    samesite: 'Lax',\n    path: '/',\n  });\n}\n"],"names":["t","n","e","r","i","o","a","u","s","l","v","g","c","useLayoutEffect","React","require$$0","error","shim","shimModule","require$$1","isEqual","withSelectorModule","useRef","useState","queue","service","interpret","createMachine","InterpreterStatus","useIsomorphicLayoutEffect","useEffect","useCallback","useSyncExternalStoreWithSelector","createContext","useMemo","useContext","f","parse","assign","_b","_a","_d","_c","useTransition","value","selectedOptions","SCHEMA_ID","pageView","formatPayload","trekkiePageView","customerPageView","customerAddToCart","customerPageView2","customerCollectionView","customerProductView","customerSearchView","forwardRef","index","variant","createElement","List","Fragment","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,WAAS,EAAEA,IAAEC,IAAE;AAAC,QAAIC,KAAE,cAAY,OAAO,UAAQF,GAAE,OAAO,QAAQ;AAAE,QAAG,CAACE;AAAE,aAAOF;AAAE,QAAIG,IAAEC,IAAEC,KAAEH,GAAE,KAAKF,EAAC,GAAEM,KAAE;AAAG,QAAG;AAAC,cAAM,WAASL,MAAGA,OAAK,MAAI,EAAEE,KAAEE,GAAE,KAAM,GAAE;AAAM,QAAAC,GAAE,KAAKH,GAAE,KAAK;AAAA,IAAC,SAAOH,IAAE;AAAC,MAAAI,KAAE,EAAC,OAAMJ,GAAC;AAAA,IAAC,UAAC;AAAQ,UAAG;AAAC,QAAAG,MAAG,CAACA,GAAE,SAAOD,KAAEG,GAAE,WAASH,GAAE,KAAKG,EAAC;AAAA,MAAC,UAAC;AAAQ,YAAGD;AAAE,gBAAMA,GAAE;AAAA,MAAK;AAAA,IAAC;AAAC,WAAOE;AAAA,EAAC;AAAC,MAAI;AAAE,GAAC,SAASN,IAAE;AAAC,IAAAA,GAAEA,GAAE,aAAW,CAAC,IAAE,cAAaA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,UAAQ,CAAC,IAAE;AAAA,EAAS,EAAE,MAAI,IAAE,CAAE,EAAC;AAAE,MAAI,IAAE,EAAC,MAAK,cAAa;AAAE,WAAS,EAAEA,IAAE;AAAC,WAAO,WAASA,KAAE,CAAE,IAAC,GAAG,OAAOA,EAAC;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAE;AAAC,WAAM,EAAC,MAAK,iBAAgB,YAAWA,GAAC;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAEC,IAAE;AAAC,WAAM,YAAU,QAAOD,KAAE,YAAU,OAAOA,MAAGC,MAAGA,GAAED,EAAC,IAAEC,GAAED,EAAC,IAAEA,MAAG,EAAC,MAAKA,GAAC,IAAE,cAAY,OAAOA,KAAE,EAAC,MAAKA,GAAE,MAAK,MAAKA,GAAC,IAAEA;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAE;AAAC,WAAO,SAASC,IAAE;AAAC,aAAOD,OAAIC;AAAA,IAAC;AAAA,EAAC;AAAC,WAASM,IAAEP,IAAE;AAAC,WAAM,YAAU,OAAOA,KAAE,EAAC,MAAKA,GAAC,IAAEA;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAEC,IAAE;AAAC,WAAM,EAAC,OAAMD,IAAE,SAAQC,IAAE,SAAQ,CAAA,GAAG,SAAQ,OAAG,SAAQ,EAAED,EAAC,EAAC;AAAA,EAAC;AAAC,WAAS,EAAEA,IAAEC,IAAEC,IAAE;AAAC,QAAIC,KAAEF,IAAEG,KAAE;AAAG,WAAM,CAACJ,GAAE,OAAQ,SAASA,IAAE;AAAC,UAAG,oBAAkBA,GAAE,MAAK;AAAC,QAAAI,KAAE;AAAG,YAAIH,KAAE,OAAO,OAAO,CAAA,GAAGE,EAAC;AAAE,eAAM,cAAY,OAAOH,GAAE,aAAWC,KAAED,GAAE,WAAWG,IAAED,EAAC,IAAE,OAAO,KAAKF,GAAE,UAAU,EAAE,QAAS,SAASI,IAAE;AAAC,UAAAH,GAAEG,EAAC,IAAE,cAAY,OAAOJ,GAAE,WAAWI,EAAC,IAAEJ,GAAE,WAAWI,EAAC,EAAED,IAAED,EAAC,IAAEF,GAAE,WAAWI,EAAC;AAAA,QAAC,CAAC,GAAGD,KAAEF,IAAE;AAAA,MAAE;AAAC,aAAM;AAAA,IAAE,CAAG,GAACE,IAAEC,EAAC;AAAA,EAAC;AAAC,WAAS,EAAEH,IAAEG,IAAE;AAAC,eAASA,OAAIA,KAAE,CAAE;AAAE,QAAII,KAAE,EAAE,EAAE,EAAEP,GAAE,OAAOA,GAAE,OAAO,EAAE,KAAK,EAAE,IAAK,SAASD,IAAE;AAAC,aAAO,EAAEA,IAAEI,GAAE,OAAO;AAAA,IAAC,CAAG,GAACH,GAAE,SAAQ,CAAC,GAAE,CAAC,GAAEQ,KAAED,GAAE,CAAC,GAAEE,KAAEF,GAAE,CAAC,GAAE,IAAE,EAAC,QAAOP,IAAE,UAASG,IAAE,cAAa,EAAC,OAAMH,GAAE,SAAQ,SAAQQ,IAAE,SAAQC,IAAE,SAAQ,EAAET,GAAE,OAAO,EAAC,GAAE,YAAW,SAASC,IAAEE,IAAE;AAAC,UAAII,IAAEC,IAAEC,KAAE,YAAU,OAAOR,KAAE,EAAC,OAAMA,IAAE,SAAQD,GAAE,QAAO,IAAEC,IAAE,IAAEQ,GAAE,OAAMC,KAAED,GAAE,SAAQ,IAAEH,IAAEH,EAAC,GAAE,IAAEH,GAAE,OAAO,CAAC;AAAE,UAAG,EAAE,IAAG;AAAC,YAAI,IAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AAAE,YAAG;AAAC,mBAAQ,IAAE,SAASD,IAAE;AAAC,gBAAIC,KAAE,cAAY,OAAO,UAAQ,OAAO,UAASC,KAAED,MAAGD,GAAEC,EAAC,GAAEE,KAAE;AAAE,gBAAGD;AAAE,qBAAOA,GAAE,KAAKF,EAAC;AAAE,gBAAGA,MAAG,YAAU,OAAOA,GAAE;AAAO,qBAAM,EAAC,MAAK,WAAU;AAAC,uBAAOA,MAAGG,MAAGH,GAAE,WAASA,KAAE,SAAQ,EAAC,OAAMA,MAAGA,GAAEG,IAAG,GAAE,MAAK,CAACH,GAAC;AAAA,cAAC,EAAC;AAAE,kBAAM,IAAI,UAAUC,KAAE,4BAA0B,iCAAiC;AAAA,UAAC,EAAE,CAAC,GAAE,IAAE,EAAE,QAAO,CAAC,EAAE,MAAK,IAAE,EAAE,KAAM,GAAC;AAAC,gBAAI,IAAE,EAAE;AAAM,gBAAG,WAAS;AAAE,qBAAO,EAAE,GAAEU,EAAC;AAAE,gBAAI,IAAE,YAAU,OAAO,IAAE,EAAC,QAAO,EAAC,IAAE,GAAE,IAAE,EAAE,QAAO,IAAE,EAAE,SAAQ,IAAE,WAAS,IAAE,KAAG,GAAE,IAAE,EAAE,MAAK,IAAE,WAAS,IAAE,WAAU;AAAC,qBAAM;AAAA,YAAE,IAAE,GAAE,IAAE,WAAS,GAAE,IAAE,QAAM,IAAE,IAAE,GAAE,IAAEV,GAAE,OAAO,CAAC;AAAE,gBAAG,EAAEU,IAAE,CAAC,GAAE;AAAC,kBAAI,IAAE,EAAE,GAAG,IAAE,EAAE,CAAC,IAAE,CAAE,EAAC,OAAO,EAAE,MAAK,GAAE,EAAE,KAAK,EAAE,OAAQ,SAASX,IAAE;AAAC,uBAAOA;AAAA,cAAC,CAAC,GAAI,IAAK,SAASA,IAAE;AAAC,uBAAO,EAAEA,IAAE,EAAE,SAAS,OAAO;AAAA,cAAC,IAAIW,IAAE,CAAC,GAAE,CAAC,GAAE,IAAE,EAAE,CAAC,GAAE,IAAE,EAAE,CAAC,GAAE,IAAE,EAAE,CAAC,GAAE,IAAE,QAAM,IAAE,IAAE;AAAE,qBAAM,EAAC,OAAM,GAAE,SAAQ,GAAE,SAAQ,GAAE,SAAQ,MAAI,KAAG,EAAE,SAAO,KAAG,GAAE,SAAQ,EAAE,CAAC,EAAC;AAAA,YAAC;AAAA,UAAC;AAAA,QAAC,SAAOX,IAAE;AAAC,UAAAQ,KAAE,EAAC,OAAMR,GAAC;AAAA,QAAC,UAAC;AAAQ,cAAG;AAAC,iBAAG,CAAC,EAAE,SAAOS,KAAE,EAAE,WAASA,GAAE,KAAK,CAAC;AAAA,UAAC,UAAC;AAAQ,gBAAGD;AAAE,oBAAMA,GAAE;AAAA,UAAK;AAAA,QAAC;AAAA,MAAC;AAAC,aAAO,EAAE,GAAEG,EAAC;AAAA,IAAC,EAAC;AAAE,WAAO;AAAA,EAAC;AAAC,MAAIF,MAAE,SAAST,IAAEC,IAAE;AAAC,WAAOD,GAAE,QAAQ,QAAS,SAASE,IAAE;AAAC,UAAIC,KAAED,GAAE;AAAK,aAAOC,MAAGA,GAAEH,GAAE,SAAQC,EAAC;AAAA,IAAC;EAAG;AAAE,WAAS,EAAED,IAAE;AAAC,QAAIG,KAAEH,GAAE,cAAaI,KAAE,EAAE,YAAWC,KAAE,oBAAI,OAAIO,KAAE,EAAC,UAASZ,IAAE,MAAK,SAASE,IAAE;AAAC,MAAAE,OAAI,EAAE,YAAUD,KAAEH,GAAE,WAAWG,IAAED,EAAC,GAAEO,IAAEN,IAAEI,IAAEL,EAAC,CAAC,GAAEG,GAAE,QAAS,SAASL,IAAE;AAAC,eAAOA,GAAEG,EAAC;AAAA,MAAC,CAAC;AAAA,IAAG,GAAE,WAAU,SAASH,IAAE;AAAC,aAAOK,GAAE,IAAIL,EAAC,GAAEA,GAAEG,EAAC,GAAE,EAAC,aAAY,WAAU;AAAC,eAAOE,GAAE,OAAOL,EAAC;AAAA,MAAC,EAAC;AAAA,IAAC,GAAE,OAAM,SAASK,IAAE;AAAC,UAAGA,IAAE;AAAC,YAAIE,KAAE,YAAU,OAAOF,KAAEA,KAAE,EAAC,SAAQL,GAAE,OAAO,SAAQ,OAAMK,GAAC;AAAE,QAAAF,KAAE,EAAC,OAAMI,GAAE,OAAM,SAAQ,CAAE,GAAC,SAAQA,GAAE,SAAQ,SAAQ,EAAEA,GAAE,KAAK,EAAC;AAAA,MAAC;AAAM,QAAAJ,KAAEH,GAAE;AAAa,aAAOI,KAAE,EAAE,SAAQK,IAAEN,IAAE,CAAC,GAAES;AAAA,IAAC,GAAE,MAAK,WAAU;AAAC,aAAOR,KAAE,EAAE,SAAQC,GAAE,MAAO,GAACO;AAAA,IAAC,GAAE,IAAI,QAAO;AAAC,aAAOT;AAAA,IAAC,GAAE,IAAI,SAAQ;AAAC,aAAOC;AAAA,IAAC,EAAC;AAAE,WAAOQ;AAAA,EAAC;ACZ/lG,MAAI,QAASC,QAAe;;;;;ECF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY2C;AACzC,KAAC,WAAW;AAKd,UACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,gCACpC,YACF;AAC+B,uCAAA,4BAA4B,IAAI,MAAA,CAAO;AAAA,MACxE;AACc,UAAAC,SAAQC;AAEtB,UAAI,uBAAuBD,OAAM;AAEjC,eAAS,MAAM,QAAQ;AACrB;AACE;AACE,qBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AACjH,mBAAK,QAAQ,CAAC,IAAI,UAAU,KAAK;AAAA,YACnC;AAEa,yBAAA,SAAS,QAAQ,IAAI;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAES,eAAA,aAAa,OAAO,QAAQ,MAAM;AAGzC;AACE,cAAI,yBAAyB,qBAAqB;AAC9C,cAAA,QAAQ,uBAAuB;AAEnC,cAAI,UAAU,IAAI;AACN,sBAAA;AACV,mBAAO,KAAK,OAAO,CAAC,KAAK,CAAC;AAAA,UAC5B;AAGA,cAAI,iBAAiB,KAAK,IAAI,SAAU,MAAM;AAC5C,mBAAO,OAAO,IAAI;AAAA,UAAA,CACnB;AAEc,yBAAA,QAAQ,cAAc,MAAM;AAI3C,mBAAS,UAAU,MAAM,KAAK,QAAQ,KAAK,GAAG,SAAS,cAAc;AAAA,QACvE;AAAA,MACF;AAMS,eAAA,GAAG,GAAG,GAAG;AACT,eAAA,MAAM,MAAM,MAAM,KAAK,IAAI,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM;AAAA,MAErE;AAEA,UAAI,WAAW,OAAO,OAAO,OAAO,aAAa,OAAO,KAAK;AAIzD,UAAA,WAAWA,OAAM,UACjB,YAAYA,OAAM,WAClB,kBAAkBA,OAAM,iBACxB,gBAAgBA,OAAM;AAC1B,UAAI,oBAAoB;AACxB,UAAI,6BAA6B;AAWxB,eAAA,qBAAqB,WAAW,aAIzC,mBAAmB;AACjB;AACE,cAAI,CAAC,mBAAmB;AAClB,gBAAAA,OAAM,oBAAoB,QAAW;AACnB,kCAAA;AAEpB,oBAAM,gMAA+M;AAAA,YACvN;AAAA,UACF;AAAA,QACF;AAMA,YAAI,QAAQ;AAEZ;AACE,cAAI,CAAC,4BAA4B;AAC/B,gBAAI,cAAc;AAElB,gBAAI,CAAC,SAAS,OAAO,WAAW,GAAG;AACjC,oBAAM,sEAAsE;AAE/C,2CAAA;AAAA,YAC/B;AAAA,UACF;AAAA,QACF;AAgBA,YAAI,YAAY,SAAS;AAAA,UACvB,MAAM;AAAA,YACJ;AAAA,YACA;AAAA,UACF;AAAA,QAAA,CACD,GACG,OAAO,UAAU,CAAC,EAAE,MACpB,cAAc,UAAU,CAAC;AAK7B,wBAAgB,WAAY;AAC1B,eAAK,QAAQ;AACb,eAAK,cAAc;AAKf,cAAA,uBAAuB,IAAI,GAAG;AAEpB,wBAAA;AAAA,cACV;AAAA,YAAA,CACD;AAAA,UACH;AAAA,QACC,GAAA,CAAC,WAAW,OAAO,WAAW,CAAC;AAClC,kBAAU,WAAY;AAGhB,cAAA,uBAAuB,IAAI,GAAG;AAEpB,wBAAA;AAAA,cACV;AAAA,YAAA,CACD;AAAA,UACH;AAEA,cAAI,oBAAoB,WAAY;AAO9B,gBAAA,uBAAuB,IAAI,GAAG;AAEpB,0BAAA;AAAA,gBACV;AAAA,cAAA,CACD;AAAA,YACH;AAAA,UAAA;AAIF,iBAAO,UAAU,iBAAiB;AAAA,QAAA,GACjC,CAAC,SAAS,CAAC;AACd,sBAAc,KAAK;AACZ,eAAA;AAAA,MACT;AAEA,eAAS,uBAAuB,MAAM;AACpC,YAAI,oBAAoB,KAAK;AAC7B,YAAI,YAAY,KAAK;AAEjB,YAAA;AACF,cAAI,YAAY;AACT,iBAAA,CAAC,SAAS,WAAW,SAAS;AAAA,iBAC9BE,QAAO;AACP,iBAAA;AAAA,QACT;AAAA,MACF;AAES,eAAA,uBAAuB,WAAW,aAAa,mBAAmB;AAKzE,eAAO,YAAY;AAAA,MACrB;AAEA,UAAI,YAAY,CAAC,EAAE,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa,eAAe,OAAO,OAAO,SAAS,kBAAkB;AAEvI,UAAI,sBAAsB,CAAC;AAEvB,UAAAC,QAAO,sBAAsB,yBAAyB;AAC1D,UAAI,yBAAyBH,OAAM,yBAAyB,SAAYA,OAAM,uBAAuBG;AAErG,2CAAA,uBAA+B;AAE/B,UACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,+BACpC,YACF;AAC+B,uCAAA,2BAA2B,IAAI,MAAA,CAAO;AAAA,MACvE;AAAA,IAAA;EAGA;AC1OO;AACEC,SAAA,UAAUH;AAAAA,EACnB;;ECNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAY2C;AACzC,KAAC,WAAW;AAKd,UACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,gCACpC,YACF;AAC+B,uCAAA,4BAA4B,IAAI,MAAA,CAAO;AAAA,MACxE;AACc,UAAAD,SAAQC;AAClB,UAAAE,QAAOE;AAMF,eAAA,GAAG,GAAG,GAAG;AACT,eAAA,MAAM,MAAM,MAAM,KAAK,IAAI,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM;AAAA,MAErE;AAEA,UAAI,WAAW,OAAO,OAAO,OAAO,aAAa,OAAO,KAAK;AAE7D,UAAI,uBAAuBF,MAAK;AAI5B,UAAA,SAASH,OAAM,QACf,YAAYA,OAAM,WAClB,UAAUA,OAAM,SAChB,gBAAgBA,OAAM;AAE1B,eAAS,iCAAiC,WAAW,aAAa,mBAAmB,UAAUM,UAAS;AAElG,YAAA,UAAU,OAAO,IAAI;AACrB,YAAA;AAEA,YAAA,QAAQ,YAAY,MAAM;AACrB,iBAAA;AAAA,YACL,UAAU;AAAA,YACV,OAAO;AAAA,UAAA;AAET,kBAAQ,UAAU;AAAA,QAAA,OACb;AACL,iBAAO,QAAQ;AAAA,QACjB;AAEI,YAAA,WAAW,QAAQ,WAAY;AAKjC,cAAI,UAAU;AACV,cAAA;AACA,cAAA;AAEA,cAAA,mBAAmB,SAAU,cAAc;AAC7C,gBAAI,CAAC,SAAS;AAEF,wBAAA;AACS,iCAAA;AAEf,kBAAA,iBAAiB,SAAS,YAAY;AAE1C,kBAAIA,aAAY,QAAW;AAIzB,oBAAI,KAAK,UAAU;AACjB,sBAAI,mBAAmB,KAAK;AAExB,sBAAAA,SAAQ,kBAAkB,cAAc,GAAG;AACzB,wCAAA;AACb,2BAAA;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAEoB,kCAAA;AACb,qBAAA;AAAA,YACT;AAIA,gBAAI,eAAe;AACnB,gBAAI,gBAAgB;AAEhB,gBAAA,SAAS,cAAc,YAAY,GAAG;AAEjC,qBAAA;AAAA,YACT;AAII,gBAAA,gBAAgB,SAAS,YAAY;AASzC,gBAAIA,aAAY,UAAaA,SAAQ,eAAe,aAAa,GAAG;AAC3D,qBAAA;AAAA,YACT;AAEmB,+BAAA;AACC,gCAAA;AACb,mBAAA;AAAA,UAAA;AAKL,cAAA,yBAAyB,sBAAsB,SAAY,OAAO;AAEtE,cAAI,0BAA0B,WAAY;AACjC,mBAAA,iBAAiB,aAAa;AAAA,UAAA;AAGvC,cAAI,gCAAgC,2BAA2B,OAAO,SAAY,WAAY;AACrF,mBAAA,iBAAiB,wBAAwB;AAAA,UAAA;AAE3C,iBAAA,CAAC,yBAAyB,6BAA6B;AAAA,QAC7D,GAAA,CAAC,aAAa,mBAAmB,UAAUA,QAAO,CAAC,GAClD,eAAe,SAAS,CAAC,GACzB,qBAAqB,SAAS,CAAC;AAEnC,YAAI,QAAQ,qBAAqB,WAAW,cAAc,kBAAkB;AAC5E,kBAAU,WAAY;AACpB,eAAK,WAAW;AAChB,eAAK,QAAQ;AAAA,QAAA,GACZ,CAAC,KAAK,CAAC;AACV,sBAAc,KAAK;AACZ,eAAA;AAAA,MACT;AAEA,+BAAA,mCAA2C;AAE3C,UACE,OAAO,mCAAmC,eAC1C,OAAO,+BAA+B,+BACpC,YACF;AAC+B,uCAAA,2BAA2B,IAAI,MAAA,CAAO;AAAA,MACvE;AAAA,IAAA;EAGA;AChKO;AACEC,iBAAA,UAAUN;AAAAA,EACnB;;ACLe,WAAS,YAAY,IAAI;AACpC,QAAI,MAAMD,iBAAM;AAChB,QAAI,CAAC,IAAI,SAAS;AACd,UAAI,UAAU,EAAE,GAAG,GAAI,EAAA;AAAA,IAC1B;AACD,WAAO,IAAI,QAAQ;AAAA,EACvB;ACPA,MAAI,SAAkC,SAAUT,IAAGJ,IAAG;AAClD,QAAI,IAAI,OAAO,WAAW,cAAcI,GAAE,OAAO,QAAQ;AACzD,QAAI,CAAC;AAAU,aAAAA;AACX,QAAAD,KAAI,EAAE,KAAKC,EAAC,GAAGF,IAAG,KAAK,CAAI,GAAAD;AAC3B,QAAA;AACQ,cAAAD,OAAM,UAAUA,OAAM,MAAM,EAAEE,KAAIC,GAAE,KAAQ,GAAA;AAAS,WAAA,KAAKD,GAAE,KAAK;AAAA,aAEtE,OAAO;AAAE,MAAAD,KAAI,EAAE;IAAa,UACnC;AACQ,UAAA;AACA,YAAIC,MAAK,CAACA,GAAE,SAAS,IAAIC,GAAE,QAAQ;AAAI,YAAE,KAAKA,EAAC;AAAA,MAAA,UAEnD;AAAc,YAAAF;AAAG,gBAAMA,GAAE;AAAA,MAAO;AAAA,IACpC;AACO,WAAA;AAAA,EACX;AAMA,WAAS,SAASI,IAAG;AACV,WAAAA;AAAA,EACX;AACA,MAAI,kBAAkB,SAAU,SAAS;AACjC,QAAA;AAEC,YAAA,UAAU,SAAU,OAAO;AACb,qBAAA;AAAA,IAAA,CAClB,EACI,YAAY;AACV,WAAA;AAAA,EACX;AACgB,WAAA,WAAW,cAAc,SAAS;AAC9C,QAAI,oBAAoBgB,QAAAA;AACmB;AACnC,UAAA,KAAK,OAAOC,QAAAA,SAAS,YAAY,GAAG,CAAC,GAAG,iBAAiB,GAAG,CAAC;AACjE,UAAI,iBAAiB,gBAAgB;AACjC,gBAAQ,KAAK,gMAC+D;AAAA,MAChF;AAAA,IACJ;AACI,QAAA,KAAK,OAAO,YAAY,WAAY;AACpC,UAAIC,SAAQ,CAAA;AACRC,UAAAA,WAAUC,EAAUC,EAAc,aAAa,QAAQ,UAAU,UAAU,aAAa,QAAQ,CAAC;AACrG,UAAI,OAAOF,SAAQ;AACnBA,eAAQ,OAAO,SAAU,OAAO;AACxBA,YAAAA,SAAQ,WAAWG,EAAkB,YAAY;AACjDJ,iBAAM,KAAK,KAAK;AAChB;AAAA,QACJ;AACA,aAAK,KAAK;AACV,0BAAkB,UAAUC,SAAQ;AAAA,MAAA;AAEjC,aAAA,CAACA,UAASD,MAAK;AAAA,IAAA,CACzB,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC;AACrCK,UAA0B,WAAY;AAClC,UAAI,SAAS;AACT,gBAAQ,SAAS,WAAW;AAAA,MAChC;AAAA,IAAA,CACH;AACG,QAAA,mBAAmB,WAAW,OAAO;AACzCC,YAAAA,UAAU,WAAY;AACV,cAAA,MAAM,kBAAkB,OAAO;AACjC,YAAA,QAAQ,QAAQ,IAAI;AAC1B,wBAAkB,UAAU,QAAQ;AACpC,aAAO,WAAY;AACf,gBAAQ,KAAK;AAAA,MAAA;AAAA,IAErB,GAAG,CAAE,CAAA;AACE,WAAA;AAAA,EACX;AACA,MAAI,UAAU,SAAU,YAAY,WAAW;AAAE,WAAO,UAAU,YAAY;AAAA,EAAO;AAC9E,WAAS,WAAW,SAAS;AAC5B,QAAA,cAAcC,QAAAA,YAAY,WAAY;AAAE,aAAO,gBAAgB,OAAO;AAAA,IAAA,GAAM,CAAC,OAAO,CAAC;AACrF,QAAA,YAAYA,oBAAY,SAAU,mBAAmB;AACrD,UAAI,cAAc,QAAQ,UAAU,iBAAiB,EAAE;AAChD,aAAA;AAAA,IAAA,GACR,CAAC,OAAO,CAAC;AACZ,QAAI,gBAAgBC,oBAAAA,iCAAiC,WAAW,aAAa,aAAa,UAAU,OAAO;AAC3G,WAAO,CAAC,eAAe,QAAQ,MAAM,OAAO;AAAA,EAChD;ACzEO,WAAS,kBAOd,YAuBQ;AACR,QAAI,CAAC,YAAY;AACT,YAAA,kBAAkB,uEACtB,cAAc,EAChB;AACsB;AACd,cAAA,IAAI,MAAM,eAAe;AAAA,MAKjC;AAAA,IACF;AAEA,QAAI,WAAW,YAAY;AAEzB,aAAO,WAAW;AAAA,IACpB;AAEA,QAAI,WAAW,cAAc,MAAM,QAAQ,WAAW,KAAK,GAAG;AAE5D,aAAO,WAAW,MAAM,IAAI,CAAC,SAAS;AAChC,YAAA,EAAC,6BAAM,OAAM;AACf,gBAAM,IAAI;AAAA,YACR;AAAA,UAAA;AAAA,QAEJ;AACA,eAAO,KAAK;AAAA,MAAA,CACb;AAAA,IACH;AAEsB;AACZ,cAAA;AAAA,QACN;AAAA,MAAA;AAAA,IAEJ;AAGA,WAAO;EACT;AC7EO,QAAM,cAAc,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAevE,YAAY;AAAA;AAAA;AAGT,QAAM,aAAa,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IActE,YAAY;AAAA;AAAA;AAGT,QAAM,iBAAiB,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAe1E,YAAY;AAAA;AAAA;AAGT,QAAM,iBAAiB,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAe1E,YAAY;AAAA;AAAA;AAGT,QAAM,iBAAiB,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAe1E,YAAY;AAAA;AAAA;AAGT,QAAM,0BAA0B,CACrC;AAAA;AAAA,IACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAevB,YAAY;AAAA;AAAA;AAGT,QAAM,uBAAuB,CAClC;AAAA;AAAA,IACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAevB,YAAY;AAAA;AAAA;AAGT,QAAM,0BAA0B,CACrC;AAAA;AAAA,IACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAevB,YAAY;AAAA;AAAA;AAGT,QAAM,YAAY,CAAC;AAAA;AAAA,IAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYrE,YAAY;AAAA;AAAA;AAGH,QAAA;AAAA;AAAA,IAAopK1C,QAAM,gBAAgB;ACmB7B,QAAM,mBAAmB;AACzB,QAAM,aAAa,CAAC,WAClB,OAAO,SAAS,gBAAgB;AAO3B,WAAS,uBAAuB;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA,uBAAuB;AAAA,IACvB;AAAA,EACF,GAAkD;AAChD,QAAI,CAAC,aAAa;AACM;AACN,sBAAA;AACd;AAAA,UACE,sCAAsC,gBAAgB;AAAA,UACtD;AAAA,QAAA;AAAA,MAOJ;AAAA,IACF;AAEA,QAAI,yBAAyB,eAAe;AAC1C;AAAA,QACE;AAAA,uFAC4F,oBAAoB,wBAAwB,aAAa;AAAA,MAAA;AAAA,IAEzJ;AAKE,QAAA,CAAC,0BACD,CAAC,WAAW,YACZ,CAAC,WAAW,WAAW,GACvB;AACA;AAAA,QACE;AAAA;AAAA,MAAA;AAAA,IAGJ;AAGwB,QAAA,0BAA0B,WAAW,UAAU;AACrE;AAAA,QACE;AAAA,MAAA;AAAA,IAGJ;AAEM,UAAA,mBAA+D,CACnE,kBACG;AACG,YAAA,UAAS,+CAAe,gBAAe;AAC7C,aAAO,OAAO,SAAS,KAAK,IAAI,SAAS,WAAW,MAAM;AAAA,IAAA;AAGrD,WAAA;AAAA,MACL;AAAA,MACA,oBAAoB,eAAuB;AACnC,cAAA,SAAS,iBAAiB,aAAa;AAC7C,cAAM,SAAS,UAAU,OAAO,SAAS,GAAG,IAAI,QAAQ;AAExD,YAAI,WAAW,MAAM;AAAU,iBAAA;AAE/B,eAAO,GAAG,MAAM,KACd,+CAAe,yBAAwB,oBACzC;AAAA,MACF;AAAA,MACA,uBAAuB,eAAuC;AAE1D,YAAA,CAAC,0BACD,EAAC,+CAAe,2BAChB,CAAC,WAAW,WAAW,GACvB;AACA,gBAAM,IAAI;AAAA,YACR,kBACE;AAAA,UAAA;AAAA,QAEN;AAEwB,YAAA,EAAC,+CAAe,UAAS;AAC/C;AAAA,YACE;AAAA,UAAA;AAAA,QAEJ;AAEM,cAAA,oBAAmB,+CAAe,gBAAe;AAEhD,eAAA;AAAA;AAAA,UAEL,gBACE,qBAAqB,YACjB,wBACA;AAAA,UACN,iBAAiB;AAAA,UACjB,wBAAwB;AAAA,UACxB,iBAAiB;AAAA,UACjB,qCACE,+CAAe,2BAA0B,0BAA0B;AAAA,UACrE,IAAI,+CAAe,WACf,EAAC,+BAA+B,cAAc,QAAA,IAC9C,CAAC;AAAA,QAAA;AAAA,MAET;AAAA,MACA,sBAAsB,eAAuC;AAEzD,YAAA,CAAC,yBACD,EAAC,+CAAe,0BAChB,CAAC,WAAW,WAAW,GACvB;AACA,gBAAM,IAAI;AAAA,YACR,kBACE;AAAA,UAAA;AAAA,QAEN;AAEM,cAAA,oBACJ,+CAAe,gBAAe,eAAe;AAExC,eAAA;AAAA,UACL;AAAA,UACA;AAAA,WACA,+CAAe,0BAAyB,yBAAyB;AAAA,QAAA;AAAA,MAErE;AAAA,IAAA;AAAA,EAEJ;AAEgB,WAAA,yBACd,aACA,sBACA,aAOA;AACO,WAAA;AAAA;AAAA,MAEL,gBACE,gBAAgB,YAAY,wBAAwB;AAAA,MACtD,iBAAiB;AAAA,MACjB,wBAAwB;AAAA,MACxB,iBAAiB;AAAA,MACjB,qCAAqC;AAAA,IAAA;AAAA,EAEzC;AAEA,QAAM,+BAAe;AACrB,QAAM,kBAAkB;AACxB,QAAM,WAAW,CAAC,QAAgB,OAAwB,WAAiB;AACzE,QAAI,CAAC,SAAS,IAAI,MAAM,GAAG;AACzB,cAAQ,IAAI,EAAE,OAAO,IAAI,8BAA8B,MAAM;AAC7D,eAAS,IAAI,MAAM;AAAA,IACrB;AAAA,EACF;ACrLO,QAAM,wBAA6C;AAAA,IACxD,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,sBAAsB;AACb,aAAA;AAAA,IACT;AAAA,IACA,wBAAwB;AACtB,aAAO;IACT;AAAA,IACA,mBAAmB;AACV,aAAA;AAAA,IACT;AAAA,EACF;AAEA,QAAM,iBAAiBC,QAAA;AAAA,IACrB;AAAA,EACF;AAKO,WAAS,gBAAgB;AAAA,IAC9B;AAAA,IACA,GAAG;AAAA,EACL,GAAsC;AACpC,QACE,CAAC,cAAc,kBACf,CAAC,cAAc,mBACf,CAAC,cAAc,eACf,CAAC,cAAc,mBACf,CAAC,cAAc,sBACf;AACA,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAAA,IAEJ;AAEI,QAAA,cAAc,yBAAyB,eAAe;AAChD,cAAA;AAAA,QACN,oGAAoG,aAAa,4CAA4C,cAAc,oBAAoB;AAAA,MAAA;AAAA,IAEnM;AAEM,UAAA,cAAcC,QAAAA,QAA6B,MAAM;AACrD,eAAS,iBAAiB,eAAgD;AAClE,cAAA,UAAS,+CAAe,gBAAe,cAAc;AAC3D,eAAO,OAAO,SAAS,KAAK,IAAI,SAAS,WAAW,MAAM;AAAA,MAC5D;AAEO,aAAA;AAAA,QACL,GAAG;AAAA,QACH,sBAAsB,eAAuC;AACpD,iBAAA;AAAA,YACL,cAAc;AAAA,YACd,cAAc;AAAA,YACd,cAAc,mBAAmB,cAAc;AAAA,UAAA;AAAA,QAEnD;AAAA,QACA;AAAA,QACA,oBAAoB,eAAuB;AACzC,gBAAM,iBAAiB,iBAAiB;AAAA,YACtC,cAAa,+CAAe,gBAAe,cAAc;AAAA,UAAA,CAC1D;AACD,iBAAO,GAAG,cAAc,GACtB,eAAe,SAAS,GAAG,IAAI,KAAK,GACtC,QACE,+CAAe,yBACf,cAAc,oBAChB;AAAA,QACF;AAAA,MAAA;AAAA,IACF,GACC,CAAC,aAAa,CAAC;AAElB,+CACG,eAAe,UAAf,EAAwB,OAAO,eAC7B,QACH;AAAA,EAEJ;AAKO,WAAS,UAA+B;AACvC,UAAA,cAAcC,mBAAW,cAAc;AAC7C,QAAI,CAAC,aAAa;AACV,YAAA,IAAI,MAAM,wDAAwD;AAAA,IAC1E;AACO,WAAA;AAAA,EACT;ACjGO,QAAM,sBAAsB;AAItB,QAAA,+BAA+B;AAC/B,QAAA,8BAA8B;AAC9B,QAAA,8BAA8B;AAC9B,QAAA,YAAY;AAClB,QAAM,YAAY;ACPzB,MAAI,IAAI,oBAAI,IAAI;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,WAAS,EAAE7B,IAAG;AACZ,QAAIH,KAAI,CAAE,GAAED,IAAGF,IAAGC,KAAI,GAAG,IAAIK,GAAE,MAAM,OAAO,GAAGE,IAAGJ;AAClD,WAAOH,KAAI,EAAE,QAAQA;AACnB,UAAID,KAAI,EAAEC,EAAC,GAAGC,KAAIF,GAAE,QAAQ,GAAG,GAAG,CAACE,IAAG;AACpC,YAAIM,KAAIR,GAAE,UAAU,GAAGE,IAAG,EAAE,KAAM,GAAEE,KAAIJ,GAAE,UAAUE,EAAC,EAAE,KAAM,GAAEE,GAAE,CAAC,MAAM,QAAQA,KAAIA,GAAE,UAAU,GAAGA,GAAE,SAAS,CAAC,IAAI,CAACA,GAAE,QAAQ,GAAG;AAC/H,cAAI;AACF,YAAAA,KAAI,mBAAmBA,EAAC;AAAA,UACzB,SAAQgC,IAAG;AAAA,UACX;AACH,UAAE,IAAIpC,KAAIQ,GAAE,YAAa,CAAA,IAAIR,OAAM,YAAYG,GAAE,UAAU,IAAI,KAAKC,EAAC,IAAIJ,OAAM,YAAYG,GAAE,SAAS,CAACC,KAAID,GAAEH,EAAC,IAAII,KAAID,GAAEK,EAAC,IAAIJ;AAAA,MAC9H;AACC,SAACI,KAAIR,GAAE,KAAM,EAAC,YAAW,OAAQQ,OAAM,cAAcA,OAAM,cAAcL,GAAEK,EAAC,IAAI;AACpF,WAAOL;AAAA,EACT;AACA,WAAS,EAAEG,IAAGH,IAAGD,KAAI,CAAA,GAAI;AACvB,QAAIF,KAAIM,KAAI,MAAM,mBAAmBH,EAAC;AACtC,WAAOD,GAAE,YAAYF,MAAK,eAAe,IAAI,KAAKE,GAAE,OAAO,EAAE,YAAW,IAAKA,GAAE,UAAU,QAAQA,GAAE,UAAU,MAAMF,MAAK,gBAAgBE,GAAE,SAAS,KAAKA,GAAE,WAAWF,MAAK,cAAcE,GAAE,SAASA,GAAE,SAASF,MAAK,YAAYE,GAAE,OAAOA,GAAE,aAAaF,MAAK,gBAAgBE,GAAE,YAAYA,GAAE,UAAUA,GAAE,aAAa,YAAYF,MAAK,aAAaE,GAAE,aAAaF,MAAK,eAAeA;AAAA,EACxX;ACvBA,QAAM,YAAY;AAEX,WAAS,YAAoB;AAClC,QAAI,OAAO;AAEP,QAAA;AACF,YAAM,SAAiB,OAAO;AACxB,YAAA,oBAAoB,IAAI,YAAY,EAAE;AAC5C,aAAO,gBAAgB,iBAAiB;AAGxC,UAAII,KAAI;AACR,aAAO,UACJ,QAAQ,QAAQ,CAACQ,OAAsB;AAChC,cAAAT,KAAI,kBAAkBC,EAAC,IAAI;AACjC,cAAMM,KAAIE,OAAM,MAAMT,KAAKA,KAAI,IAAO;AACtC,QAAAC;AACO,eAAAM,GAAE,SAAS,EAAE;AAAA,MAAA,CACrB,EACA,YAAY;AAAA,aACR,KAAK;AAEZ,aAAO,UACJ,QAAQ,QAAQ,CAACE,OAAsB;AACtC,cAAMT,KAAK,KAAK,OAAO,IAAI,KAAM;AACjC,cAAMO,KAAIE,OAAM,MAAMT,KAAKA,KAAI,IAAO;AAC/B,eAAAO,GAAE,SAAS,EAAE;AAAA,MAAA,CACrB,EACA,YAAY;AAAA,IACjB;AAEA,WAAO,GAAG,QAAA,CAAS,IAAI,IAAI;AAAA,EAC7B;AAEO,WAAS,UAAkB;AAEhC,QAAI,aAAa;AACjB,QAAI,aAAa;AAGjB,kBAAiB,oBAAA,KAAO,GAAA,QAAA,MAAc;AAElC,QAAA;AACW,mBAAA,YAAY,IAAU,MAAA;AAAA,aAC5B,KAAK;AACC,mBAAA;AAAA,IACf;AAEM,UAAA,SAAS,KAAK,IAAI,aAAa,UAAU,EAC5C,SAAS,EAAE,EACX;AAGI,WAAA,OAAO,SAAS,GAAG,GAAG;AAAA,EAC/B;AAEO,WAAS,kBAAkB,SAAiC;AAC3D,UAAA,aAAa2B,EAAM,OAAO;AACzB,WAAA;AAAA,MACL,CAAC,SAAS,GAAG,WAAW,SAAS,KAAK;AAAA,MACtC,CAAC,SAAS,GAAG,WAAW,SAAS,KAAK;AAAA,IAAA;AAAA,EAE1C;ACjDO,WAAS,eAAe;AAC7B,UAAM,EAAC,cAAc,uBAAuB,wBAAuB,QAAQ;AAEpE,WAAAN,QAAA;AAAA,MACL,CAAqB;AAAA,QACnB;AAAA,QACA;AAAA,MAAA,MAIgE;AAChE,cAAM,UAAU,sBAAsB,EAAC,aAAa,OAAO,CAAA;AAE3D,YAAI,cAAc;AAChB,kBAAQ,4BAA4B,IAAI;AAAA,QAC1C;AAGM,cAAA,aAAa,kBAAkB,SAAS,MAAM;AAC5C,gBAAA,2BAA2B,IAAI,WAAW,SAAS;AACnD,gBAAA,2BAA2B,IAAI,WAAW,SAAS;AAEpD,eAAA,MAAM,uBAAuB;AAAA,UAClC,QAAQ;AAAA,UACR;AAAA,UACA,MAAM,KAAK,UAAU;AAAA,YACnB,OAAO,MAAM,SAAS;AAAA,YACtB;AAAA,UAAA,CACD;AAAA,QACF,CAAA,EACE;AAAA,UACC,CAAC,QACC,IAAI,KAAK;AAAA,QAAA,EAEZ,MAAM,CAAC,UAAU;AACT,iBAAA;AAAA,YACL,MAAM;AAAA;AAAA,YAEN,QAAQ,+BAAO;AAAA,UAAS;AAAA,QAC1B,CACD;AAAA,MACL;AAAA,MACA,CAAC,uBAAuB,cAAc,mBAAmB;AAAA,IAAA;AAAA,EAE7D;AC1BO,WAAS,eAAe;AAAA,IAC7B;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,eAAe;AAAA,EACjB,GASG;AACD,UAAM,YAAY;AAElB,UAAM,YAAYA,QAAA;AAAA,MAChB,CAAC,WAAmB;AAClB,eAAO,UAAgC;AAAA,UACrC,OAAO,UAAU,YAAY;AAAA,UAC7B,WAAW;AAAA,YACT,IAAI;AAAA,YACJ;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,WAAW,cAAc,cAAc,aAAa,YAAY;AAAA,IAAA;AAGnE,UAAM,aAAaA,QAAA;AAAA,MACjB,CAAC,SAAoB;AACnB,eAAO,UAA8C;AAAA,UACnD,OAAO,WAAW,YAAY;AAAA,UAC9B,WAAW;AAAA,YACT,OAAO;AAAA,YACP;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,cAAcA,QAAA;AAAA,MAClB,CAAC,QAAgB,UAA2B;AAC1C,eAAO,UAAgD;AAAA,UACrD,OAAO,YAAY,YAAY;AAAA,UAC/B,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,iBAAiBA,QAAA;AAAA,MACrB,CAAC,QAAgB,UAAiC;AAChD,eAAO,UAAmD;AAAA,UACxD,OAAO,eAAe,YAAY;AAAA,UAClC,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,iBAAiBA,QAAA;AAAA,MACrB,CAAC,QAAgB,UAAoB;AACnC,eAAO,UAAmD;AAAA,UACxD,OAAO,eAAe,YAAY;AAAA,UAClC,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,aAAaA,QAAA;AAAA,MACjB,CAAC,QAAgB,SAA6C;AAC5D,eAAO,UAAkD;AAAA,UACvD,OAAO,eAAe,YAAY;AAAA,UAClC,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,WAAW,cAAc,cAAc,aAAa,YAAY;AAAA,IAAA;AAGnE,UAAM,sBAAsBA,QAAA;AAAA,MAC1B,CAAC,QAAgB,kBAA0C;AACzD,eAAO,UAA2D;AAAA,UAChE,OAAO,wBAAwB,YAAY;AAAA,UAC3C,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,uBAAuBA,QAAA;AAAA,MAC3B,CAAC,QAAgB,eAAiC;AAChD,eAAO,UAAwD;AAAA,UAC7D,OAAO,qBAAqB,YAAY;AAAA,UACxC,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAGnE,UAAM,sBAAsBA,QAAA;AAAA,MAC1B,CACE,QACA,kBACG;AACH,eAAO,UAA2D;AAAA,UAChE,OAAO,wBAAwB,YAAY;AAAA,UAC3C,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QAAA,CACD;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,WAAW,cAAc,YAAY;AAAA,IAAA;AAG5D,WAAAG,QAAA;AAAA,MACL,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,MAEF;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;ACzMA,WAAS,WACP,QACA,SAM2E;AACpE,WAAA;AAAA,MACL,OAAO;AAAA,QACL,IAAI,mCAAS,iBAAgB,CAAC;AAAA,QAC9BI,EAAO;AAAA,UACL,eAAe,CAAC,YAAY,mCAAS;AAAA,QAAA,CACtC;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,IAAI;AAAA,QACF,SAAS;AAAA,UACP,SAAQ,mCAAS,kBAAiB;AAAA,UAClC,SAAS;AAAA,YACPA,EAAO;AAAA,cACL,UAAU,CAAC,YAAY,mCAAS;AAAA,cAChC,MAAM,CAAC,GAAG,UAAA;;AAAU,4DAAO,YAAP,mBAAgB;AAAA;AAAA,cACpC,eAAe,CAAC,GAAG,UAAA;;AAAU,4DAAO,YAAP,mBAAgB;AAAA;AAAA;AAAA,cAE7C,QAAQ,CAAC,MAAM;AAAA,YAAA,CAChB;AAAA,UACH;AAAA,QACF;AAAA,QACA,OAAO;AAAA,UACL,SAAQ,mCAAS,gBAAe;AAAA,UAChC,SAAS;AAAA,YACPA,EAAO;AAAA,cACL,UAAU,CAAC,YAAY,mCAAS;AAAA,cAChC,MAAM,CAAC,YAAY,mCAAS;AAAA,cAC5B,QAAQ,CAAC,GAAG,UAAA;;AAAU,4DAAO,YAAP,mBAAgB;AAAA;AAAA,YAAA,CACvC;AAAA,UACH;AAAA,QACF;AAAA,QACA,gBAAgB;AAAA,UACd,QAAQ;AAAA,UACR,SAASA,EAAO;AAAA;AAAA,YAEd,UAAU,CAAC,MAAM;AAAA;AAAA,YAEjB,MAAM,CAAC,MAAM;AAAA;AAAA,YAEb,eAAe,CAAC,MAAM;AAAA;AAAA,YAEtB,eAAe,CAAC,MAAM;AAAA;AAAA,YAEtB,QAAQ,CAAC,MAAM;AAAA,UAAA,CAChB;AAAA,QACH;AAAA,MACF;AAAA,MACA,MAAM,CAAC,wBAAwB,IAAI,mCAAS,gBAAe,CAAA,CAAG;AAAA,IAAA;AAAA,EAElE;AAEA,QAAM,2BAIyC;AAAA,IAC7C,YAAY;AAAA,MACV,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,QAAQ;AAAA,MACR,SAAS;AAAA,QACPA,EAAO;AAAA,UACL,eAAe,CAAC,GAAG,UAAU,MAAM,QAAQ;AAAA,UAC3C,MAAM,CAAC,GAAG,UAAU,gBAAgB,MAAM,QAAQ,IAAI;AAAA,QAAA,CACvD;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAEA,QAAM,uBAIgC;AAAA,IACpC,cAAc;AAAA,MACZ,QAAQ;AAAA,IACV;AAAA,IACA,iBAAiB;AAAA,MACf,QAAQ;AAAA,IACV;AAAA,IACA,iBAAiB;AAAA,MACf,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,uBAAuB;AAAA,MACrB,QAAQ;AAAA,IACV;AAAA,IACA,wBAAwB;AAAA,MACtB,QAAQ;AAAA,IACV;AAAA,IACA,uBAAuB;AAAA,MACrB,QAAQ;AAAA,IACV;AAAA,EACF;AAGA,WAAS,kBACP,aACA;AACA,WAAOX,EAIL;AAAA,MACA,IAAI;AAAA,MACJ,SAAS,cAAc,SAAS;AAAA,MAChC,SAAS;AAAA,QACP,MAAM,eAAe,gBAAgB,WAAW;AAAA,MAClD;AAAA,MACA,QAAQ;AAAA,QACN,eAAe;AAAA,UACb,IAAI;AAAA,QACN;AAAA,QACA,eAAe;AAAA,UACb,IAAI;AAAA,QACN;AAAA,QACA,qBAAqB;AAAA,UACnB,IAAI;AAAA,QACN;AAAA,QACA,MAAM;AAAA,UACJ,IAAI,EAAC,GAAG,0BAA0B,GAAG,qBAAoB;AAAA,QAC3D;AAAA,QACA,OAAO;AAAA,UACL,IAAI,EAAC,GAAG,0BAA0B,GAAG,qBAAoB;AAAA,QAC3D;AAAA,QACA,cAAc,WAAW,mBAAmB;AAAA,UAC1C,aAAa;AAAA,QAAA,CACd;AAAA,QACD,cAAc,WAAW,oBAAoB;AAAA,UAC3C,aAAa;AAAA,QAAA,CACd;AAAA,QACD,kBAAkB,WAAW,sBAAsB;AAAA,QACnD,kBAAkB,WAAW,sBAAsB;AAAA,QACnD,gBAAgB,WAAW,mBAAmB;AAAA,QAC9C,cAAc,WAAW,kBAAkB;AAAA,QAC3C,uBAAuB,WAAW,2BAA2B;AAAA,QAC7D,wBAAwB,WAAW,4BAA4B;AAAA,QAC/D,uBAAuB,WAAW,2BAA2B;AAAA,MAC/D;AAAA,IAAA,CACD;AAAA,EACH;AAGO,WAAS,uBAAuB;AAAA,IACrC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,EACF,GA0BG;AACK,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,eAAe;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAEK,UAAA,cAAcO,QAAAA,QAAQ,MAAM,kBAAkB,IAAI,GAAG,CAAC,IAAI,CAAC;AAEjE,UAAM,CAAC,OAAO,MAAM,OAAO,IAAI,WAAW,aAAa;AAAA,MACrD,SAAS;AAAA;AAAA,QAEP,iBAAiB,OAAO,GAAG,UAAU;;AACnC,cAAI,MAAM,SAAS;AAAc;AAE3B,gBAAA,EAAC,MAAM,WAAU,MAAM,WAAU,oCAAO,YAAP,mBAAgB,MAAM;AAC7D,gBAAM,cAAc,qBAAqB,OAAO,6BAAM,MAAM,MAAM;AAClE,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,kBAAkB,OAAO,GAAG,UAAU;;AACpC,cAAI,MAAM,SAAS;AAAe;AAElC,gBAAM,EAAC,MAAM,WAAU,MAAM,WAAW,+BAAO,OAAO;AACtD,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,eAAN,mBAAkB;AAAA,YAClB;AAAA,UAAA;AAEF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,mBAAmB,OAAO,SAAS,UAAU;;AAC3C,cAAI,MAAM,SAAS,kBAAkB,GAAC,wCAAS,SAAT,mBAAe;AAAI;AAEzD,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,iBAAN,mBAAoB;AAAA,YACpB;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,sBAAsB,OAAO,SAAS,UAAU;;AAC9C,cAAI,MAAM,SAAS,qBAAqB,GAAC,wCAAS,SAAT,mBAAe;AAAI;AAC5D,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,oBAAN,mBAAuB;AAAA,YACvB;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,sBAAsB,OAAO,SAAS,UAAU;;AAC9C,cAAI,MAAM,SAAS,qBAAqB,GAAC,wCAAS,SAAT,mBAAe;AAAI;AAC5D,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,oBAAN,mBAAuB;AAAA,YACvB;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,kBAAkB,OAAO,SAAS,UAAU;;AAC1C,cAAI,MAAM,SAAS,iBAAiB,GAAC,wCAAS,SAAT,mBAAe;AAAI;AACxD,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,mBAAN,mBAAsB;AAAA,YACtB;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,2BAA2B,OAAO,SAAS,UAAU;;AACnD,cAAI,MAAM,SAAS,2BAA2B,GAAC,wCAAS,SAAT,mBAAe;AAC5D;AACF,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,4BAAN,mBAA+B;AAAA,YAC/B;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,4BAA4B,OAAO,SAAS,UAAU;;AACpD,cAAI,MAAM,SAAS,4BAA4B,GAAC,wCAAS,SAAT,mBAAe;AAC7D;AACF,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAGhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,yBAAN,mBAA4B;AAAA,YAC5B;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA;AAAA,QAEA,2BAA2B,OAAO,SAAS,UAAU;;AACnD,cAAI,MAAM,SAAS,2BAA2B,GAAC,wCAAS,SAAT,mBAAe;AAC5D;AACF,gBAAM,EAAC,MAAM,OAAM,IAAI,MAAM;AAAA,YAC3B,QAAQ,KAAK;AAAA,YACb,MAAM,QAAQ;AAAA,UAAA;AAEhB,gBAAM,cAAc;AAAA,YAClB;AAAA,aACA,kCAAM,4BAAN,mBAA+B;AAAA,YAC/B;AAAA,UAAA;AAGF,eAAK,WAAW;AAAA,QAClB;AAAA,QACA,GAAI,qBAAqB;AAAA,UACvB,mBAAmB,CAAC,SAAS,UAAgB;AACvC,gBAAA,kBAAkB,KAAK,GAAG;AAC5B,gCAAkB,SAAS,KAAK;AAAA,YAClC;AAAA,UACF;AAAA,QACF;AAAA,QACA,GAAI,4BAA4B;AAAA,UAC9B,0BAA0BI,EAAO,CAAC,SAAS,UAAU;AAC5C,mBAAA,yBAAyB,SAAS,KAAK;AAAA,UAAA,CAC/C;AAAA,QACH;AAAA,QACA,GAAI,wBAAwB;AAAA,UAC1B,sBAAsB,CAAC,SAAS,UAAgB;AAC1C,gBAAA,uBAAuB,KAAK,GAAG;AACjC,mCAAqB,SAAS,KAAK;AAAA,YACrC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IAAA,CACD;AAEM,WAAAJ,gBAAQ,MAAM,CAAC,OAAO,MAAM,OAAO,GAAY,CAAC,OAAO,MAAM,OAAO,CAAC;AAAA,EAC9E;AAEO,WAAS,gBACd,MACM;AACC,WAAA;AAAA,MACL,GAAG;AAAA,MACH,OAAO,kBAAkB,6BAAM,KAAK;AAAA,MACpC,MAAM,KAAK,QAAQ;AAAA,IAAA;AAAA,EAEvB;AAEA,WAAS,qBACP,iBACA,MACA,QAC6B;AAC7B,QAAI,QAAQ;AACV,aAAO,EAAC,MAAM,SAAS,SAAS,EAAC,QAAQ;IAC3C;AAEA,QAAI,CAAC,MAAM;AACF,aAAA;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,UACP;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAEO,WAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,QACP,MAAM,gBAAgB,IAAI;AAAA,QAC1B,eAAe;AAAA,QACf;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAEA,WAAS,kBACP,OACiC;AAE/B,WAAA,MAAM,SAAS,iBACf,MAAM,SAAS,kBACf,MAAM,SAAS,qBACf,MAAM,SAAS,qBACf,MAAM,SAAS,iBACf,MAAM,SAAS,2BACf,MAAM,SAAS,4BACf,MAAM,SAAS;AAAA,EAEnB;AAEA,WAAS,uBACP,OACsC;AACtC,WACE,MAAM,SAAS,aACf,MAAM,SAAS,WACf,MAAM,SAAS;AAAA,EAEnB;ACzaa,QAAA,cAAcD,QAAAA,cAAsC,IAAI;AAQ9D,WAAS,UAA2B;AACnC,UAAA,UAAUE,mBAAW,WAAW;AAEtC,QAAI,CAAC,SAAS;AACN,YAAA,IAAI,MAAM,wDAAwD;AAAA,IAC1E;AAEO,WAAA;AAAA,EACT;AA6DO,WAAS,aAAa;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,eAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAmC;;AACjC,UAAM,OAAO;AAEb,QAAI,CAAC;AACH,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAGJ,mBACG,eACD,KAAK,kBACL,MACA;AAEF,oBACG,gBACD,KAAK,mBACL,MACA;AAEE,QAAA;AAAa,oBAAc,YAAY;AAE3C,UAAM,CAAC,iBAAiB,kBAAkB,IAAIZ,iBAAS,WAAW;AAClE,UAAM,CAAC,yBAAyB,0BAA0B,IACxDA,iBAAS,mBAAmB;AACxB,UAAA,+BAA+BD,eAAO,KAAK;AAG/C,QAAA,oBAAoB,eACpB,4BAA4B,qBAC5B;AACA,yBAAmB,WAAW;AAC9B,iCAA2B,mBAAmB;AAC9C,mCAA6B,UAAU;AAAA,IACzC;AAEA,UAAM,CAAC,WAAW,QAAQ,IAAI,uBAAuB;AAAA,MACnD;AAAA,MACA,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA,kBAAkB,GAAG,OAAO;AACtB,YAAA;AACF,kBAAQ,MAAM,MAAM;AAAA,YAClB,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,YACT,KAAK;AACH,qBAAO;AAAA,UACX;AAAA,iBACO,OAAO;AACN,kBAAA,MAAM,4BAA4B,KAAK;AAAA,QACjD;AAAA,MACF;AAAA,MACA,yBAAyB,SAAS,OAAO;;AACvC,YAAI,CAAC,QAAQ;AAAa,iBAAA,EAAC,GAAG;AAC9B,gBAAQ,MAAM,MAAM;AAAA,UAClB,KAAK;AACI,mBAAA;AAAA,cACL,GAAG;AAAA,cACH,MAAM;AAAA,gBACJ,GAAG,QAAQ;AAAA,gBACX,QAAOiB,OAAAC,MAAA,mCAAS,SAAT,gBAAAA,IAAe,UAAf,gBAAAD,IAAsB;AAAA,kBAC3B,CAAC,UAAS,6BAAM,OAAM,CAAC,MAAM,QAAQ,MAAM,SAAS,6BAAM,EAAE;AAAA;AAAA,cAEhE;AAAA,YAAA;AAAA,UAEJ,KAAK;AACI,mBAAA;AAAA,cACL,GAAG;AAAA,cACH,MAAM;AAAA,gBACJ,GAAG,QAAQ;AAAA,gBACX,QAAOE,OAAAC,MAAA,mCAAS,SAAT,gBAAAA,IAAe,UAAf,gBAAAD,IAAsB,IAAI,CAAC,SAAS;AACnC,wBAAA,cAAc,MAAM,QAAQ,MAAM;AAAA,oBACtC,CAAC,EAAC,GAAE,MAAM,QAAO,6BAAM;AAAA,kBAAA;AAGrB,sBAAA,eAAe,YAAY,UAAU;AAChC,2BAAA;AAAA,sBACL,GAAG;AAAA,sBACH,UAAU,YAAY;AAAA,oBAAA;AAAA,kBAE1B;AAEO,yBAAA;AAAA,gBAAA;AAAA,cAEX;AAAA,YAAA;AAAA,QAEN;AACO,eAAA,EAAC,GAAG;MACb;AAAA,MACA,qBAAqB,SAAS,OAAO;AAC7B,cAAA,kBAAkB,MAAM,QAAQ;AAClC,YAAA;AACF,kBAAQ,MAAM,MAAM;AAAA,YAClB,KAAK;AACH,sBAAQ,gBAAgB,MAAM;AAAA,gBAC5B,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACC,sBAAA,sBAAsB,SAAS,eAAe,GAAG;AACnD,iDAA6B,UAAU;AAAA,kBACzC;AACA,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,gBACT,KAAK;AACH,yBAAO;AAAA,cACX;AAAA,UACJ;AAAA,iBACO,OAAO;AACN,kBAAA,MAAM,+BAA+B,KAAK;AAAA,QACpD;AAAA,MACF;AAAA,IAAA,CACD;AAEK,UAAA,YAAYnB,eAAO,KAAK;AAC9B,UAAM,CAAC,aAAa,cAAc,IAAIC,iBAAS,KAAK;AAC9C,UAAA,gBAAgB,UAAU,QAAQ,eAAe;AAEvD,UAAM,kBACH,UAAU,UAAU,UACnB,UAAU,UAAU,WACpB,UAAU,UAAU,oBACtB,kBAAgB,wDAAW,YAAX,mBAAoB,SAApB,mBAA0B,kBAA1B,mBAAyC,gBACzD,CAAC,UAAU,QAAQ;AAEf,UAAA,sBAAsBD,eAAO,KAAK;AAOxCQ,YAAAA,UAAU,MAAM;AACd,UAAI,CAAC,UAAU,WAAW,CAAC,oBAAoB,SAAS;AACtD,YAAI,CAAC,QAAQ,iBAAiB,cAAc,GAAG;AAC7C,8BAAoB,UAAU;AAC1B,cAAA;AACF,kBAAM,SAAS,OAAO,aAAa,QAAQ,mBAAmB;AAC9D,gBAAI,QAAQ;AACV,uBAAS,EAAC,MAAM,cAAc,SAAS,EAAC,UAAQ;AAAA,YAClD;AAAA,mBACO,OAAO;AACd,oBAAQ,KAAK,uBAAuB;AACpC,oBAAQ,KAAK,KAAK;AAAA,UACpB;AAAA,QACF;AACA,kBAAU,UAAU;AAEpB,uBAAe,IAAI;AAAA,MACrB;AAAA,IACC,GAAA,CAAC,MAAM,WAAW,QAAQ,CAAC;AAG9BA,YAAAA,UAAU,MAAM;AACV,UAAA,CAAC,kBAAkB,6BAA6B;AAAS;AACpD,eAAA;AAAA,QACP,MAAM;AAAA,QACN,SAAS,EAAC,eAAe,EAAC,aAAa,sBAAoB;AAAA,MAAA,CAC5D;AAAA,IAAA,GACA;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAGD,UAAM,kBAAkBC,QAAA;AAAA,MACtB,CAAC,cAAgC;AAC3B,YAAA,CAAC,UAAU,SAAS;AACf,iBAAA,QAAQ,KAAK,sBAAsB;AAAA,QAC5C;AACA,iBAAS,SAAS;AAAA,MACpB;AAAA,MACA,CAAC,QAAQ;AAAA,IAAA;AAIXD,YAAAA,UAAU,MAAM;;AACd,YAAIS,OAAAC,MAAA,uCAAW,YAAX,gBAAAA,IAAoB,SAApB,gBAAAD,IAA0B,OAAM,iBAAiB,cAAc,GAAG;AAChE,YAAA;AACF,iBAAO,aAAa;AAAA,YAClB;AAAA,aACAG,MAAA,UAAU,QAAQ,SAAlB,gBAAAA,IAAwB;AAAA,UAAA;AAAA,iBAEnB,OAAO;AACN,kBAAA,KAAK,yCAAyC,KAAK;AAAA,QAC7D;AAAA,MACF;AAAA,OACC,EAAC,kDAAW,YAAX,mBAAoB,SAApB,mBAA0B,EAAE,CAAC;AAGjCZ,YAAAA,UAAU,MAAM;AACV,UAAA,iBAAiB,iBAAiB,cAAc,GAAG;AACjD,YAAA;AACK,iBAAA,aAAa,WAAW,mBAAmB;AAAA,iBAC3C,OAAO;AACN,kBAAA,KAAK,6CAA6C,KAAK;AAAA,QACjE;AAAA,MACF;AAAA,IAAA,GACC,CAAC,aAAa,CAAC;AAElB,UAAM,aAAaC,QAAA;AAAA,MACjB,CAAC,cAAyB;;AACxB,YAAI,eAAe,GAACS,MAAA,UAAU,kBAAV,gBAAAA,IAAyB,cAAa;AACpD,cAAA,UAAU,iBAAiB,MAAM;AACnC,sBAAU,gBAAgB;UAC5B;AACA,oBAAU,cAAc,cAAc;AAAA,QACxC;AAEA,YACE,uBACA,GAACD,MAAA,UAAU,kBAAV,gBAAAA,IAAyB,sBAC1B;AACI,cAAA,UAAU,iBAAiB,MAAM;AACnC,sBAAU,gBAAgB;UAC5B;AACA,oBAAU,cAAc,sBAAsB;AAAA,QAChD;AACgB,wBAAA;AAAA,UACd,MAAM;AAAA,UACN,SAAS;AAAA,QAAA,CACV;AAAA,MACH;AAAA,MACA,CAAC,aAAa,qBAAqB,eAAe;AAAA,IAAA;AAK9C,UAAA,mBAAmB,8BAA8B,SAAS;AAE1D,UAAA,mBAAmBL,QAAAA,QAAyB,MAAM;;AAC/C,aAAA;AAAA,QACL,KAAIM,MAAA,qDAAkB,YAAlB,gBAAAA,IAA2B,SAAQ,EAAC,OAAO,CAAC,GAAG,YAAY,GAAE;AAAA,QACjE,QAAQ,gBAAgB,iBAAiB,KAAK;AAAA,QAC9C,QAAOD,MAAA,qDAAkB,YAAlB,gBAAAA,IAA2B;AAAA,QAClC,iBAAeE,OAAAC,MAAA,qDAAkB,YAAlB,gBAAAA,IAA2B,SAA3B,gBAAAD,IAAiC,kBAAiB;AAAA,QACjE;AAAA,QACA,WAAW;AAAA,QACX,SAAS,OAA8B;;AACjC,eAAAF,OAAAC,MAAA,qDAAkB,YAAlB,gBAAAA,IAA2B,SAA3B,gBAAAD,IAAiC,IAAI;AACvB,4BAAA;AAAA,cACd,MAAM;AAAA,cACN,SAAS,EAAC,MAAK;AAAA,YAAA,CAChB;AAAA,UAAA,OACI;AACM,uBAAA,EAAC,OAAM;AAAA,UACpB;AAAA,QACF;AAAA,QACA,YAAY,OAAuB;AACjB,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA,YAAY,OAAoC;AAC9B,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA,WAAW,MAAgD;AACzC,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA,oBAAoB,eAA6C;AAC/C,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA,qBAAqB,YAAoC;AACvC,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA,oBAAoB,eAA+B;AACjC,0BAAA;AAAA,YACd,MAAM;AAAA,YACN,SAAS;AAAA,cACP;AAAA,YACF;AAAA,UAAA,CACD;AAAA,QACH;AAAA,QACA;AAAA,MAAA;AAAA,IACF,GACC;AAAA,MACD;AAAA,MACA;AAAA,OACA,0DAAkB,YAAlB,mBAA2B;AAAA,OAC3B,0DAAkB,YAAlB,mBAA2B;AAAA,MAC3B,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,IAAA,CACD;AAED,+CACG,YAAY,UAAZ,EAAqB,OAAO,oBAC1B,QACH;AAAA,EAEJ;AAEA,WAAS,gBACP,QAC2B;AAC3B,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,IACX;AAAA,EACF;AAMA,WAAS,8BAAiC,OAAa;AACrD,UAAM,CAAC,WAAW,eAAe,IAAII,QAAc,cAAA;AACnD,UAAM,CAAC,cAAc,eAAe,IAAIpB,iBAAS,KAAK;AAEhD,UAAA,mBAAmBD,eAAO,KAAK;AACrC,QAAI,WAAW;AACb,uBAAiB,UAAU;AAAA,IAC7B;AAEM,UAAA,2BAA2BA,eAAO,KAAK;AACzC,QAAA,CAAC,aAAa,iBAAiB,SAAS;AAC1C,+BAAyB,UAAU;AAAA,IACrC;AAEAQ,YAAAA,UAAU,MAAM;AACd,sBAAgB,MAAM;AAChB,YAAA,CAAC,yBAAyB,SAAS;AACrC,0BAAgB,KAAK;AAAA,QACvB;AAAA,MAAA,CACD;AAAA,IAAA,GACA,CAAC,KAAK,CAAC;AAEJ,UAAA,eAAe,yBAAyB,UAAU,QAAQ;AAEzD,WAAA;AAAA,EACT;AAMO,WAAS,iBACd,MACS;AACL,QAAA;AACA,QAAA;AACF,gBAAU,OAAO,IAAI;AACrB,YAAM,IAAI;AACF,cAAA,QAAQ,GAAG,CAAC;AACpB,cAAQ,WAAW,CAAC;AACb,aAAA;AAAA,aACA5B,IAAG;AACH,aAAA,CAAC,EACNA,cAAa;AAAA,OAEZA,GAAE,SAAS;AAAA,MAEVA,GAAE,SAAS;AAAA;AAAA,MAGXA,GAAE,SAAS;AAAA,MAEXA,GAAE,SAAS;AAAA,MAEb,WACA,QAAQ,WAAW;AAAA,IAEvB;AAAA,EACF;AAEA,WAAS,sBACP,SACA,OACS;;AACT,WAAO,CAAC,EACN,MAAM,QAAQ,cAAc,iBAC5B,mBAAQ,SAAR,mBAAc,kBAAd,mBAA6B,iBAC3B,MAAM,QAAQ,cAAc;AAAA,EAElC;ACxiBA,QAAM,wBAAwB+B,QAAAA,cAAuC,IAAI;AAyBlE,WAAS,gBAAgB;AAAA,IAC9B;AAAA,IACA,MAAM;AAAA,IACN,kBAAkB;AAAA,EACpB,GAAsC;AAEpC,UAAM,WAAWC,QAAA;AAAA,MACf,MAAM,kBAAkB,QAAQ,YAAY,EAAE;AAAA,MAC9C,CAAC,QAAQ,QAAQ;AAAA,IAAA;AAGf,QAAA,CAAC,sBAAsB,QAAQ,GAAG;AACpC,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAAA,IAEJ;AAGM,UAAA,UAAUA,QAAAA,QAAQ,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,CAAC;AAKxD,UAAA,CAAC,iBAAiB,kBAAkB,IAAIX,QAAAA,SAI5C,MAAM,wBAAwB,mBAAmB,QAAQ,CAAC;AAMtD,UAAA,CAAC,iBAAiB,kBAAkB,IAAIA,QAAA;AAAA,MAA0B,MACtE,mBAAmB,eAAe;AAAA,IAAA;AASpCO,YAAAA,UAAU,MAAM;AACd,YAAM,qBAAqB;AAAA,QACzB;AAAA,QACA;AAAA,MAAA;AAEF,yBAAmB,kBAAkB;AAClB,yBAAA,mBAAmB,kBAAkB,CAAC;AAAA,IAAA,GACxD,CAAC,mBAAmB,QAAQ,CAAC;AAKhC,UAAM,oBAAoBC,QAAA;AAAA,MACxB,CAAC,MAAca,WAAkB;AAC/B,2BAAmB,CAACC,qBAAoB;AACtC,gBAAM,OAAO,EAAC,GAAGA,kBAAiB,CAAC,IAAI,GAAGD,OAAK;AAC5B,6BAAA,mBAAmB,UAAU,IAAI,CAAC;AAC9C,iBAAA;AAAA,QAAA,CACR;AAAA,MACH;AAAA,MACA,CAAC,oBAAoB,QAAQ;AAAA,IAAA;AAG/B,UAAM,kBAAkBb,QAAA;AAAA,MACtB,CAAC,QAAgBa,WAAkB;AAC3B,cAAA,kBAAkB,mBAAmB,UAAU;AAAA,UACnD,GAAG;AAAA,UACH,GAAG,EAAC,CAAC,MAAM,GAAGA,OAAK;AAAA,QAAA,CACpB;AAED,gBAAO,mDAAiB,qBAAoB;AAAA,MAC9C;AAAA,MACA,CAAC,iBAAiB,QAAQ;AAAA,IAAA;AAG5B,UAAM,oBAAoBV,QAAA;AAAA,MACxB,MACE,kBAAkB,QAAQ,qBAAqB,CAAA,CAAE,EAAE;AAAA,QACjD,CAAC,sBAAsB;AAAA,UACrB,GAAG;AAAA,UACH,cAAc,mBAAkB,qDAAkB,iBAAgB,CAAA,CAAE;AAAA,QAAA;AAAA,MAExE;AAAA,MACF,CAAC,QAAQ,iBAAiB;AAAA,IAAA;AAQ5B,UAAM,CAAC,qBAAqB,sBAAsB,IAAIX,QAAAA,SAEpD,MAAS;AAEL,UAAA,gCAAgCW,QAAAA,QAEpC,MAAM;;AACF,UAAA,CAAC,mBAAmB,CAAC,qBAAqB;AAC5C;AAAA,MACF;AAEA,UACE,GAAC,qBAAgB,2BAAhB,mBAAwC,UACzC,GAAC,qBAAgB,2BAAhB,mBAAwC,QACzC;AACA,cAAM,IAAI;AAAA,UACR;AAAA,QAAA;AAAA,MAEJ;AAEO,aAAA,kBAAkB,gBAAgB,sBAAsB,EAAE;AAAA,QAC/D,CAAC,eAAA;;AAAe,mBAAAM,MAAA,yCAAY,gBAAZ,gBAAAA,IAAyB,QAAO,oBAAoB;AAAA;AAAA,MAAA;AAAA,IACtE,GACC,CAAC,iBAAiB,mBAAmB,CAAC;AAEzC,UAAM,QAAQN,QAAA;AAAA,MACZ,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,oBAAoB,QAAQ;AAAA,QAC5B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,6BAA6B,QAAQ;AAAA,MAAA;AAAA,MAEvC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IAAA;AAGF,WACG,sBAAA,cAAA,sBAAsB,UAAtB,EAA+B,SAC7B,QACH;AAAA,EAEJ;AAKO,WAAS,aAA+B;AACvC,UAAA,UAAUC,mBAAW,qBAAqB;AAEhD,QAAI,CAAC,SAAS;AACN,YAAA,IAAI,MAAM,qDAAqD;AAAA,IACvE;AAEO,WAAA;AAAA,EACT;AAEA,WAAS,mBACP,UACA,SACwE;;AAIxE,QACE,CAAC,SAAS,YACV,gDAAW,OAAX,mBAAe,oBAAf,mBAAgC,YAAW,OAAO,KAAK,OAAO,EAAE,QAChE;AACA;AAAA,IACF;AAEO,WAAA,qCAAU,KAAK,CAAC,YAAY;AAC1B,aAAA,OAAO,QAAQ,OAAO,EAAE,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM;;AACtD,gBAAOK,MAAA,mCAAS,oBAAT,gBAAAA,IAA0B;AAAA,UAC/B,CAAC,YAAW,iCAAQ,UAAS,SAAQ,iCAAQ,WAAU;AAAA;AAAA,MACzD,CACD;AAAA,IAAA;AAAA,EAEL;AAEA,WAAS,WACP,UACoB;AACpB,UAAM,MAAM,SAAS,OAAO,CAAC,MAAM,YAAY;;AACzC,UAAA,CAAC,QAAQ,iBAAiB;AACtB,cAAA,IAAI,MAAM,iDAAiD;AAAA,MACnE;AACS,+CAAA,oBAAA,mBAAiB,QAAQ,CAAC,QAAQ;AACpC,cAAA,2BAAK,SAAQ,EAAE,IAAI,MAAK,2BAAK,SAAQ,EAAE,KAAK,oBAAI,IAAI;AACzD,cAAK,2BAAK,SAAQ,EAAE,EAAE,KAAI,2BAAK,UAAS,EAAE;AAAA,MAAA;AAGrC,aAAA;AAAA,IACT,GAAG,CAAiC,CAAA;AAEpC,WAAO,OAAO,KAAK,GAAG,EAAE,IAAI,CAAC,WAAW;AAC/B,aAAA;AAAA,QACL,MAAM;AAAA,QACN,QAAQ,MAAM,KAAK,IAAI,MAAM,CAAC;AAAA,MAAA;AAAA,IAChC,CACD;AAAA,EACH;AAEA,WAAS,wBACP,mBACA,UAMO;AAGP,QAAI,mBAAmB;AACrB,YAAM,eAAe,SAAS;AAAA,QAC5B,CAAC,aAAY,mCAAS,QAAO;AAAA,MAAA;AAE/B,UAAI,CAAC,cAAc;AACT,gBAAA;AAAA,UACN;AAAA,QAAA;AAAA,MAEJ;AACO,aAAA;AAAA,IACT;AAEA,QAAI,sBAAsB,MAAM;AACvB,aAAA;AAAA,IACT;AAGA,QAAI,sBAAsB,QAAW;AAC5B,aAAA,SAAS,KAAK,CAAC,YAAY,mCAAS,gBAAgB,KAAK,SAAS,CAAC;AAAA,IAC5E;AAAA,EACF;AAEA,WAAS,mBACP,iBAIiB;AACV,YAAA,mDAAiB,mBACpB,gBAAgB,gBAAgB;AAAA,MAC9B,CAAC,MAAM,cAAc;AACnB,cAAK,uCAAW,SAAQ,EAAE,KAAI,uCAAW,UAAS;AAC3C,eAAA;AAAA,MACT;AAAA,MACA,CAAC;AAAA,QAEH;EACN;AAEA,WAAS,sBACP,mBAME;AACF,QAAI,CAAC,qBAAqB,CAAC,MAAM,QAAQ,iBAAiB,GAAG;AACpD,aAAA;AAAA,IACT;AAEO,WAAA;AAAA,EACT;AC5SO,WAAS,WACd,OACa;AACP,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACD,IAAA;AAEJ,UAAM,gBAAgBT,QAAA;AAAA,MACpB,CAAC,UAA4D;AAC3D,YAAI,SAAS;AACL,gBAAA,sBAAsB,QAAQ,KAAK;AACzC,cACG,OAAO,wBAAwB,aAC9B,wBAAwB,UAC1B,+BAAO;AAEP;AAAA,QACJ;AAEA,yDAAiB;AAAA,MACnB;AAAA,MACA,CAAC,gBAAgB,OAAO;AAAA,IAAA;AAG1B,UAAM,YAAY,MAAM;AAGtB,WAAA,sBAAA,cAAC,aAAU,KAAK,WAAW,SAAS,eAAgB,GAAG,oBACpD,QACH;AAAA,EAEJ;AC/BO,WAAS,gBACd,OACa;AACb,UAAM,CAAC,YAAY,aAAa,IAAIR,iBAAkB,KAAK;AACrD,UAAA;AAAA,MACJ,WAAW;AAAA,MACX,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACD,IAAA;AACJ,UAAM,EAAC,QAAQ,SAAQ,IAAI,QAAQ;AAC7B,UAAA,EAAC,oBAAmB;AACpB,UAAA,YAAY,sBAAqB,mDAAiB,OAAM;AAC9D,UAAM,WACJ,sBAAsB,QACtB,cAAc,MACd,oBAAoB,QACpB;AAAA,IAEC,iBAA0C;AAE7CO,YAAAA,UAAU,MAAM;AACV,UAAA,cAAc,WAAW,QAAQ;AACnC,sBAAc,KAAK;AAAA,MACrB;AAAA,IAAA,GACC,CAAC,QAAQ,UAAU,CAAC;AAEjB,UAAA,gBAAgBC,QAAAA,YAAY,MAAM;AACtC,oBAAc,IAAI;AACT,eAAA;AAAA,QACP;AAAA,UACE;AAAA,UACA,eAAe,aAAa;AAAA,UAC5B;AAAA,UACA;AAAA,QACF;AAAA,MAAA,CACD;AAAA,IAAA,GACA,CAAC,UAAU,UAAU,WAAW,YAAY,aAAa,CAAC;AAE7D,WAEIjB,iCAAA,cAAAA,iBAAA,UAAA,MAAAA,iCAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA;AAAA,QACA,gBAAgB;AAAA,MAAA;AAAA,MAEf;AAAA,IAAA,GAEF,8BACCA,iCAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,aAAa;AAAA,QACf;AAAA,QACA,MAAK;AAAA,QACL,aAAU;AAAA,MAAA;AAAA,MAET,aAAa,8BAA8B;AAAA,QAE5C,IACN;AAAA,EAEJ;AC3GO,QAAM,qBAAqB;AAAA,IAChC,WAAW;AAAA,IACX,aAAa;AAAA,IACb,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,aAAa;AAAA,EACf;AAEO,QAAM,oBAAuC;AAAA,IAClD,SAAS;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,0BAA0B;AAAA,IAC1B,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,wBAAwB;AAAA,IACxB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,EACV;AAEO,QAAM,sBAA2C;AAAA,IACtD,UAAU;AAAA,IACV,UAAU;AAAA,EACZ;AAEO,QAAM,eAAe;AAAA,IAC1B,UAAU;AAAA,IACV,UAAU;AAAA,EACZ;AC9BgB,WAAA,cACd,UACA,SACsB;AACf,WAAA;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA,UAAU;AAAA,QACR,qBAAqB,KAAK,IAAI;AAAA,MAChC;AAAA,IAAA;AAAA,EAEJ;AAgBO,WAAS,SAAS,KAAqC;AAC5D,UAAM,gBAA4B;AAAA,MAChC,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,cAAc,IAAI,gBAAgB;AAAA,MAClC,MAAM;AAAA,IAAA;AAGJ,QAAA,OAAO,QAAQ,UAAU;AACpB,aAAA;AAAA,IACT;AAEI,QAAA;AACI,YAAA,EAAC,QAAQ,cAAc,UAAU,SAAQ,IAAI,IAAI,GAAG;AACpD,YAAA,gBAAgB,SAAS,MAAM,GAAG;AACxC,YAAM,mBAAmB,cAAc,cAAc,SAAS,CAAC;AAC/D,YAAM,eAAe,cAAc,cAAc,SAAS,CAAC;AAEvD,UAAA,CAAC,oBAAoB,CAAC,cAAc;AAC/B,eAAA;AAAA,MACT;AAEA,YAAM,KAAK,GAAG,gBAAgB,GAAG,MAAM,GAAG,IAAI,MAAM;AACpD,YAAM,aAAa,oBAAoB;AACvC,YAAM,WAAW,gBAAgB;AAEjC,aAAO,EAAC,IAAI,UAAU,YAAY,QAAQ,cAAc;IAAI,QACtD;AACC,aAAA;AAAA,IACT;AAAA,EACF;AAQgB,WAAA,UACd,eACA,eACwB;AACpB,QAAA,OAAO,kBAAkB,UAAU;AACrC,aAAO;IACT;AACO,WAAA,QAAQ,aAAa,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACtD,UAAI,OAAO;AACT,sBAAc,GAAG,IAAI;AAAA,MACvB;AAAA,IAAA,CACD;AACM,WAAA;AAAA,EACT;AAOO,WAAS,cAAc,QAAyB;AACjD,QAAA,OAAO,aAAa,aAAa;AAC3B,cAAA;AAAA,QACN,GAAG,MAAM;AAAA,MAAA;AAEJ,aAAA;AAAA,IACT;AACO,WAAA;AAAA,EACT;AClGA,QAAMgC,cAAY;AAClB,QAAM,gBAAgB;AAEf,WAASC,WACd,SACwB;AACxB,UAAM,kBAAkB;AACxB,UAAM,EAAC,IAAI,SAAA,IAAY,SAAS,gBAAgB,UAAU;AAC1D,UAAM,eAAe,WAAW,SAAS,YAAgB,IAAA;AAClD,WAAA;AAAA,MACL;AAAA,QACED;AAAAA,QACA;AAAA,UACE;AAAA,YACE,UAAU,gBAAgB;AAAA,YAC1B,YAAY,SAAS,SAAS,gBAAgB,UAAU,EAAE,MAAM,GAAG;AAAA,YACnE;AAAA,YACA,YAAY,SAAS,EAAE;AAAA,UACzB;AAAA,UACAE,gBAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAEA,WAASA,gBACP,SACwB;AACjB,WAAA;AAAA,MACL,aAAa,QAAQ,sBACjB,aAAa,QAAQ,mBAAmB,IACxC,aAAa;AAAA,MACjB,mBAAmB,kBAAkB,QAAQ,GAAG;AAAA,MAChD,sBACE,QAAQ,gBAAgB,QAAQ,wBAAwB;AAAA,MAE1D,oBAAoB,QAAQ;AAAA,MAC5B,WAAW,QAAQ;AAAA,MACnB,YAAY,QAAQ;AAAA,MACpB,gBAAgB,UAAU;AAAA,MAC1B,mBAAmB;AAAA,MAEnB,KAAK,QAAQ;AAAA,MACb,MAAM,QAAQ;AAAA,MACd,QAAQ,QAAQ;AAAA,MAChB,UAAU,QAAQ;AAAA,MAClB,OAAO,QAAQ;AAAA,MAEf,QAAQ,SAAS,SAAS,QAAQ,MAAM,EAAE,EAAE;AAAA,MAC5C,UAAU,QAAQ;AAAA,MAClB,iBAAiB,QAAQ,oBAAoB;AAAA,IAAA;AAAA,EAEjD;AAEA,WAAS,kBAAkB,KAAsB;AAC3C,QAAA,OAAO,QAAQ,UAAU;AACpB,aAAA;AAAA,IACT;AACA,UAAM,WAAW,IAAI,IAAI,GAAG,EAAE;AAC9B,QAAI,SAAS,QAAQ,aAAa,MAAM,MAAM,aAAa,aAAa;AAC/D,aAAA;AAAA,IACT;AACO,WAAA;AAAA,EACT;;AC3DA,QAAM,YAAY;AAClB,QAAM,2BAA2B;AACjC,QAAM,sCAAsC;AAC5C,QAAM,mCAAmC;AACzC,QAAM,mCAAmC;AACzC,QAAM,8BAA8B;AAEpC,WAAS,yBACP,SAC+D;AACxD,WAAA;AAAA,MACL,eAAe,QAAQ,gBAAgB,QAAQ;AAAA,MAC/C,aAAa,SAAS,SAAS,QAAQ,UAAU,EAAE,MAAM,GAAG;AAAA,IAAA;AAAA,EAEhE;AAIO,WAAS,SACd,SACwB;AACxB,UAAM,kBAAkB;AAClB,UAAA,oBAAoB,yBAAyB,eAAe;AAElE,UAAM,WAAW,gBAAgB;AACjC,UAAM,iBAAiB,CAAA;AAER,mBAAA;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,GAAG;AAAA,UACL;AAAA,UACA,cAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAGF,YAAQ,UAAU;AAAA,MAChB,KAAK,kBAAkB;AACN,uBAAA;AAAA,UACb;AAAA,YACE;AAAA,YACA;AAAA,cACE;AAAA,gBACE,YAAY;AAAA,gBACZ,GAAG;AAAA,gBACH,iBAAiB,gBAAgB;AAAA,gBACjC,eAAe;AAAA,kBACb,SAAS,gBAAgB,YAAY,EAAE;AAAA,gBACzC;AAAA,cACF;AAAA,cACA,cAAc,eAAe;AAAA,YAC/B;AAAA,UACF;AAAA,QAAA;AAEF;AAAA,MACF,KAAK,kBAAkB;AACN,uBAAA;AAAA,UACb;AAAA,YACE;AAAA,YACA;AAAA,cACE;AAAA,gBACE,YAAY;AAAA,gBACZ,GAAG;AAAA,gBACH,UAAU,qBAAqB,gBAAgB,QAAQ;AAAA,gBACvD,aAAa,gBAAgB;AAAA,cAC/B;AAAA,cACA,cAAc,eAAe;AAAA,YAC/B;AAAA,UACF;AAAA,QAAA;AAEF;AAAA,MACF,KAAK,kBAAkB;AACN,uBAAA;AAAA,UACb;AAAA,YACE;AAAA,YACA;AAAA,cACE;AAAA,gBACE,YAAY;AAAA,gBACZ,GAAG;AAAA,gBACH,eAAe,gBAAgB;AAAA,cACjC;AAAA,cACA,cAAc,eAAe;AAAA,YAC/B;AAAA,UACF;AAAA,QAAA;AAEF;AAAA,IACJ;AAEO,WAAA;AAAA,EACT;AAGO,WAAS,UACd,SACwB;AACxB,UAAM,kBAAkB;AAClB,UAAA,oBAAoB,yBAAyB,eAAe;AAE3D,WAAA;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,GAAG;AAAA,UACL;AAAA,UACA,cAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAGO,WAAS,eACd,SACwB;AACxB,UAAM,kBAAkB;AAClB,UAAA,oBAAoB,yBAAyB,eAAe;AAE3D,WAAA;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,GAAG;AAAA,YACH,iBAAiB,gBAAgB;AAAA,YACjC,eAAe,SAAS,SAAS,gBAAgB,YAAY,EAAE,EAAE;AAAA,UACnE;AAAA,UACA,cAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAGO,WAAS,YACd,SACwB;AACxB,UAAM,kBAAkB;AAClB,UAAA,oBAAoB,yBAAyB,eAAe;AAE3D,WAAA;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,GAAG;AAAA,YACH,UAAU,qBAAqB,gBAAgB,QAAQ;AAAA,YACvD,aAAa,gBAAgB;AAAA,UAC/B;AAAA,UACA,cAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAGO,WAAS,WACd,SACwB;AACxB,UAAM,kBAAkB;AAClB,UAAA,oBAAoB,yBAAyB,eAAe;AAE3D,WAAA;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,GAAG;AAAA,YACH,eAAe,gBAAgB;AAAA,UACjC;AAAA,UACA,cAAc,eAAe;AAAA,QAC/B;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAEO,WAAS,UACd,SACwB;AACxB,UAAM,mBAAmB;AACnB,UAAA,YAAY,SAAS,iBAAiB,MAAM;AAClD,UAAM,cAAa,uCAAW,MAAK,GAAG,UAAU,EAAE,KAAK;AAChD,WAAA;AAAA,MACL;AAAA,QACE;AAAA,QACA;AAAA,UACE;AAAA,YACE,YAAY;AAAA,YACZ,YAAY,iBAAiB;AAAA,YAC7B;AAAA,YACA,aAAa,iBAAiB;AAAA,YAC9B,UAAU,qBAAqB,iBAAiB,QAAQ;AAAA,YACxD,aAAa;AAAA,cACX,SAAS,iBAAiB,UAAU,EAAE,MAAM;AAAA,YAC9C;AAAA,UACF;AAAA,UACA,cAAc,gBAAgB;AAAA,QAChC;AAAA,MACF;AAAA,IAAA;AAAA,EAEJ;AAEA,WAAS,cACP,SACwB;AACjB,WAAA;AAAA,MACL,QAAQ,QAAQ,uBAAuB,oBAAoB;AAAA,MAC3D,kBAAkB,QAAQ,kBAAkB;AAAA,MAC5C,sBACE,QAAQ,gBAAgB,QAAQ,wBAAwB;AAAA,MAE1D,sBAAsB,QAAQ;AAAA,MAC9B,wBAAwB,QAAQ;AAAA,MAChC,cAAc,QAAQ;AAAA,MACtB,YAAY,KAAK,IAAI;AAAA,MACrB,UAAU,UAAU;AAAA,MAEpB,kBAAkB,QAAQ;AAAA,MAC1B,UAAU,QAAQ;AAAA,MAClB,YAAY,QAAQ;AAAA,MACpB,iBAAiB,QAAQ;AAAA,MACzB,gBAAgB,QAAQ;AAAA,MAExB,SAAS,SAAS,SAAS,QAAQ,MAAM,EAAE,EAAE;AAAA,MAC7C,UAAU,QAAQ;AAAA,MAElB,eAAe,QAAQ,gBAAgB;AAAA,MACvC,eAAe,QAAQ,gBAAgB;AAAA,MACvC,yBAAyB,QAAQ,eAAe,SAAS;AAAA,MACzD,mBAAmB,QAAQ,oBAAoB;AAAA,MAC/C,mBAAmB,QAAQ,oBAAoB;AAAA,MAC/C,sBAAsB,QAAQ,qBAAqB;AAAA,IAAA;AAAA,EAEvD;AAEA,WAAS,qBAAqB,UAAgD;AAC5E,WAAO,WACH,SAAS,IAAI,CAAC,MAA+B;AAC3C,YAAM,UAAU;AAAA,QACd;AAAA,UACE,aAAa,EAAE;AAAA,UACf,UAAU,EAAE;AAAA,UACZ,KAAK,EAAE;AAAA,UACP,YAAY,SAAS,SAAS,EAAE,UAAU,EAAE,EAAE;AAAA,UAC9C,YAAY,SAAS,SAAS,EAAE,UAAU,EAAE,EAAE;AAAA,QAChD;AAAA,QACA;AAAA,UACE,aAAa,EAAE;AAAA,UACf,MAAM,EAAE;AAAA,UACR,SAAS,EAAE,eAAe;AAAA,UAC1B,OAAO,EAAE;AAAA,UACT,OAAO,WAAW,EAAE,KAAK;AAAA,UACzB,UAAU,OAAO,EAAE,YAAY,CAAC;AAAA,QAClC;AAAA,MAAA;AAEK,aAAA,KAAK,UAAU,OAAO;AAAA,IAC9B,CAAA,IACD,CAAA;AAAA,EACN;AC3PgB,WAAA,qBACd,OACA,YACe;AACT,UAAA,EAAC,WAAW,QAAW,IAAA;AAC7B,QAAI,CAAC,QAAQ;AAAgB,aAAO,QAAQ;AAE5C,QAAI,SAAiC,CAAA;AACrC,UAAM,kBAAkB;AAEpB,QAAA,cAAc,mBAAmB,WAAW;AAC9C,eAAS,OAAO;AAAA,QACdC,WAAgB,eAAe;AAAA,QAC/BC,SAAiB,eAAe;AAAA,MAAA;AAAA,IAClC,WACS,cAAc,mBAAmB,aAAa;AACvD,eAAS,OAAO;AAAA,QACdC,UAAkB,OAAkC;AAAA,MAAA;AAAA,IACtD,WACS,cAAc,mBAAmB,aAAa;AACvD,eAAS,OAAO;AAAA,QACdF,WAAgB,eAAe;AAAA,QAC/BG,UAAkB,eAAe;AAAA,MAAA;AAAA,IACnC,WACS,cAAc,mBAAmB,iBAAiB;AAC3D,eAAS,OAAO,OAAOC,eAAuB,eAAe,CAAC;AAAA,IAAA,WACrD,cAAc,mBAAmB,cAAc;AACxD,eAAS,OAAO,OAAOC,YAAoB,eAAe,CAAC;AAAA,IAAA,WAClD,cAAc,mBAAmB,aAAa;AACvD,eAAS,OAAO,OAAOC,WAAmB,eAAe,CAAC;AAAA,IAC5D;AAEA,QAAI,OAAO,QAAQ;AACV,aAAA,cAAc,QAAQ,UAAU;AAAA,IAAA,OAClC;AACL,aAAO,QAAQ;IACjB;AAAA,EACF;AAGA,WAAS,wBAAiC;AACxC,QAAI,OAAO,WAAW,eAAe,CAAC,OAAO;AAAkB,aAAA;AAC/D,WAAO,oBAAoB,KAAK,OAAO,UAAU,SAAS;AAAA,EAC5D;AAOA,QAAM,gBAAgB;AAEtB,WAAS,cACP,QACA,YACe;AACf,QAAI,yBAAyB;AAC3B,aAAO,QAAQ;IACjB;AAEA,UAAM,iBAAiB;AAAA,MACrB;AAAA,MACA,UAAU;AAAA,QACR,kBAAkB,KAAK,IAAI;AAAA,MAC7B;AAAA,IAAA;AAGE,QAAA;AACK,aAAA;AAAA,QACL,aACI,WAAW,UAAU,yDACrB;AAAA,QACJ;AAAA,UACE,QAAQ;AAAA,UACR,SAAS;AAAA,YACP,gBAAgB;AAAA,UAClB;AAAA,UACA,MAAM,KAAK,UAAU,cAAc;AAAA,QACrC;AAAA,MAAA,EAEC,KAAK,CAAC,aAAa;AACd,YAAA,CAAC,SAAS,IAAI;AACV,gBAAA,IAAI,MAAM,iBAAiB;AAAA,QACnC;AACA,eAAO,SAAS;MAAK,CACtB,EACA,KAAK,CAAC,SAAS;AACd,YAAI,MAAM;AAEF,gBAAA,eAAe,KAAK,MAAM,IAAI;AAEvB,uBAAA,OAAO,QAAQ,CAAC,kBAAoC;AAC3D,gBAAA,cAAc,WAAW,KAAK;AAChC,sBAAQ,MAAM,eAAe,QAAQ,cAAc,OAAO;AAAA,YAC5D;AAAA,UAAA,CACD;AAAA,QACH;AAAA,MAAA,CACD,EACA,MAAM,CAAC,QAAQ;AACN,gBAAA,MAAM,eAAe,GAAG;AAChC,YAAI,MAAkB;AACd,gBAAA,IAAI,MAAM,aAAa;AAAA,QAC/B;AAAA,MAAA,CACD;AAAA,aACI,OAAO;AAEd,aAAO,QAAQ;IACjB;AAAA,EACF;AAEO,WAAS,6BAAsD;AAChE,QAAA,cAAc,4BAA4B,GAAG;AACxC,aAAA;AAAA,QACL,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,KAAK;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,eAAe;AAAA,MAAA;AAAA,IAEnB;AAEA,UAAM,CAAC,gBAAgB,aAAa,IAAI,kBAAkB;AACpD,UAAA,UAAU,kBAAkB,SAAS,MAAM;AAE1C,WAAA;AAAA,MACL,aAAa,QAAQ,SAAS;AAAA,MAC9B,YAAY,QAAQ,SAAS;AAAA,MAC7B,KAAK,SAAS;AAAA,MACd,MAAM,SAAS;AAAA,MACf,QAAQ,SAAS;AAAA,MACjB,UAAU,SAAS;AAAA,MACnB,OAAO,SAAS;AAAA,MAChB,WAAW,UAAU;AAAA,MACrB;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AAEA,WAAS,gCAAoD;AACvD,QAAA;AACF,YAAM,qBACJ,2CAAa,sBACb,2CAAa,iBAAiB;AAE5B,UAAA,qBAAqB,kBAAkB,CAAC,GAAG;AAEvC,cAAA,UACJ,OAAO,YAAY;AAAA,UACjB;AAAA,QAAA,EACA,CAAC,EACH,MAAM;AACF,cAAA,UAAU,WAAW,QAAQ,SAAS;AAErC,eAAA;AAAA,MACT;AAAA,aACO,KAAK;AAAA,IAEd;AACO,WAAA;AAAA,EACT;AAEA,WAAS,0BAA8C;;AACjD,QAAA;AAEA,UAAA,2BACA,gDAAa,eAAb,mBAAyB,UAAS,UAClC,gDAAa,eAAb,mBAAyB,UAAS,QAClC;AAEM,cAAA,UAAU,YAAY,WAAW;AACvC,gBAAQ,SAAS;AAAA,UACf,KAAK,sBAAsB;AAClB,mBAAA;AACP;AAAA,UACF,KAAK,sBAAsB;AAClB,mBAAA;AACP;AAAA,UACF,KAAK,sBAAsB;AAClB,mBAAA;AACP;AAAA,UACF;AACE,mBAAO,YAAY,OAAO;AAAA,QAC9B;AAAA,MACF;AAAA,aACO,KAAK;AAAA,IAEd;AACO,WAAA;AAAA,EACT;AAEA,WAAS,oBAAsC;AACzC,QAAA;AACF,UAAI,SAAS;AACb,UAAI,UAAU;AACd,UAAI,CAAC,SAAS;AACZ,kBAAU,wBAAwB;AACzB,iBAAA;AAAA,MACX;AACA,UAAI,SAAS;AACJ,eAAA,CAAC,SAAS,MAAM;AAAA,MAAA,OAClB;AACE,eAAA,CAAC,WAAW,SAAS;AAAA,MAC9B;AAAA,aACO,KAAK;AAAA,IAEd;AACO,WAAA,CAAC,SAAS,OAAO;AAAA,EAC1B;ACnNO,WAAS,aACd,OACa;AACb,UAAM,EAAC,YAAY,YAAW,IAAI,QAAQ;AAC1C,UAAM,CAAC,SAAS,UAAU,IAAIhC,iBAAkB,KAAK;AAE/C,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACD,IAAA;AAEJO,YAAAA,UAAU,MAAM;AACd,UAAI,WAAW,aAAa;AAC1B,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IAAA,GACC,CAAC,SAAS,WAAW,CAAC;AAEnB,UAAA,eAAeC,QAAAA,YAAY,MAAM;AACrC,iBAAW,IAAI;AACJ,iBAAA;AAAA,QACT,OAAO;AAAA,UACL;AAAA,YACE,UAAU,YAAY;AAAA,YACtB,eAAe;AAAA,YACf;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MAAA,CACD;AAAA,IAAA,GACA,CAAC,YAAY,UAAU,WAAW,YAAY,aAAa,CAAC;AAG7D,WAAA,sBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QAEC,UAAU,WAAY,iBAA0C;AAAA,QAC/D,GAAG;AAAA,QACJ;AAAA,QACA,gBAAgB;AAAA,MAAA;AAAA,MAEf;AAAA,IAAA;AAAA,EAGP;ACzDO,WAAS,mBACd,OACa;AACb,UAAM,CAAC,mBAAmB,oBAAoB,IAAIR,iBAAS,KAAK;AAChE,UAAM,EAAC,QAAQ,YAAW,IAAI,QAAQ;AACtC,UAAM,EAAC,UAAU,GAAG,iBAAA,IAAoB;AAExCO,YAAAA,UAAU,MAAM;AACV,UAAA,qBAAqB,eAAe,WAAW,QAAQ;AACzD,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IACC,GAAA,CAAC,mBAAmB,QAAQ,WAAW,CAAC;AAGzC,WAAA,sBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ,UAAU,qBAAqB,iBAAiB;AAAA,QAChD,SAAS,MAAY,qBAAqB,IAAI;AAAA,MAAA;AAAA,MAE7C;AAAA,IAAA;AAAA,EAGP;AC8DO,WAAS,SAAS,OAA+B;AACtD,UAAM,EAAC,gBAAgB,gBAAe,IAAI,QAAQ;AAClD,UAAM,SAAS,gBAAgB,SAAS,GAAG,IACvC,gBAAgB,QAAQ,KAAK,GAAG,IAChC,GAAG,eAAe,IAAI,cAAc;AAExC,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAAA,IAEJ;AAEM,UAAA,SAAS,WAAW,MAAM,MAAM;AAEhC,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAII,gBAAQ,MAAM;AAChB,YAAM,UAAU;AAAA,QACd,OAAO;AAAA,QACP,UAAU,MAAM;AAAA,MAAA;AAGX,aAAA;AAAA,QACL,kBAAkB,iBAAiB,QAAQ,OAAO;AAAA,QAClD,eAAe,iBAAiB,QAAQ;AAAA,UACtC,GAAG;AAAA,UACH,iBAAiB;AAAA,QAAA,CAClB;AAAA,QACD,uBAAuB,iBAAiB,QAAQ;AAAA,UAC9C,GAAG;AAAA,UACH,iBAAiB;AAAA,QAAA,CAClB;AAAA,QACD,+BAA+B,iBAAiB,QAAQ;AAAA,UACtD,GAAG;AAAA,UACH,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,QAAA,CACxB;AAAA,QACD,0BAA0B,iBAAiB,MAAM;AAAA,QACjD,yCAAyC,iBAAiB,QAAQ;AAAA,UAChE,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,QAAA,CACxB;AAAA,MAAA;AAAA,IAEF,GAAA,CAAC,MAAM,cAAc,MAAM,CAAC;AAE/B,UAAM,iBAAiB,CAAC,SACtB,KAAK,SAAS;AAIhB,UAAM,iBAAiBA,QAAA;AAAA,MACrB,OAAO;AAAA,QACL,UAAU,MAAM;AAAA,QAChB,cAAc,MAAM,MAAM;AAAA,QAE1B,iBAAiB,MAAM,mBAAmB,OAAO,MAAM;AAAA,QAEvD,OAAO,MAAM,mBAAmB,cAAc,MAAM;AAAA,QAEpD,sBAAsB,MACpB,SAAS,MAAM,IACX,8BAAA,EAAgC,OAAO,MAAM,IAC7C,mBAAmB,OAAO,MAAM;AAAA,QAEtC,iCAAiC,MAC/B,SAAS,MAAM,IACX,wCAAA,EAA0C,OAAO,MAAM,IACvD,2BAA2B,OAAO,MAAM;AAAA,QAE9C,cAAc,MACZ;;AAAA,wCAAgB,cAAc,MAAM,EAAE,KAAK,cAAc,MAAzD,mBAA4D,UAC5D,MAAM;AAAA;AAAA;AAAA,QAER,gBAAgB,MACd;;AAAA,2CAAmB,cAAc,MAAM,EAAE,KAAK,cAAc,MAA5D,mBAA+D,UAC/D,MAAM;AAAA;AAAA;AAAA,QAER,sBAAsB,MAAA;;AACpB,8CAAwB,EAAA,cAAc,MAAM,EAAE,KAAK,cAAc,MAAjE,mBACI,UAAS;AAAA;AAAA;AAAA,QAEf,QAAQ,MACN,iBAAA,EACG,cAAc,MAAM,EACpB;AAAA,UAAO,CAAC,SACP,CAAC,WAAW,YAAY,SAAS,WAAW,SAAS,EAAE;AAAA,YACrD,KAAK;AAAA,UACP;AAAA,QAAA,EAED,IAAI,CAAC,SAAS,KAAK,KAAK,EACxB,KAAK,EAAE;AAAA,MAAA;AAAA,MAEd;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IAAA;AAKK,WAAAA,QAAA;AAAA,MACL,MACE,IAAI,MAAM,gBAA4C;AAAA;AAAA,QAEpD,KAAK,CAAC,QAAQ;;AAAQ,+BAAQ,IAAI,QAAQ,GAAG,MAAvB,mBAA0B,KAAK;AAAA;AAAA,MAAI,CAC1D;AAAA,MACH,CAAC,cAAc;AAAA,IAAA;AAAA,EAEnB;AAEA,QAAM,qCAAqB;AAE3B,WAAS,iBACP,QACA,SACyB;AACzB,UAAM,MAAM,KAAK,UAAU,CAAC,QAAQ,OAAO,CAAC;AAE5C,WAAO,WAA+B;AAChC,UAAA,YAAY,eAAe,IAAI,GAAG;AACtC,UAAI,CAAC,WAAW;AACd,oBAAY,IAAI,KAAK,aAAa,QAAQ,OAAO;AAClC,uBAAA,IAAI,KAAK,SAAS;AAAA,MACnC;AACO,aAAA;AAAA,IAAA;AAAA,EAEX;ACjLO,WAAS,MAA0D;AAAA,IACxE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,uBAAuB;AAAA,IACvB,GAAG;AAAA,EACL,GAA8C;AACxC,QAAA,CAAC,QAAQ,IAAI,GAAG;AAClB,YAAM,IAAI;AAAA,QACR;AAAA,MAAA;AAAA,IAEJ;AACM,UAAA,cAAc,SAAS,IAAI;AACjC,UAAM,UAAU,MAAM;AAEtB,QAAI,SAAS,YAAY;AAEzB,QAAI,mBAAmB,sBAAsB;AACvC,UAAA,mBAAmB,CAAC,sBAAsB;AAC5C,iBAAS,YAAY;AAAA,MAAA,WACZ,CAAC,mBAAmB,sBAAsB;AACnD,iBAAS,YAAY;AAAA,MAAA,OAChB;AAEL,iBAAS,YAAY;AAAA,MACvB;AAAA,IACF;AAEA,WACG,sBAAA,cAAA,SAAA,EAAS,GAAG,oBACV,QACA,eAAe,YAAY,iBAEvB,sBAAA,cAAA,MAAA,UAAA,MAAA,sBACA,YAAY,aACf,CAEJ;AAAA,EAEJ;AAGA,WAAS,QACP,YACuB;AACvB,WACE,OAAO,WAAW,WAAW,YAC7B,CAAC,CAAC,WAAW,UACb,OAAO,WAAW,iBAAiB,YACnC,CAAC,CAAC,WAAW;AAAA,EAEjB;AClGO,WAAS,SAAS,OAA0C;AAC3D,UAAA,EAAC,SAAQ;AACf,UAAM,EAAC,aAAa,SAAS,UAAU,GAAG,iBAAoB,IAAA;AAC1D,QAAA;AAEJ,QAAI,cAAc,SAAS;AACzB,eAAS,6BAAM;AAAA,IAAA,WACN,cAAc,YAAY;AACnC,eAAS,6BAAM;AAAA,IAAA,WACN,cAAc,OAAO;AAC9B,eAAS,6BAAM;AAAA,IAAA,WACN,cAAc,QAAQ;AAC/B,eAAS,6BAAM;AAAA,IACjB;AAEA,QAAI,UAAU,MAAM;AACX,aAAA;AAAA,IACT;AAEA,+CACG,OAAO,EAAA,GAAG,kBAAkB,MAAM,UAChC,QACH;AAAA,EAEJ;AC9Ba,QAAA,kBAAkBD,QAAAA,cAA0C,IAAI;AAKtE,WAAS,cAAmC;AAC3C,UAAA,UAAUE,mBAAW,eAAe;AAE1C,QAAI,WAAW,MAAM;AACb,YAAA,IAAI,MAAM,iDAAiD;AAAA,IACnE;AAEO,WAAA;AAAA,EACT;AAYO,WAAS,iBAAiB;AAAA,IAC/B;AAAA,IACA;AAAA,EACF,GAAuC;AACrC,+CACG,gBAAgB,UAAhB,EAAyB,OAAO,QAAO,QAAS;AAAA,EAErD;ACtBO,WAAS,iBACd,OACa;AACb,UAAM,WAAW;AACjB,UAAM,EAAC,IAAI,GAAG,iBAAA,IAAoB;AAE5B,UAAA,UAAU,KAAK,KAAK;AAE1B,WAAQ,sBAAA,cAAA,SAAA,EAAS,GAAG,oBAAmB,SAAS,QAAS;AAAA,EAC3D;ACXO,WAAS,6BAEd,OAA+D;AAC/D,UAAM,EAAC,QAAQ,aAAa,gBAAe,QAAQ;AACnD,UAAM,WAAW;AACjB,UAAM,EAAC,UAAU,QAAQ,SAAS,GAAG,iBAAoB,IAAA;AAEnD,UAAA,eAAeJ,QAAAA,YAAY,MAAM;AACrC,UAAI,WAAW,UAAU;AACvB,oBAAY,EAAC,qCAAU,OAAM,EAAE,CAAC;AAChC;AAAA,MACF;AAEM,YAAA,WACJ,WAAW,eACN,qCAAU,aAAY,KAAK,MAC3B,qCAAU,aAAY,KAAK;AAElC,UAAI,YAAY,GAAG;AACjB,oBAAY,EAAC,qCAAU,OAAM,EAAE,CAAC;AAChC;AAAA,MACF;AAEA,YAAM,aAAa;AAAA,QACjB,KAAI,qCAAU,OAAM;AAAA,QACpB;AAAA,QACA,aAAa,qCAAU,eACrB,CAAC;AAAA,MAAA;AAGO,kBAAA,CAAC,UAAU,CAAC;AAAA,IAAA,GACvB;AAAA,MACD;AAAA,MACA,qCAAU;AAAA,MACV,qCAAU;AAAA,MACV,qCAAU;AAAA,MACV;AAAA,MACA;AAAA,IAAA,CACD;AAGD,UAAM,eAAgB,iBAA0C;AAG9D,WAAA,sBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA,gBAAgB;AAAA,QAChB,UACE,OAAO,iBAAiB,cAAc,eAAe,WAAW;AAAA,MAAA;AAAA,MAGjE;AAAA,IAAA;AAAA,EAGP;ACtEO,QAAM,6BAA6B;AAAA;AAAA,IAExC,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,eAAe;AAAA,EACjB;AAOO,QAAM,kCAAkC;AAAA,IAC7C,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,iBAAiB;AAAA,IACjB,KAAK;AAAA,IACL,eAAe;AAAA,EACjB;ACDa,QAAA,gBAAgByB,QAAA;AAAA,IAC3B,CAAC,OAAO,QAAqB;AACrB,YAAA;AAAA,QACJ;AAAA,QACA;AAAA,QACA,KAAK,KAAK;AAAA,QACV,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,kBAAkB;AAAA,QAClB,UAAU;AAAA,QACV,GAAG;AAAA,MACD,IAAA;AAEA,UAAA,CAAC,KAAK,UAAU;AACZ,cAAA,IAAI,MAAM,mDAAmD;AAAA,MACrE;AAEA,UAAI,WAAmB,KAAK;AAE5B,UAAI,SAAS;AACX,cAAM,YAAY,IAAI,IAAI,KAAK,QAAQ;AACvC,mBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAE9C;AACG,cAAA,OAAO,UAAU,aAAa;AAChC;AAAA,UACF;AAEA,oBAAU,aAAa,IAAI,KAAK,MAAM,UAAU;AAAA,QAClD;AACA,mBAAW,UAAU;MACvB;AAGE,aAAA,sBAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACE,GAAG;AAAA,UACJ,IAAI,MAAM,KAAK;AAAA,UACf,OAAO,KAAK,OAAO,KAAK,MAAM;AAAA,UAC9B;AAAA,UACA;AAAA,UACA;AAAA,UACA,KAAK;AAAA,UACL;AAAA,UACA;AAAA,QAAA;AAAA,MAAA;AAAA,IAGN;AAAA,EACF;AC5DA,QAAM,yBAAyB;AAE/B,QAAM,mBAAmB;AAAA,IACvB,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,cAAc;AAAA,IACd,OAAO;AAAA,EACT;AAca,QAAA,2CACsC,uBAAA;AACzC,UAAA,0CAA0B;AAEzB,WAAA,SACL,8BACA,qBACS;;AACL,UAAA,6BAA6B,WAAW,GAAG;AACtC,eAAA;AAAA,MACT;AAEA,UAAI,CAAC,oBAAoB,IAAI,mBAAmB,GAAG;AAC3C,cAAA,6CAA6B;AAExB,mBAAA,eAAe,qBAAqB,mBAAmB,GAAG;AAEnE,iCAAuB,IAAI,YAAY,KAAK,sBAAsB,CAAC;AAGnE,mBAASpD,KAAI,GAAGA,KAAI,YAAY,QAAQA,MAAK;AACpB,mCAAA;AAAA,cACrB,YAAY,MAAM,GAAGA,KAAI,CAAC,EAAE,KAAK,sBAAsB;AAAA,YAAA;AAAA,UAE3D;AAAA,QACF;AAEoB,4BAAA,IAAI,qBAAqB,sBAAsB;AAAA,MACrE;AAEO,aAAA;AAAA,SACL,yBACG,IAAI,mBAAmB,MAD1B,mBAEI,IAAI,6BAA6B,KAAK,sBAAsB;AAAA,MAAC;AAAA,IACnE;AAAA,EAEJ,GAAG;AAYE,WAAS,qBACd,qBACqB;AACrB,QAAI,CAAC;AAAqB,aAAO;AAE7B,QAAA,oBAAoB,WAAW,KAAK,GAAG;AAClC,aAAA,UAAU,aAAa,mBAAmB,CAAC;AAAA,IACpD;AAEM,UAAA,IAAI,MAAM,mCAAmC;AAAA,EACrD;AAEA,QAAM,eAAwD,CAC5D,wBACG,oBAAoB,QAAQ,QAAQ,EAAE;AAwB3C,WAAS,UAAU,qBAAyC;AAC1D,UAAM,YAAY;AAClB,QAAIqD,SAAQ;AACR,QAAA;AACJ,UAAM,UAAsB,CAAA;AAC5B,UAAM,qBAA+B,CAAA;AACrC,QAAI,QAAQ;AACZ,QAAI,aAA4B;AAGhC,WAAQ,QAAQ,UAAU,KAAK,mBAAmB,GAAI;AAC9C,YAAA,YAAY,MAAM,CAAC;AACnB,YAAA,mBACJ,OAAO,SAAS,oBAAoB,MAAMA,QAAO,MAAM,KAAK,CAAC,KAAK;AAEpE,UAAI,eAAe,MAAM;AAIhB,eAAA,aAAa,kBAAkB,cAAc;AAClD,6BAAmB,KAAK,IAAI;AAC5B,kBAAQ,KAAK,CAAC,GAAG,kBAAkB,CAAC;AAAA,QACtC;AAEa,qBAAA;AAAA,MACf;AAEA,yBAAmB,KAAK,IAAI;AAExB,UAAA,cAAc,iBAAiB,OAAO;AAE3B,qBAAA;AAAA,MAAA,WACJ,cAAc,iBAAiB,QAAQ;AAEhD;AAAA,MAAA,OACK;AACL,YACE,cAAc,iBAAiB,gBAC9B,cAAc,iBAAiB,iBAC9B,oBAAoB,MAAM,QAAQ,CAAC,MACjC,iBAAiB,eACrB;AAEA,kBAAQ,KAAK,CAAC,GAAG,kBAAkB,CAAC;AAAA,QACtC;AACI,YAAA,cAAc,iBAAiB,eAAe;AAEhD,6BAAmB,IAAI;AACvB;AAAA,QACF;AAAA,MACF;AACA,MAAAA,SAAQ,UAAU;AAAA,IACpB;AAIM,UAAA,sBAAsB,oBAAoB,YAAY,GAAG;AAC3D,QAAA,cAAc,QAAQ,sBAAsB,GAAG;AACjD,YAAM,kBAAkB;AAAA,QACtB,oBAAoB,UAAU,sBAAsB,CAAC;AAAA,MAAA;AAEhD,aAAA,cAAc,iBAAiB,cAAc;AAClD,2BAAmB,KAAK,IAAI;AAC5B,gBAAQ,KAAK,CAAC,GAAG,kBAAkB,CAAC;AAAA,MACtC;AAAA,IACF;AAEO,WAAA;AAAA,EACT;ACjJA,WAAS,kBAAkB,SAAmD;AACrE,WAAA,QAAQ,IAAI,CAAC,WAA0B;AAC5C,aAAO,OAAO;AAAA,QACZ,CAAC;AAAA,QACD,IAAI,iCAAQ,gBACR,OAAO,aAAa,IAAI,CAAC,OAAOA,WAAU;AACxC,iBAAO,EAAC,CAAC,MAAM,IAAI,GAAGA,OAAK;AAAA,QAC5B,CAAA,IACD,CAAC;AAAA,MAAA;AAAA,IACP,CACD;AAAA,EACH;AAqBO,WAAS,iCACd,SACwB;AACxB,WAAO,OAAO;AAAA,MACZ,CAAC;AAAA,MACD,GAAG,QAAQ,IAAI,CAAC,QAAQ;AACtB,eAAO,EAAC,CAAC,IAAI,IAAI,GAAG,IAAI,MAAK;AAAA,MAAA,CAC9B;AAAA,IAAA;AAAA,EAEL;AAKA,WAAS,yCACP,SACQ;AACR,WAAO,KAAK,UAAU,iCAAiC,OAAO,CAAC;AAAA,EACjE;AA8BA,WAAS,iCACP,gBAGA,uBACQ;AACJ,QAAA,MAAM,QAAQ,cAAc,GAAG;AACjC,aAAO,KAAK;AAAA,QACV,eAAe,IAAI,CAAC,KAAKA,WAAU;AACjC,iBAAO,sBAAsBA,MAAK,EAAE,IAAI,KAAK;AAAA,QAAA,CAC9C;AAAA,MAAA;AAAA,IACH,OACK;AACL,aAAO,KAAK;AAAA,QACV,OAAO,KAAK,cAAc,EAAE,IAAI,CAAC,KAAKA,WAAU;AAC9C,iBAAO,sBAAsBA,MAAK,EAAE,eAAe,GAAG,CAAC;AAAA,QAAA,CACxD;AAAA,MAAA;AAAA,IAEL;AAAA,EACF;AA2BA,WAAS,YACP,UACA,uBACgC;AAChC,WAAO,OAAO;AAAA,MACZ,CAAC;AAAA,MACD,GAAG,SAAS,IAAI,CAAC,YAAY;AAC3B,cAAM,aAAa;AAAA,UACjB,QAAQ,mBAAmB,CAAC;AAAA,UAC5B;AAAA,QAAA;AAEF,eAAO,EAAC,CAAC,UAAU,GAAG;MAAO,CAC9B;AAAA,IAAA;AAAA,EAEL;AAMA,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,QAAM,uBAAuB;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,WAAS,uBAAuB,KAAsB;AAC5C,YAAA;AAAA,MACN,wCAAwC,GAAG;AAAA,IAAA;AAEtC,WAAA;AAAA,EACT;AAEgB,WAAA,kBACd,SACA,WAAW,OACF;;AACT,QAAI,aAAa;AACX,UAAA,cAAc,OAAO,KAAK,OAAO;AAGtC,KAAA,WACG,CAAC,GAAG,gBAAgB,GAAG,oBAAoB,IAC3C,gBACF,QAAQ,CAAC,QAAQ;AACjB,UAAI,CAAC,YAAY,SAAS,GAAG,GAAG;AAC9B,qBAAa,uBAAuB,GAAG;AAAA,MACzC;AAAA,IAAA,CACD;AAGD,QAAI,QAAQ,SAAS;AACb,YAAA,cAAc,mCAAS,QAAQ;AAEjC,UAAA,YAAY,EAAC,2CAAa,OAAM;AAClC,qBAAa,uBAAuB,cAAc;AAAA,MACpD;AAGA,WAAI,wCAAS,QAAQ,OAAjB,mBAAqB,cAAc;AACrC,cAAM,oBAAoB,QAAQ,QAAQ,CAAC,EAAE,aAAa,CAAC;AAGvD,YAAA,YAAY,EAAC,uDAAmB,OAAM;AACxC,uBAAa,uBAAuB,2BAA2B;AAAA,QACjE;AAGA,YAAI,uDAAmB,wBAAwB;AAEhC,uBAAA;AAAA,YACX,kBAAkB;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UAAA;AAAA,QACF,OACK;AACQ,uBAAA;AAAA,YACX;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA,OACK;AACL,qBAAa,uBAAuB,sBAAsB;AAAA,MAC5D;AAAA,IACF;AAGA,QAAI,QAAQ,iCAAiC;AAC9B,mBAAA;AAAA,QACX,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AAGA,QAAI,CAAC,CAAC,QAAQ,oBAAoB,QAAQ,iBAAiB,CAAC,GAAG;AAChD,mBAAA;AAAA,QACX,QAAQ,iBAAiB,CAAC;AAAA,QAC1B;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AAEQ,WAAA,aAAa,UAAU;EACjC;AAEA,WAAS,yBACP,SACA,KACA,wBACA,UACS;;AACT,QAAI,aAAa;AAEjB,QAAI,YAAY,GAAC,aAAQ,YAAR,mBAAiB,SAAQ;AAC3B,mBAAA,uBAAuB,GAAG,GAAG,iBAAiB;AAAA,IAC7D;AACA,QAAI,QAAQ,iBAAiB;AACrB,YAAA,sBAAsB,QAAQ,gBAAgB,CAAC;AACjD,UAAA,EAAC,2DAAqB,OAAM;AACjB,qBAAA,uBAAuB,GAAG,GAAG,uBAAuB;AAAA,MACnE;AACI,UAAA,EAAC,2DAAqB,QAAO;AAClB,qBAAA,uBAAuB,GAAG,GAAG,wBAAwB;AAAA,MACpE;AAAA,IAAA,OACK;AACQ,mBAAA,uBAAuB,GAAG,GAAG,kBAAkB;AAAA,IAC9D;AAEO,WAAA;AAAA,EACT;AAMO,WAAS,qCACd,SACkB;AAEZ,UAAA,iBAAiB,kBAAkB,OAAO;AAEhD,QAAI,CAAC,eAAe;AAAS,aAAO;AAEpC,UAAM,oBAAoD,CAAA;AAC3C,mBAAA,QAAQ,IAAI,CAAC,WAAW;;AAC9B,mBAAA,iBAAA,mBAAc,IAAI,CAAC,UAAU;AAClC,YAAI,MAAM,wBAAwB;AAChC,gBAAM,aAAa;AAAA,YACjB,MAAM,uBAAuB;AAAA,UAAA;AAEb,4BAAA,UAAU,IAAI,MAAM;AAAA,QACxC;AAAA,MAAA;AAAA,IACD,CACF;AAEc,mBAAA,iBAAiB,IAAI,CAAC,YAAY;AAC/C,YAAM,aAAa;AAAA,QACjB,QAAQ;AAAA,MAAA;AAEV,wBAAkB,UAAU,IAAI;AAAA,IAAA,CACjC;AAED,UAAM,kBAAkB,eAAe;AACvC,QAAI,iBAAiB;AACnB,YAAM,aAAa;AAAA,QACjB,gBAAgB;AAAA,MAAA;AAElB,wBAAkB,UAAU,IAAI;AAAA,IAClC;AAEO,WAAA,OAAO,OAAO,iBAAiB;AAAA,EACxC;AAMO,WAAS,kBACd,SACwB;AAElB,UAAA,iBAAiB,kBAAkB,SAAS,IAAI;AAEtD,QAAI,CAAC,eAAe;AAAS,aAAO;AAE9B,UAAA;AAAA,MACJ;AAAA,MACA,iCAAiC;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACN,IAAA;AAEE,UAAA,wBAAwB,kBAAkB,OAAO;AAGvD,UAAM,WAAW;AAAA,MACf,kBAAkB,CAAC,iBAAiB,GAAG,gBAAgB,IAAI;AAAA,MAC3D;AAAA,IAAA;AAIF,UAAM,kBAAkB;AAAA,MACtB,kBAAkB,gBAAgB,kBAAkB,CAAC;AAAA,IAAA;AAGvD,UAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,gBAAgB;AACnD,aAAA;AAAA,QACL,GAAG;AAAA,QACH,cAAc,OAAO,aAAa,IAAI,CAAC,UAAU;;AACzC,gBAAA,qBAAqB,EAAC,GAAG;AAGZ,6BAAA,OAAO,IAAI,IAAI,MAAM;AAGxC,gBAAM,YAAY;AAAA,YAChB,sBAAsB,CAAC;AAAA,YACvB;AAAA,UAAA;AAIF,gBAAM,aAAc,KAAK,MAAM,SAAS,EAAe;AAAA,YACrD;AAAA,YACA,cAAc;AAAA,UAAA;AAEhB,gBAAM,SAAS;AAAA,YACb;AAAA,YACA,2BAA2B;AAAA,UAAA;AAE7B,gBAAM,YAAY;AAAA,YAChB;AAAA,YACA,8BAA8B;AAAA,UAAA;AAIhC,gBAAM,UACJ,SAAS,SAAS,KAAK,MAAM;AAG/B,gBAAM,qBAAqB;AAAA,YACzB,QAAQ,mBAAmB,CAAC;AAAA,UAAA;AAExB,gBAAA,eAAe,IAAI,gBAAgB,kBAAkB;AACrD,gBAAA,UAAS,wCAAS,YAAT,mBAAkB;AAE1B,iBAAA;AAAA,YACL,GAAG;AAAA,YACH;AAAA,YACA;AAAA,YACA,iBAAiB,aAAa,SAAS;AAAA,YACvC,UAAU,gBAAgB,OAAO,IAAI,MAAM,MAAM;AAAA,YACjD;AAAA,YACA;AAAA,YACA,oBAAoB,WAAW;AAAA,UAAA;AAAA,QACjC,CACD;AAAA,MAAA;AAAA,IACH,CACD;AAEM,WAAA;AAAA,EACT;AC5Ua,QAAA,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CvB,QAAM,QAAQ3C,iBAAM;AAAA,IACzB,CACE;AAAA,MACE;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA,WAAW;AAAA,MACX,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA,QACd,WAAW;AAAA,QACX,eAAe;AAAA,QACf,eAAe;AAAA,QACf,kBAAkB;AAAA,MACpB;AAAA,MACA,QAAQ;AAAA,MACR,GAAG;AAAA,OAEL,QACG;AAIG,YAAA,iBAAiBA,iBAAM,QAAQ,MAAM;AAEzC,cAAM,aACJ,6BAAM,WAAS,6BAAM,UAAS,6BAAM,QAAQ;AAE9C,cAAM,cACJ,6BAAM,WAAS,6BAAM,UAAS,6BAAM,SAAS;AAExC,eAAA;AAAA,UACL,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,YAAY,QAAQ,WAAW,WAAW,UAAU,CAAC;AAAA,QAAA;AAAA,MACvD,GACC,CAAC,IAAI,CAAC;AAMH,YAAA,kBAAkBA,iBAAM,QAAQ,MAAM;AAC1C,cAAM,aAA8B,SAAS;AAC7C,cAAM,aAAa,kBAAkB,WAAW,SAAU,CAAA;AAC1D,cAAM,SAAS,GAAG,WAAW,MAAM,GAAG,WAAW,IAAI;AAE/C,cAAA,aAAa,WAAW,UAAa,WAAW;AACtD,cAAM,cAAc,aAChB,OACA,kBAAkB,OAAO,UAAU;AAEjC,cAAA,cAAc,cAChB,GAAG,YAAY,MAAM,GAAG,YAAY,IAAI,KACxC;AAEE,cAAA,UAAU,aAAa,SAAS;AAEhC,cAAA,OAA2B,QAAO,6BAAM;AAE1C,YAAoB,CAAC,MAAM;AACrB,kBAAA;AAAA,YACN;AAAA,aACA,qDAAkB,QAAO;AAAA,UAAA;AAAA,QAE7B;AAEA,cAAM,QAAe,6BAAM,YAAW,CAAC,MAAM,6BAAM,UAAU,OAAO;AAEpE,cAAM,eAAmC,cACrC,cACA,eAAe,aACf;AAAA,UACE,uBAAuB,eAAe,KAAK;AAAA,UAC3C,uBAAuB,eAAe,MAAM;AAAA,QAC9C,EAAE,KAAK,GAAG,IACV;AAEG,eAAA;AAAA,UACL,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,KAAK;AAAA,UACL,KAAK;AAAA,UACL,aAAa;AAAA,QAAA;AAAA,MACf,GACC;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,qDAAkB;AAAA,MAAA,CACnB;AAED,YAAM,EAAC,WAAW,eAAe,eAAe,qBAC9C;AAKI,YAAA,cAAcA,iBAAM,QAAQ,MAAM;AAC/B,eAAA;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QAAA;AAAA,SAED,CAAC,OAAO,WAAW,eAAe,aAAa,CAAC;AAE7C,YAAA,aAAa,aAAa,gBAAgB,KAAK;AAE7B,UAAA,CAAC,SAAS,CAAC,YAAY;AACrC,gBAAA;AAAA,UACN;AAAA,YACE;AAAA,YACA;AAAA,YACA,iBACE,QAAO,6BAAM,SAAO,qDAAkB,QAAO,SAC/C;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAAA;AAAA,MAEd;AAOA,UAAI,YAAY;AAEZ,eAAAA,iCAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA;AAAA,QAAA;AAAA,MACF,OAEG;AAEH,eAAAA,iCAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA;AAAA,QAAA;AAAA,MAGN;AAAA,IACF;AAAA,EACF;AAmBA,QAAM,kBAAkBA,iBAAM;AAAA,IAI5B,CACE;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,OAEF,QACG;AACG,YAAA,QAAQA,iBAAM,QAAQ,MAAM;AAC1B,cAAA,WAA+B,uBAAuB,KAAK;AAC3D,cAAA,YAAgC,uBAAuB,MAAM;AAQnE,cAAM,mBAAmB,cACrB,cACA,WAAW,gBAAgB,OAAO,gBAAgB,MAAM,IACxD,CAAC,UAAU,SAAS,EAAE,KAAK,GAAG,IAC9B,gBAAgB,cAChB,gBAAgB,cAChB;AAMJ,cAAM,aACJ,gBAAgB,SACZ,SACA,cAAc,aAAa,kBAAkB,MAAM;AAAA,UACjD,QAAO,6BAAM,UAAS;AAAA,UACtB,SAAQ,6BAAM,WAAU;AAAA,QAAA,CACzB;AAED,cAAA,cAAc,YAChB,YACA,oBAAoB,WACpB,YAAY,iBAAiB,gBAAgB,KAAK,KAClD;AAEJ,cAAM,SAAS,eAAe,gBAAgB,KAAK,YAAY,MAAM;AACrE,cAAM,MAAM,OAAO;AAAA,UACjB,KAAK,gBAAgB;AAAA,UACrB,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,MAAM,gBAAgB,WAAW,SAAS,SAAY;AAAA,QAAA,CACvD;AAEM,eAAA;AAAA,UACL,OAAO;AAAA,UACP,aAAa;AAAA,UACb,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,QAAA;AAAA,MACF,GACC;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAGC,aAAAA,iCAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA,KAAK,gBAAgB;AAAA,UACrB;AAAA,UACA,QAAQ,MAAM;AAAA,UACd;AAAA,UACA,KAAK,MAAM;AAAA,UACX,QAAQ,MAAM;AAAA,UACd,OAAO,MAAM;AAAA,UACb,OAAO;AAAA,YACL,aAAa,MAAM;AAAA,YACnB,GAAG,iBAAiB;AAAA,UACtB;AAAA,UACC,GAAG;AAAA,QAAA;AAAA,MAAA;AAAA,IAGV;AAAA,EACF;AAoBA,QAAM,aAAaA,iBAAM;AAAA,IACvB,CACE;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,OAEF,QACG;AACG,YAAA,QAAQA,iBAAM,QAAQ,MAAM;AAC1B,cAAA,aACJ,gBAAgB,SACZ,SACA,cAAc,aAAa,gBAAgB,aAAa,MAAM;AAAA,UAC5D,QAAO,6BAAM,UAAS;AAAA,UACtB,SAAQ,6BAAM,WAAU;AAAA,QAAA,CACzB;AAED,cAAA,oBACJ,gBAAgB,eAAe,mBAC3B,oBACC,iBAAiB,gBAAgB,WAAW,KAAK,KAClD;AAEN,cAAM,SAAS,eAAe,gBAAgB,KAAK,YAAY,MAAM;AAErE,cAAM,MAAM,OAAO;AAAA,UACjB,KAAK,gBAAgB;AAAA,UACrB,OAAO;AAAA,UACP,QAAQ;AAAA,UACR;AAAA,QAAA,CACD;AAEM,eAAA;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QAAA;AAAA,MACF,GACC,CAAC,MAAM,MAAM,aAAa,QAAQ,iBAAiB,gBAAgB,CAAC;AAGrE,aAAAA,iCAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA,KAAK,gBAAgB;AAAA,UACrB;AAAA,UACA,QAAQ,MAAM;AAAA,UACd;AAAA,UACA;AAAA,UACA,KAAK,MAAM;AAAA,UACX,QAAQ,MAAM;AAAA,UACd,OAAO;AAAA,UACN,GAAG;AAAA,UACJ,OAAO;AAAA,YACL,OAAO,gBAAgB;AAAA,YACvB,aAAa,gBAAgB;AAAA,YAC7B,GAAG,iBAAiB;AAAA,UACtB;AAAA,QAAA;AAAA,MAAA;AAAA,IAGN;AAAA,EACF;AAuBA,QAAM,qBAAqB;AACpB,WAAS,cAAc,EAAC,KAAK,OAAO,QAAQ,QAAqB;AACtE,QAAI,CAAC,KAAK;AACD,aAAA;AAAA,IACT;AAEA,UAAM,MAAM,IAAI,IAAI,KAAK,kBAAkB;AAE3C,QAAI,OAAO;AACL,UAAA,aAAa,OAAO,SAAS,KAAK,MAAM,KAAK,EAAE,UAAU;AAAA,IAC/D;AAEA,QAAI,QAAQ;AACN,UAAA,aAAa,OAAO,UAAU,KAAK,MAAM,MAAM,EAAE,UAAU;AAAA,IACjE;AAEA,QAAI,MAAM;AACJ,UAAA,aAAa,OAAO,QAAQ,IAAI;AAAA,IACtC;AACA,WAAO,IAAI,KAAK,QAAQ,oBAAoB,EAAE;AAAA,EAChD;AAQA,WAAS,WACP,QAAyB,QACzB,SAA0B,QACjB;AAEP,WAAA,kBAAkB,MAAM,SAAA,CAAU,EAAE,SACpC,kBAAkB,OAAO,UAAU,EAAE;AAAA,EAEzC;AAOA,WAAS,kBAAkB,OAA+C;AACxE,UAAM,OAAO,MAAM,QAAQ,WAAW,EAAE;AACxC,UAAM,SAAS,WAAW,MAAM,QAAQ,MAAM,EAAE,CAAC;AAE1C,WAAA;AAAA,MACL,MAAM,SAAS,KAAM,WAAW,SAAY,SAAS,OAAQ;AAAA,MAC7D;AAAA,IAAA;AAAA,EAEJ;AAOA,WAAS,uBAAuB,OAA6C;AAC3E,QAAI,UAAU,QAAW;AACvB;AAAA,IACF;AAEA,UAAM,EAAC,MAAM,WAAU,kBAAkB,MAAM,UAAU;AAEzD,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO,SAAS;AAAA,MAClB,KAAK;AACH,eAAO,SAAS;AAAA,MAClB,KAAK;AACI,eAAA;AAAA,MACT,KAAK;AACI,eAAA;AAAA,MACT;AACE;AAAA,IACJ;AAAA,EACF;AAOA,WAAS,aAAa,OAAiC;AACrD,UAAM,eAAe;AACrB,WAAO,OAAO,UAAU,YAAY,aAAa,KAAK,KAAK;AAAA,EAC7D;AASO,WAAS,eACd,KACA,YACA,SAAiB,eACT;AACR,QAAI,CAAC,KAAK;AACD,aAAA;AAAA,IACT;AAEA,SAAI,yCAAY,YAAW,KAAK,CAAC,YAAY;AACpC,aAAA;AAAA,IACT;AAEA,WAAO,WACJ;AAAA,MACC,CAAC,MAAMV,OACL,GAAG,OAAO;AAAA,QACR;AAAA,QACA,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,MAAM,KAAK;AAAA,MAAA,CACZ,CAAC,IAAI,WAAW,WAAW,IAAI,GAAGA,KAAI,CAAC,MAAM,GAAG,KAAK,SAAS,CAAC,GAAG;AAAA,IAAA,EAEtE,KAAK,IAAI;AAAA,EACd;AAUO,WAAS,oBACd,QAAyB,QACzB,WACA,eACA,eACU;AACV,UAAM,aAAa,MAAM;AAAA,MACvB,EAAC,QAAQ,UAAS;AAAA,MAClB,CAAC,GAAGA,OAAMA,KAAI,gBAAgB;AAAA,IAAA;AAGhC,UAAM,QAAQ,MAAM;AAAA,MAClB,EAAC,QAAQ,EAAC;AAAA,MACV,CAAC,GAAGA,QAAOA,KAAI,MAAM,uBAAuB,KAAK,KAAK;AAAA,IAAA;AAGjD,WAAA,aAAa,KAAK,IAAI,QAAQ;AAAA,EACvC;AASO,WAAS,iBAAiB,aAA0C;AACzE,QAAI,CAAC;AAAa;AAClB,UAAM,CAAC,OAAO,MAAM,IAAI,YAAY,MAAM,GAAG;AAC7C,WAAO,KAAK,OAAO,KAAK,IAAI,OAAO,MAAM;AAAA,EAC3C;AAGO,WAAS,cACd,aACA,aACA,OAAa,UACb,kBAOY;AACZ,QAAI,CAAC;AAAa;AACX,WAAA,YACJ,IAAI,CAAC,UAAkB;AACf,aAAA;AAAA,QACL;AAAA,QACA,QAAQ,cACJ,SAAS,iBAAiB,WAAW,KAAK,KAC1C;AAAA,QACJ;AAAA,MAAA;AAAA,IAEH,CAAA,EACA,OAAO,CAAC,EAAC,OAAO,aAAY;AAC3B,WAAI,qDAAkB,UAAS,QAAQ,iBAAiB,OAAO;AACtD,eAAA;AAAA,MACT;AAEA,WACE,qDAAkB,WAClB,UACA,SAAS,iBAAiB,QAC1B;AACO,eAAA;AAAA,MACT;AAEO,aAAA;AAAA,IAAA,CACR;AAAA,EAQL;ACrvBA,QAAM,iBAAmD,CAAA;AAQzC,WAAA,WACd,KACA,SACkB;AACZ,UAAA,iBAAiB,eAAe,GAAG;AAGzC,QAAI,gBAAgB;AACX,aAAA;AAAA,IACT;AAEA,UAAM,UAAU,IAAI,QAAiB,CAAC,SAAS,WAAW;AAClD,YAAA,SAAS,SAAS,cAAc,QAAQ;AAC9C,UAAI,mCAAS,QAAQ;AACnB,eAAO,OAAO;AAAA,MAAA,OACT;AACL,eAAO,OAAO;AAAA,MAChB;AACA,aAAO,MAAM;AACb,aAAO,SAAS,MAAY;AAC1B,gBAAQ,IAAI;AAAA,MAAA;AAEd,aAAO,UAAU,MAAY;AAC3B,eAAO,KAAK;AAAA,MAAA;AAEV,WAAA,mCAAS,QAAO,QAAQ;AACjB,iBAAA,KAAK,YAAY,MAAM;AAAA,MAAA,OAC3B;AACI,iBAAA,KAAK,YAAY,MAAM;AAAA,MAClC;AAEA,YAAM,aAAa,mCAAS;AAC5B,UAAI,YAAY;AACd,eAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,QAAQ;AACvC,iBAAO,aAAa,KAAK,WAAW,GAAG,CAAC;AAAA,QAAA,CACzC;AAAA,MACH;AAAA,IAAA,CACD;AAED,mBAAe,GAAG,IAAI;AAEf,WAAA;AAAA,EACT;AAOgB,WAAA,cACd,KACA,SACa;AACb,UAAM,CAAC,QAAQ,SAAS,IAAImB,iBAAsB,SAAS;AAE3DO,YAAA;AAAA,MACE,MAAM;AACJ,mBAAW,KAAK,OAAO,EACpB,KAAK,MAAM,UAAU,MAAM,CAAC,EAC5B,MAAM,MAAM,UAAU,OAAO,CAAC;AAAA,MACnC;AAAA;AAAA;AAAA,MAGA,CAAC,GAAG;AAAA,IAAA;AAGC,WAAA;AAAA,EACT;AC1Da,QAAA,QAAQ0B,QAAA,WAGnB,CAAC,OAAO,QAAqB;;AACvB,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA,KAAK,KAAK;AAAA,MACV,cAAc;AAAA,MACd,WAAW;AAAA,MACX,cAAc,CAAC;AAAA,MACf,GAAG;AAAA,IACD,IAAA;AAEJ,UAAM,YAAY,cAAc;AAAA,MAC9B,OAAK,UAAK,iBAAL,mBAAmB,QAAO;AAAA,MAC/B,GAAG;AAAA,IAAA,CACJ;AAEG,QAAA,CAAC,KAAK,SAAS;AACX,YAAA,IAAI,MAAM,0CAA0C;AAAA,IAC5D;AAEA;AAAA;AAAA,MAEE,sBAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACE,GAAG;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR;AAAA,QAAA;AAAA,QAEC,KAAK,QAAQ,IAAI,CAAC,WAAW;AAC5B,cAAI,GAAE,iCAAQ,SAAO,iCAAQ,YAAW;AAChC,kBAAA,IAAI,MAAM,mDAAmD;AAAA,UACrE;AAEE,iBAAA,sBAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACE,GAAG;AAAA,cACJ,KAAK,OAAO;AAAA,cACZ,KAAK,OAAO;AAAA,cACZ,MAAM,OAAO;AAAA,YAAA;AAAA,UAAA;AAAA,QACf,CAEH;AAAA,MACH;AAAA;AAAA,EAEJ,CAAC;ACJM,WAAS,YAAY,OAA6C;;AACjE,UAAA,CAAC,aAAa,cAAc,IAAIjC,QAAA;AAAA,MACpC;AAAA,IAAA;AAEI,UAAA,cAAcQ,oBAAY,CAAC,SAAsB;AACrD,qBAAe,IAAI;AAAA,IACrB,GAAG,CAAE,CAAA;AACL,UAAM,EAAC,MAAM,UAAU,WAAW,GAAG,iBAAoB,IAAA;AAEzD,UAAM,0BAA0B;AAAA,MAC9B;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,MACV;AAAA,IAAA;AAGFD,YAAAA,UAAU,MAAM;AACd,YAAM,wBAAwB;AAAA,QAC5B,OAAO,iBAAiB;AAAA,QACxB,MAAM,iBAAiB;AAAA,QACvB,SAAS,iBAAiB;AAAA,QAC1B,oBAAoB,iBAAiB;AAAA,QACrC,UAAU,iBAAiB;AAAA,QAC3B,aAAa,iBAAiB;AAAA,QAC9B,eAAe,iBAAiB;AAAA,QAChC,4BAA4B,iBAAiB;AAAA,QAC7C,iBAAiB,iBAAiB;AAAA,QAClC,sBAAsB,iBAAiB;AAAA,QACvC,MAAM,iBAAiB;AAAA,QACvB,OAAO,iBAAiB;AAAA,QACxB,qBAAqB,iBAAiB;AAAA,MAAA;AAGxC,UAAI,CAAC,aAAa;AAChB;AAAA,MACF;AACO,aAAA,QAAQ,qBAAqB,EAAE;AAAA,QACpC,CAAC,CAAC,WAAW,YAAY,MAAM;AAC7B,cAAI,cAAc;AACJ,wBAAA,iBAAiB,WAAW,YAAY;AAAA,UACtD;AAAA,QACF;AAAA,MAAA;AAGF,aAAO,MAAM;AACX,YAAI,eAAe,MAAM;AACvB;AAAA,QACF;AACO,eAAA,QAAQ,qBAAqB,EAAE;AAAA,UACpC,CAAC,CAAC,WAAW,YAAY,MAAM;AAC7B,gBAAI,cAAc;AACJ,0BAAA,oBAAoB,WAAW,YAAY;AAAA,YACzD;AAAA,UACF;AAAA,QAAA;AAAA,MACF;AAAA,IACF,GACC;AAAA,MACD;AAAA,MACA,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,IAAA,CAClB;AAED,QAAI,4BAA4B,QAAQ;AAE/B,aAAA;AAAA,IACT;AAEA,QAAI,GAAC,gBAAK,YAAL,mBAAe,OAAf,mBAAmB,MAAK;AAC3B,YAAM,kBAAkB;AACF;AACd,cAAA,IAAI,MAAM,eAAe;AAAA,MAIjC;AAAA,IACF;AAEwB,QAAA,CAAC,KAAK,KAAK;AACzB,cAAA;AAAA,QACN;AAAA,MAAA;AAAA,IAEJ;AAGE,WAAA,sBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK;AAAA,QACJ,GAAG;AAAA,QAGJ,OAAO;AAAA,QACP,IAAI,iBAAiB,MAAM,KAAK;AAAA,QAChC,KAAK,KAAK,QAAQ,CAAC,EAAE;AAAA,QACrB,KAAK,KAAK,OAAO;AAAA,QACjB,mBAAiB,iBAAiB,kBAAkB;AAAA,QACpD,SAAS,iBAAiB,YAAU,UAAK,iBAAL,mBAAmB,SAAQ;AAAA,QAC/D,UAAU,iBAAiB,YAAY;AAAA,QACvC,SAAS,iBAAiB;AAAA,QAC1B,QAAQ,iBAAiB;AAAA,QACzB,IAAI,iBAAiB;AAAA,QACrB,YAAU,iBAAiB;AAAA,QAC3B,YAAU,iBAAiB;AAAA,QAG3B,gBAAc,iBAAiB;AAAA,QAC/B,WAAS,iBAAiB;AAAA,QAC1B,gBAAc,iBAAiB;AAAA,QAC/B,gBAAc,iBAAiB;AAAA,QAC/B,qBAAmB,iBAAiB;AAAA,QACpC,eAAa,iBAAiB;AAAA,QAC9B,qBAAmB,iBAAiB;AAAA,QAGpC,uBAAqB,iBAAiB;AAAA,QACtC,sBAAoB,iBAAiB;AAAA,QACrC,sBAAoB,iBAAiB;AAAA,QACrC,4BAA0B,iBAAiB;AAAA,QAC3C,gCAA8B,iBAAiB;AAAA,QAC/C,gBAAc,iBAAiB;AAAA,QAC/B,iBAAe,iBAAiB;AAAA,QAChC,iBAAe,iBAAiB;AAAA,QAChC,oBAAkB,iBAAiB;AAAA,QACnC,oBAAkB,iBAAiB;AAAA,QACnC,qBAAmB,iBAAiB;AAAA,QACpC,qBAAmB,iBAAiB;AAAA,QACpC,QAAQ,iBAAiB;AAAA,QACzB,uBAAqB,iBAAiB,sBAAsB;AAAA,QAC5D,gBAAc,iBAAiB;AAAA,QAC/B,qBAAmB,iBAAiB;AAAA,QACpC,UAAU,iBAAiB;AAAA,QAC3B,oBAAkB,iBAAiB,mBAAmB;AAAA,QACtD,mBAAiB,iBAAiB,kBAAkB;AAAA,QACpD,kBAAgB,iBAAiB;AAAA,QACjC,gCAA8B,iBAAiB;AAAA,QAC/C,gBAAc,iBAAiB;AAAA,QAC/B,aAAa,iBAAiB;AAAA,QAC9B,OAAO,iBAAiB;AAAA,MAAA;AAAA,MAEvB;AAAA,IAAA;AAAA,EAGP;ACjLO,WAAS,UAAU;AAAA,IACxB;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,GAAuC;AACrC,YAAQ,KAAK,YAAY;AAAA,MACvB,KAAK,cAAc;AACb,YAAA,CAAC,KAAK,OAAO;AACf,gBAAM,cAAc;AACE;AACd,kBAAA,IAAI,MAAM,WAAW;AAAA,UAI7B;AAAA,QACF;AAGE,eAAA,sBAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACE,GAAG;AAAA,YACH,GAAG,6CAAc;AAAA,YAClB,MAAM,KAAK;AAAA,UAAA;AAAA,QAAA;AAAA,MAGjB;AAAA,MACA,KAAK,SAAS;mDAET,OAAO,EAAA,GAAG,kBAAmB,GAAG,6CAAc,OAAO,KAAA,CAAY;AAAA,MAEtE;AAAA,MACA,KAAK,iBAAiB;AAElB,eAAA,sBAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACE,GAAG;AAAA,YACH,GAAG,6CAAc;AAAA,YAClB;AAAA,UAAA;AAAA,QAAA;AAAA,MAGN;AAAA,MACA,KAAK,WAAW;AACd;AAAA;AAAA,UAEE,sBAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACE,GAAG;AAAA,cACH,GAAG,6CAAc;AAAA,cAClB;AAAA,YAAA;AAAA,UACF;AAAA;AAAA,MAEJ;AAAA,MACA,SAAS;AACP,cAAM,yBAAyB;AACT;AACd,gBAAA,IAAI,MAAM,sBAAsB;AAAA,QAIxC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AC1EO,WAAS,eACd,WACe;AACX,QAAA,CAAC,UAAU,MAAM;AACnB,YAAM,cAAc;AACE;AACd,cAAA,IAAI,MAAM,WAAW;AAAA,MAO7B;AAAA,IACF;AAEA,YAAQ,UAAU,MAAM;AAAA,MACtB,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,UAAU,UAAU;AAAA,QAAA;AAAA,MAGrC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,UAAU;AAAA,QAAA;AAAA,MAG3B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,UAAU;AAAA,QAAA;AAAA,MAI3B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,eAAe;AAClB,YAAI,cAAc;AACd,YAAA;AACY,wBAAA,UAAU,UAAU,SAAS,EAAE;AAAA,iBACtC,KAAK;AACZ,gBAAM,aAAa;AACG;AACd,kBAAA,IAAI,MAAM,UAAU;AAAA,UAG5B;AAAA,QAEF;AACO,eAAA;AAAA,UACL,GAAG;AAAA,UACH;AAAA,QAAA;AAAA,MAEJ;AAAA,MAEA,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,IAAI,KAAK,UAAU,SAAS,EAAE;AAAA,QAAA;AAAA,MAG/C,KAAK;AAAA,MACL,KAAK,kBAAkB;AACrB,cAAM,iBAAiB,WAAU,uCAAW,UAAS,EAAE;AAChD,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,eAAe,IAAI,CAAC,eAAe,IAAI,KAAK,UAAU,CAAC;AAAA,QAAA;AAAA,MAExE;AAAA,MAEA,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,OAAO,UAAU,KAAK;AAAA,QAAA;AAAA,MAGvC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACI,eAAA;AAAA,UACL,GAAG;AAAA,UACH,aAAa,kBAAkB,UAAU,cAAc,MAAS;AAAA,QAAA;AAAA,MAGpE,SAAS;AACD,cAAA,oBAAoB,sFAAsF,UAAU,IAAI;AACxG;AACd,gBAAA,IAAI,MAAM,iBAAiB;AAAA,QASnC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAKO,WAAS,UAAU,MAAuB;AAC/C,QAAI,OAAO,IAAI,EAAE,SAAS,WAAW,GAAG;AACtC,aAAO,KAAK,MAAM,MAAM,CAAC,GAAGpB,OAAM;AAChC,YAAI,MAAM;AAAoB,iBAAAA;AAAA,MAAA,CAC/B;AAAA,IACH;AACO,WAAA,KAAK,MAAM,IAAI;AAAA,EACxB;ACvIO,WAAS,aAGd,OAEoB;;AACd,UAAA;AAAA,MACJ,YAAY;AAAA,MACZ;AAAA,MACA,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,GAAG;AAAA,IACD,IAAA;AAEJ,QAAI,WAAW,MAAM;AACb,YAAA,IAAI,MAAM,uDAAuD;AAAA,IACzE;AAEI,QAAA;AACA,QAAA;AAEJ,UAAM,UAAU,YACZ,mBAAkB,mCAAS,aAAY,CAAE,CAAA,EAAE;AAAA,MACzC,CAACgD,cAAYA,qCAAS,QAAO;AAAA,IAAA,KAC1B,OACL;AAEE,UAAA,uBACJ,cAAc,QAAQ,oBAAoB;AAE5C,QAAI,cAAc,aAAa;AAC7B,UAAI,aAAa,SAAS;AACxB,gBAAQ,QAAQ;AAAA,MAAA,OACX;AACG,iBAAA,wCAAS,wBAAT,mBAA+B;AAAA,MACzC;AAEI,UAAA;AACJ,UAAI,aAAa,SAAS;AACxB,wBAAgB,aAAW,aAAQ,UAAR,mBAAe,WAAU,GAAG;AAAA,MAAA,OAClD;AACW,wBAAA;AAAA,YACd,8CAAS,eAAT,mBAAsB,0BAAtB,mBAA6C,WAAU;AAAA,QAAA;AAAA,MAE3D;AAEA,YAAM,yBAAyB,YAAW,+BAAO,WAAU,GAAG;AAE9D,UAAI,iBAAiB,wBAAwB;AACpC,eAAA;AAAA,MACT;AAAA,IAAA,OACK;AACL,UAAI,aAAa,SAAS;AACxB,gBAAQ,QAAQ;AAChB,YAAI,cAAc,QAAQ;AACxB,kBAAQ,QAAQ;AAChB,wBAAc,QAAQ;AAAA,QACxB;AAAA,MAAA,WACS,cAAc,OAAO;AAC9B,iBAAQ,aAAQ,eAAR,mBAAoB;AAAA,MAAA,OACvB;AACL,iBAAQ,aAAQ,eAAR,mBAAoB;AAAA,MAC9B;AAAA,IACF;AAEA,QAAI,CAAC,OAAO;AACH,aAAA;AAAA,IACT;AAEA,QAAI,aAAa;AACf,iDACG,OAAO,EAAA,GAAG,kBAAkB,MAAM,OAAO,YAA0B,CAAA;AAAA,IAExE;AAEA,WAAQ,sBAAA,cAAA,OAAA,EAAO,GAAG,kBAAkB,MAAM,MAAO,CAAA;AAAA,EACnD;ACjFO,QAAM,qBAAqB;AAAA,IAChC,MAAM;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,IACX,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,EACf;AAEA,WAAS,KAAK;AAAA,IACZ;AAAA,EACF,GAKc;AACL,WAAA,sBAAA,cAAC,OAAK,MAAA,KAAK,QAAS;AAAA,EAC7B;AAEA,WAAS,QAAQ;AAAA,IACf;AAAA,EACF,GAMc;AACL,WAAAC,sBAAc,IAAI,KAAK,SAAS,GAAG,IAAI,MAAM,KAAK,QAAQ;AAAA,EACnE;AAEA,WAAS,UAAU;AAAA,IACjB;AAAA,EACF,GAKc;AACL,WAAA,sBAAA,cAAC,KAAG,MAAA,KAAK,QAAS;AAAA,EAC3B;AAEA,WAAS,KAAK;AAAA,IACZ;AAAA,EACF,GAOc;AACR,QAAA,KAAK,QAAQ,KAAK;AACpB,iDACG,MACC,MAAA,sBAAA,cAAC,UAAQ,MAAA,KAAK,KAAM,CACtB;AAGJ,QAAI,KAAK;AAAa,aAAA,sBAAA,cAAC,UAAQ,MAAA,KAAK,KAAM;AAC1C,QAAI,KAAK;AAAe,aAAA,sBAAA,cAAC,MAAI,MAAA,KAAK,KAAM;AAExC,WAAO,KAAK;AAAA,EACd;AAEA,WAAS,aAAa;AAAA,IACpB;AAAA,EACF,GAQc;AACZ,WACG,sBAAA,cAAA,KAAA,EAAE,MAAM,KAAK,KAAK,OAAO,KAAK,OAAO,QAAQ,KAAK,OAChD,GAAA,KAAK,QACR;AAAA,EAEJ;AAEA,WAAS,KAAK;AAAA,IACZ;AAAA,EACF,GAMc;AACZ,UAAMC,QAAO,KAAK,aAAa,cAAc,OAAO;AACpD,WAAQA,sBAAAA,cAAAA,OAAA,MAAM,KAAK,QAAS;AAAA,EAC9B;AAEA,WAAS,SAAS;AAAA,IAChB;AAAA,EACF,GAKc;AACL,WAAA,sBAAA,cAAC,MAAI,MAAA,KAAK,QAAS;AAAA,EAC5B;AC5GO,WAAS,SAA6D;AAAA,IAC3E;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,GAAiD;AAC3C,QAAA;AACF,YAAM,UAAU,MAAM;AACtB,YAAM,aAAa1B,QAAA;AAAA,QACjB,MAAM,KAAK,MAAM,IAAI;AAAA,QACrB,CAAC,IAAI;AAAA,MAAA;AAIL,aAAA,sBAAA,cAAC,SAAS,EAAA,GAAG,iBACV,GAAA,QACG,iBAAiB,UAAU,IAC3B,yBAAyB,YAAY,UAAU,CACrD;AAAA,aAEKhC,IAAG;AACV,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,UACE,OAAOA;AAAA,QACT;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAUA,WAAS,yBACP,aAA+B,CAAA,GAC/B,MACAuD,SAAQ,GACG;AACP,QAAA;AACJ,QAAI,cAAc,MAAM;AACtB,iBAAW,KAAK,SAAS;AAAA,QAAI,CAAC,OAAO,eACnC,yBAAyB,YAAY,OAAO,UAAU;AAAA,MAAA;AAAA,IAE1D;AAEM,UAAA,YACJ,WAAW,KAAK,SAAS,cAAc,aAAa,KAAK,IAAI,KAC7D,mBAAmB,KAAK,IAAI;AAE9B,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN,OAAO,KAAK;AAAA,cACZ;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ,KAAK,QAAQ;AACL,cAAA,YAAY,KAAK,SAAS,IAC7B,MAAM,IAAI,EACV,QAAQ,CAAC,OAAO,aAAa;AAC5B,gBAAM,MAAM,GAAGA,MAAK,IAAI,KAAK,IAAI,QAAQ;AACzC,gBAAM,cAAcE,QAAA;AAAA,YAClB;AAAA,YACA;AAAA,cACE;AAAA,cACA,MAAM;AAAA,gBACJ,MAAM;AAAA,gBACN,QAAQ,KAAK;AAAA,gBACb,MAAM,KAAK;AAAA,gBACX;AAAA,cACF;AAAA,YACF;AAAA,UAAA;AAIF,iBAAO,aAAa,IAChB,cACA,CAACA,QAAAA,cAAc,MAAM,EAAC,KAAK,GAAG,GAAG,MAAK,CAAC,GAAG,WAAW;AAAA,QAAA,CAC1D;AAEH,eAAO,SAAS,SAAS,IACrBA,QAAAA,cAAcE,QAAAA,UAAU,EAAC,KAAKJ,OAAQ,GAAA,QAAQ,IAC9C,SAAS,CAAC;AAAA,MAChB;AAAA,MACA,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN,KAAK,KAAK;AAAA,cACV,OAAO,KAAK;AAAA,cACZ,QAAQ,KAAK;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN,UAAU,KAAK;AAAA,cACf;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,MAEJ,KAAK;AACI,eAAAE,QAAA;AAAA,UACL;AAAA,UACA;AAAA,YACE,KAAKF;AAAA,YACL,MAAM;AAAA,cACJ,MAAM;AAAA,cACN;AAAA,YACF;AAAA,UACF;AAAA,QAAA;AAAA,IAEN;AAAA,EACF;AAEA,WAAS,iBACP,MACA,SAAmB,IACX;AACR,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AACH,aAAK,SAAS,QAAQ,CAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC;AAChE;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,aAAK,SAAS,QAAQ,CAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC;AAChE,eAAO,KAAK,GAAG;AACf;AAAA,MACF,KAAK;AACI,eAAA,KAAK,KAAK,SAAS,EAAE;AAC5B;AAAA,MACF,KAAK;AACH,aAAK,SAAS,QAAQ,CAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC;AAChE;AAAA,MACF,KAAK;AACE,aAAA,SAAS,QAAQ,CAAC,SAAS;AAC9B,cAAI,KAAK,UAAU;AACjB,iBAAK,SAAS,QAAQ,CAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC;AAAA,UAClE;AACA,iBAAO,KAAK,GAAG;AAAA,QAAA,CAChB;AACD;AAAA,MACF;AACE,cAAM,IAAI,MAAM,4BAA4B,KAAK,IAAI,EAAE;AAAA,IAC3D;AAEA,WAAO,OAAO,KAAK,EAAE,EAAE,KAAK;AAAA,EAC9B;ACvJA,QAAM,aACJ;AAEF,WAAS,UACP,SACqE;AAC9D,WAAA,YAAY,cAAc,YAAY;AAAA,EAC/C;AAOO,WAAS,cAAc;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa;AAAA,EACf,GAAoC;AAClC,UAAM,OAAO;AACP,UAAA,cAAc,iBAAgB,6BAAM;AACpC,UAAA,sBAAsB,cAAc,UAAU;AAEpD,QAAI,MAAgB,CAAA;AAChB,QAAA;AAEJ,QAAI,CAAC,eAAe,gBAAgB,sBAAsB,aAAa;AAC/D,YAAA,IAAI,MAAM,8BAA8B;AAAA,IAChD;AAEA,QAAI,cAAc,yBAAyB;AACnC,YAAA,IAAI,MAAM,uBAAuB;AAAA,IACzC;AAEI,QAAA,CAAC,cAAc,CAAC,yBAAyB;AACrC,YAAA,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEA,QAAI,SAAS;AACP,UAAA,UAAU,OAAO,GAAG;AACD,6BAAA;AAAA,MAAA,OAChB;AACC,cAAA,IAAI,MAAM,0BAA0B;AAAA,MAC5C;AAAA,IACF;AAEA,QAAI,YAAY;AACd,YAAM,WAAW,OAAiB,CAAC,MAAM,SAAS;AAC1C,cAAA,SAAS,SAAS,IAAI,EAAE;AAC9B,YAAI,QAAQ;AACV,eAAK,KAAK,MAAM;AAAA,QAClB;AACO,eAAA;AAAA,MACT,GAAG,CAAE,CAAA;AAAA,eACI,yBAAyB;AAClC,YAAM,wBAAwB,OAAiB,CAAC,MAAM,SAAS;AAC7D,cAAM,SAAS,SAAS,6BAAM,EAAE,EAAE;AAClC,YAAI,QAAQ;AACV,eAAK,KAAK,GAAG,MAAM,KAAI,6BAAM,aAAY,CAAC,EAAE;AAAA,QAC9C;AACO,eAAA;AAAA,MACT,GAAG,CAAE,CAAA;AAAA,IAAA,OACA;AACC,YAAA,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEI,QAAA,IAAI,WAAW,GAAG;AACd,YAAA,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEA,UAAM,QAAQ,QACT;AAAA,MACC,2BAA2B;AAAA,IAE7B,IAAA;AAEJ,WACG,sBAAA,cAAA,OAAA,EAAI,WAAsB,MAAA,GACxB,wBAAwB,UACvB,sBAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACE,GAAI,qBAAqB,EAAC,SAAS,uBAAsB,CAAC;AAAA,QAC3D,aAAW;AAAA,QACX,UAAU,IAAI,KAAK,GAAG;AAAA,MAAA;AAAA,IAAA,CAG5B;AAAA,EAEJ;AAEO,QAAM,iCACX;AACK,QAAM,2BAA2B;AACjC,QAAM,2BAA2B;AACjC,QAAM,0BAA0B;AAChC,QAAM,6BAA6B;ACtJnC,WAAS,4BACd,iBACM;AACN3B,YAAAA,UAAU,MAAM;AACd,YAAM,sBAAsB,IAAI;AAAA,QAC9B,iCAAiC,mBAAmB,EAAE;AAAA,MAAA;AAExD,YAAM,sBAAsB,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAKhE,YAAA,uBAAuB,IAAI,gBAAgB;AAAA;AAAA;AAAA,QAG/C,GAAG,OAAO,YAAY,mBAAmB;AAAA;AAAA;AAAA,QAGzC,GAAG,OAAO,YAAY,mBAAmB;AAAA,MAAA,CAC1C;AAEG,UAAA,qBAAqB,OAAO,GAAG;AACjC,eAAO,QAAQ;AAAA,UACb,CAAC;AAAA,UACD;AAAA,UACA,GAAG,OAAO,SAAS,QAAQ,IAAI,qBAAqB,UAAU;AAAA,QAAA;AAAA,MAElE;AAAA,OAEC,CAAC,KAAK,UAAU,eAAe,CAAC,CAAC;AAE7B,WAAA;AAAA,EACT;AC/BA,QAAM,iBAAiB,KAAK,KAAK,KAAK,MAAM;AAC5C,QAAM,kBAAkB,KAAK;AAmBtB,WAAS,kBAAkB,SAA0C;AACpE,UAAA;AAAA,MACJ,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,iBAAiB;AAAA,IAAA,IACf,WAAW,CAAA;AACfA,YAAAA,UAAU,MAAM;AACR,YAAA,UAAU,kBAAkB,SAAS,MAAM;AAUjD,UAAI,gBAAgB,UAAU,OAAO,SAAS,SAAS;AAEvD,UAAI,gBAAgB;AAClB,cAAM,sBAAsB,eAAe,MAAM,GAAG,EAAE,QAAQ;AAC9D,cAAM,qBAAqB,cAAc,MAAM,GAAG,EAAE,QAAQ;AAC5D,cAAM,kBAAiC,CAAA;AACnB,4BAAA,QAAQ,CAAC,MAAM2B,WAAU;AACvC,cAAA,SAAS,mBAAmBA,MAAK,GAAG;AACtC,4BAAgB,KAAK,IAAI;AAAA,UAC3B;AAAA,QAAA,CACD;AAED,wBAAgB,gBAAgB,QAAU,EAAA,KAAK,GAAG;AAAA,MACpD;AAGI,UAAA,aAAa,KAAK,aAAa;AAAmB,wBAAA;AAGhD,YAAA,uBAAuB,gBACzB,MAAM,KAAK,aAAa,IACtB,gBACA,IAAI,aAAa,KACnB;AAKJ,UAAI,gBAAgB;AAClB;AAAA,UACE;AAAA,UACA,QAAQ,SAAS,KAAK,UAAU;AAAA,UAChC;AAAA,UACA;AAAA,QAAA;AAEF;AAAA,UACE;AAAA,UACA,QAAQ,SAAS,KAAK,UAAU;AAAA,UAChC;AAAA,UACA;AAAA,QAAA;AAAA,MACF,OACK;AACK,kBAAA,WAAW,IAAI,GAAG,oBAAoB;AACtC,kBAAA,WAAW,IAAI,GAAG,oBAAoB;AAAA,MAClD;AAAA,OACC,CAAC,SAAS,gBAAgB,QAAQ,cAAc,CAAC;AAAA,EACtD;AAEA,WAAS,UACP,MACA,OACA,QACA,QACM;AACG,aAAA,SAASK,EAAU,MAAM,OAAO;AAAA,MACvC;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV,MAAM;AAAA,IAAA,CACP;AAAA,EACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1,2,3,4,5,6,7,14]}