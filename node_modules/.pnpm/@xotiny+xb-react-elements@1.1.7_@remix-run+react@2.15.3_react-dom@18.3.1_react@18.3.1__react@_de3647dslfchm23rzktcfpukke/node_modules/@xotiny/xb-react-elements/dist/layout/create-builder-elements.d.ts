import { ComponentType } from 'react';
type PascalToKebab<T extends string> = T extends `${infer First}${infer Value}${infer Rest}` ? `${Lowercase<First>}${Value extends Uppercase<Value> ? `-${Lowercase<Value>}` : Value}${Rest extends string ? PascalToKebab<Rest> : ''}` : T;
export type Elements<T extends Record<string, ComponentType<any>>> = T extends Record<infer K extends string, ComponentType<any>> ? Record<PascalToKebab<K>, ComponentType<any>> : never;
export declare function createBuilderElements<T extends Record<string, ComponentType<any>>>(elements: T): Elements<T>;
export {};
