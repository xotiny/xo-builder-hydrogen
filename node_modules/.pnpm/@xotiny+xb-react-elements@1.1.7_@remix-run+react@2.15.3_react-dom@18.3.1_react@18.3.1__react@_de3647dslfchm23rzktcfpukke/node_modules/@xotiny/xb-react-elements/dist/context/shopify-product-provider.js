import { jsx as _jsx } from "react/jsx-runtime";
import { getAdjacentAndFirstAvailableVariants, useOptimisticVariant } from '@shopify/hydrogen';
import { createContext, useContext, useMemo, useState } from 'react';
export function createShopifyProductContext() {
    const Context = createContext(null);
    function Provider({ data, isProductPage = false, children }) {
        const firstVariant = data?.variants?.nodes?.[0];
        const variant = data.selectedVariant ?? firstVariant;
        const selectedOrFirstAvailableVariant = isProductPage ? data.selectedOrFirstAvailableVariant : variant;
        const variants = isProductPage ? getAdjacentAndFirstAvailableVariants(data) : data?.variants;
        const currentSelectedVariant = useOptimisticVariant(selectedOrFirstAvailableVariant, variants);
        const [selectedVariant, setSelectedVariant] = useState(currentSelectedVariant);
        const [quantity, setQuantity] = useState(1);
        return useMemo(() => {
            return (_jsx(Context.Provider, { value: { product: data, selectedVariant, setSelectedVariant, quantity, setQuantity, isProductPage }, children: children }));
            // eslint-disable-next-line react-hooks/exhaustive-deps
        }, [selectedVariant?.id, quantity]);
    }
    function useItem() {
        const state = useContext(Context);
        if (!state) {
            return null;
        }
        return state;
    }
    return { Provider, useItem };
}
