import { Attribute } from '../attribute';
export const animateAttr = {
    attribute: (options = {}) => {
        const privateOptions = {
            cascade: true,
            enabled: options?.animationEnabled ?? false,
            type: options?.animationType ?? 'infinite',
            duration: options?.animateDuration?.value ?? undefined,
            effect: options?.animateEffect ?? undefined,
            infiniteEffect: options?.animateInfiniteEffect ?? undefined,
            strength: options?.animateStrength?.value ?? undefined,
            ...options,
        };
        if (!privateOptions.enabled) {
            return { 'xo-animate': 'none' };
        }
        if (privateOptions.type === 'infinite') {
            if (!privateOptions.enabled) {
                return {};
            }
            return {
                'xo-animate': 'infinite',
                'xo-animate-infinite': privateOptions.infiniteEffect,
            };
        }
        const result = Attribute.create({ 'xo-animate': 'scroll' });
        if (privateOptions.cascade) {
            result.set({ 'xo-cascade': 'true' });
        }
        if (privateOptions.duration) {
            result.set({ 'xo-duration': privateOptions.duration });
        }
        if (privateOptions.effect) {
            result.set({ 'xo-type': privateOptions.effect });
        }
        if (privateOptions.strength) {
            result.set({ 'xo-strength': privateOptions.strength });
        }
        return result.get();
    },
    style: (options = {}) => {
        const privateOptions = {
            cascade: true,
            enabled: options?.animationEnabled ?? false,
            type: options?.animationType ?? 'infinite',
            duration: options?.animateDuration?.value ?? undefined,
            effect: options?.animateEffect ?? undefined,
            infiniteEffect: options?.animateInfiniteEffect ?? undefined,
            strength: options?.animateStrength?.value ?? undefined,
            ...options,
        };
        if (!privateOptions.enabled) {
            return {};
        }
        if (privateOptions.type === 'infinite') {
            return { '--xo-animate-infinite-duration': `${privateOptions.duration}ms` };
        }
        return {};
    },
};
