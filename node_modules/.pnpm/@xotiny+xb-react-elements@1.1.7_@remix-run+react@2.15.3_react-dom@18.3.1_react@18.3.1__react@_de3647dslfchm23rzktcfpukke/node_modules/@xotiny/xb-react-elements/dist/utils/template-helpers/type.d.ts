interface PositionValue {
    /**
     * Tọa độ x của điểm kéo (đơn vị %)
     */
    x?: number;
    /**
     * Tọa độ y của điểm kéo (đơn vị %)
     */
    y?: number;
}
type DeviceValue = 'desktop' | 'tablet' | 'mobile';
type ValueWithDevice<T> = {
    [K in DeviceValue]?: T;
};
type ButtonGroupWithDeviceValue = ValueWithDevice<string>;
export declare namespace MediaEntity {
    type FileStatus = 'READY' | 'FAILED' | 'PROCESSING' | 'UPLOADED';
    interface CategoryItem {
        _id: string;
        name: string;
        thumbnail: string;
        handle: string;
    }
    interface ImageItem {
        id: string;
        url: string;
        width: number;
        height: number;
        fileName: string;
        mimeType: string;
        extension: string;
    }
    interface VideoItem {
        id: string;
        url: string;
        videoThumbnail: string;
        width: number;
        height: number;
        fileName: string;
        mimeType: string;
        extension: string;
    }
    type Item = VideoItem | ImageItem;
}
export type ParallaxImage = {
    'background-position': ValueWithDevice<PositionValue>;
    'background-repeat': ButtonGroupWithDeviceValue;
    'background-size': ButtonGroupWithDeviceValue;
    'background-attachment': ButtonGroupWithDeviceValue;
    'background-image-parallax': boolean;
    'background-image': ValueWithDevice<MediaEntity.ImageItem>;
};
export type OptionsBuildCss = {
    backgroundType?: string;
    device?: DeviceValue;
    mobileImageStatic?: boolean;
};
export {};
