import { classNames as classNamesFn } from "../../class-names";
import { animateAttr } from '../animate-attr';
import { htmlAttr } from '../html-attr';
import { visibilityClass } from '../visibility-class';
import { actionAttr } from '../action-attr';
export function elementAttr(element, { classNames = [], style = {}, isCustomElement = false }, elementClassEnabled = true) {
    const { settings = {} } = element;
    const animateAttribute = animateAttr.attribute(settings);
    const animateStyle = animateAttr.style(settings);
    const visibilityClassName = settings?.visibilityEnabled && settings?.visibility ? visibilityClass(settings?.visibility) : '';
    const actAttr = actionAttr(settings?.action);
    const attrs = settings?.attrsEnabled && settings?.attributes ? htmlAttr.attribute(settings?.attributes) : {};
    const attrClassNames = settings?.attrsEnabled && settings?.attributes ? htmlAttr.class(settings?.attributes) : '';
    const allClasses = classNamesFn(...classNames, visibilityClassName, attrClassNames, elementClassEnabled ? element.id : '');
    const classAttr = isCustomElement ? { class: allClasses } : { className: allClasses };
    return {
        ...classAttr,
        style: { ...animateStyle, ...Object.fromEntries(Object.entries(style).filter(([_, val]) => val != null && val !== '')) },
        ...animateAttribute,
        ...actAttr,
        ...attrs,
    };
}
