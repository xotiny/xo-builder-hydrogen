export async function loadScript({ file, content, insertPosition = 'beforeend', id, parentElement = document.head, type, className, async = false, defer = false, }) {
    const currentScript = document?.querySelector(`script#${id}`);
    if (!currentScript) {
        const scriptEl = document.createElement('script');
        if (id) {
            scriptEl.id = id;
        }
        if (className) {
            scriptEl.className = className;
        }
        if (file) {
            scriptEl.src = file;
            if (type) {
                scriptEl.type = type;
            }
            if (async) {
                scriptEl.async = true;
            }
            if (defer) {
                scriptEl.defer = true;
            }
        }
        if (content) {
            scriptEl.textContent = content;
        }
        if (!!file || !!content) {
            parentElement.insertAdjacentElement(insertPosition, scriptEl);
            return new Promise(resolve => {
                const handleLoad = () => {
                    resolve(scriptEl);
                    scriptEl.removeEventListener('load', handleLoad);
                };
                scriptEl.addEventListener('load', handleLoad);
            });
        }
        return new Promise(resolve => {
            resolve(scriptEl);
        });
    }
    return new Promise(resolve => {
        resolve(currentScript);
    });
}
