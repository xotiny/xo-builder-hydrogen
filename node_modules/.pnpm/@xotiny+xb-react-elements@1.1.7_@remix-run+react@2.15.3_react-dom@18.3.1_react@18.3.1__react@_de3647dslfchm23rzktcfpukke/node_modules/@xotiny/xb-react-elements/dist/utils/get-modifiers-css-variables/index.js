import { FIELD_TYPES } from "../../constants";
import { objectValues } from '../object/object-values';
import { getCssVariableModifier } from '../template-helpers/get-css-variable-modifier';
function getModifiersCssVariablesFromSettings(rootSettings, currentElementId, settings = {}) {
    return rootSettings.reduce((acc, rootSetting) => {
        if (rootSetting.type !== FIELD_TYPES.MODIFIER) {
            return acc;
        }
        const setting = settings?.[rootSetting.id];
        if (!setting?.cssVariables) {
            return acc;
        }
        return [...acc, getCssVariableModifier(currentElementId, setting.cssVariables)];
    }, []);
}
export function getModifiersCssVariables(currentElements, elements) {
    const allFiles = objectValues(currentElements).flatMap(currentElement => {
        const element = elements[currentElement.elementId];
        if (!element) {
            return '';
        }
        return getModifiersCssVariablesFromSettings(element.settings ?? [], currentElement.id, currentElement.settings);
    });
    return [...new Set(allFiles)];
}
