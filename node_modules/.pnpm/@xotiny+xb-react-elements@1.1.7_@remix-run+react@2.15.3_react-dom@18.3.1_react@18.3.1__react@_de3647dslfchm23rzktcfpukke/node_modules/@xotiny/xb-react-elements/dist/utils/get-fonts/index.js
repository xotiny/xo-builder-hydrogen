import { objectValues } from '../object/object-values';
function getFontsFromSettings(settings = {}) {
    return objectValues(settings).reduce((acc, value) => {
        if (value?.fontFamily) {
            return [...acc, value];
        }
        if (value?.normal?.typography?.['font-family']) {
            return [...acc, value.normal.typography['font-family']];
        }
        return acc;
    }, []);
}
export function getFonts(data) {
    if (data.currentElements) {
        return objectValues(data.currentElements).flatMap(element => {
            return getFontsFromSettings(element.settings);
        });
    }
    // Trường hợp này không cần check navigation và chỉ nên sử dụng tại editor
    return objectValues(data).flatMap(settings => getFontsFromSettings(settings));
}
export function generateGoogleFontUrl({ family, variants }) {
    const $family = family.replace(/\s/g, '+'); // Thay thế dấu cách bằng dấu cộng
    const $variants = variants.map(({ value }) => value).join(',');
    return `https://fonts.googleapis.com/css?family=${$family}${variants.length > 0 ? `:${$variants}` : ''}`;
}
