import { useLocation } from '@remix-run/react';
import { CountryCode, CurrencyCode, FilterValue, LanguageCode, ProductCollectionSortKeys, ProductFilter, ProductSortKeys } from '@shopify/hydrogen/storefront-api-types';
/**
 * Trong hydrogen demo chỉ dùng newest nhưng ở liquid có thêm created-descending, created-ascending nên thêm để đồng bộ
 *
 * newest = created-descending
 *
 * oldest = created-ascending
 */
export type SortParam = 'price-low-high' | 'price-high-low' | 'best-selling' | 'featured' | 'newest' | 'created-descending' | 'oldest' | 'created-ascending' | 'title-ascending' | 'title-descending';
export declare function getSortValuesFromParam(sortParam: SortParam | null, handle: string): {
    sortKey: ProductCollectionSortKeys | ProductSortKeys;
    reverse: boolean;
};
export type Locale = {
    language: LanguageCode;
    country: CountryCode;
    label: string;
    currency: CurrencyCode;
};
export type Localizations = Record<string, Locale>;
export type I18nLocale = Locale & {
    pathPrefix: string;
};
export declare function parseAsCurrency(value: number, locale: I18nLocale): string;
export declare function getAppliedFilter(filters: ProductFilter[], allFilterValues: Pick<FilterValue, 'input' | 'id' | 'label' | 'count'>[] | undefined, locale: I18nLocale): {
    filter: ProductFilter;
    label: string;
}[];
export declare function getAppliedFilterLink(filter: any, params: URLSearchParams, location: any): string;
export declare function filterInputToParams(rawInput: string | ProductFilter, params: URLSearchParams): URLSearchParams;
export declare function getFilterLink(rawInput: string | ProductFilter, params: URLSearchParams, location: ReturnType<typeof useLocation>): string;
