/*
  - Input:
    fieldset = "layout";
    value = {
      pageWidth: {
        desktop: {
          value: 1200,
          unit: "px"
        },
        mobile: {
          value: 100,
        }
      },
      background: 'rgba(174, 92, 92, 1)',
      background_gradient: '',
      text: '#121212',
    };
  - Output:
    result = {
      "--layout-pageWidth-desktop": "1143px",
      "--layout-pageWidth-mobile": 100,
      "--layout-background": "rgba(174, 92, 92, 1)",
      "--layout-background_gradient": "",
      "--layout-text": "#121212",
    }
  - Complexity: O(n) => n scale theo số lượng key trong value
*/
/** Hàm flat field control values, flat tất cả các key trong values để suy ra biến css variable. Tìm: field-control-values-to-variables.ts để xem ví dụ */
export function fieldControlValuesToVariables(value, fieldsetName = '', hasPreset = true, result = {}) {
    const preset = hasPreset ? '--xb-' : '';
    const newFieldsetName = fieldsetName !== '' ? `${fieldsetName}-` : '';
    Object.keys(value).forEach(key => {
        if (typeof value[key] === 'object' && !Array.isArray(value[key])) {
            if ('value' in value[key] && 'unit' in value[key]) {
                result[`${preset}${newFieldsetName}${key}`] = `${value[key].value}${value[key].unit}`;
            }
            else if ('value' in value[key]) {
                result[`${preset}${newFieldsetName}${key}`] = value[key].value;
            }
            else {
                fieldControlValuesToVariables(value[key], `${newFieldsetName}${key}`, hasPreset, result);
            }
        }
        else {
            result[`${preset}${newFieldsetName}${key}`] = value[key];
        }
    });
    return result;
}
