import type { ReactNode } from 'react';
import type { CurrentElementEntity } from './current-element.entity';
import type { CurrentElementSettings } from './shared-kernel';
export type PageSettings = Record<string, any>;
export type Global = Record<string, any>;
export type Element<SettingsT extends CurrentElementSettings = CurrentElementSettings> = CurrentElementEntity.DynamicElement<SettingsT> & {
    index: number;
};
export type WrapperElement<SettingsT extends CurrentElementSettings = CurrentElementSettings> = CurrentElementEntity.WrapperElement<SettingsT> & {
    index: number;
};
export interface ElementProps<SettingsT extends CurrentElementSettings = CurrentElementSettings> {
    element: Element<SettingsT>;
    parent: CurrentElementEntity.WrapperElement | null;
}
export interface WrapperProps<SettingsT extends CurrentElementSettings = CurrentElementSettings> {
    element: WrapperElement<SettingsT>;
    parent: CurrentElementEntity.WrapperElement | null;
    child: CurrentElementEntity.Element[];
    children: ReactNode;
    renderMegaMenu?: () => void;
}
