import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useCollectionDetail, useProductDetail, useSeo } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { Style } from "../../../utils/template-helpers/style";
import './styles';
export const Breadcrumb = ({ element }) => {
    const { settings } = element;
    const productDetail = useProductDetail();
    const collectionData = useCollectionDetail();
    const data = useSeo();
    const separatorIconSizeDesktop = `${settings.separatorIconSize?.desktop?.value}${settings.separatorIconSize?.desktop?.unit}`;
    const separatorIconSizeTablet = `${settings.separatorIconSize.tablet?.value ?? settings.separatorIconSize?.desktop?.value}${settings.separatorIconSize.tablet?.unit ?? settings.separatorIconSize?.desktop?.unit}`;
    const separatorIconSizeMobile = `${settings.separatorIconSize.mobile?.value ?? settings.separatorIconSize?.desktop?.value}${settings.separatorIconSize.mobile?.unit ?? settings.separatorIconSize?.desktop?.unit}`;
    function getSeparatorIcon() {
        if (settings.icon?.source) {
            return settings.icon?.type === 'image' ? (_jsx("div", { className: "xb-breadcrumb__separator", "aria-hidden": "true", children: _jsx("img", { className: "xb-image", src: settings.icon.source, alt: settings.icon.name }) })) : (_jsx("div", { className: "xb-breadcrumb__separator", "aria-hidden": "true", dangerouslySetInnerHTML: { __html: settings.icon.source } }));
        }
        return (_jsx("div", { className: "xb-breadcrumb__separator", "aria-hidden": "true", children: "/" }));
    }
    const renderSeparator = getSeparatorIcon();
    function getStyle() {
        const style = Style.create({
            '--xb-breadcrunmb-icon-size-desktop': separatorIconSizeDesktop,
            '--xb-breadcrunmb-icon-size-tablet': separatorIconSizeTablet,
            '--xb-breadcrunmb-icon-size-mobile': separatorIconSizeMobile,
        });
        return style.get();
    }
    const homeRoute = '/';
    function renderBreadcrumb() {
        if (productDetail) {
            const { collections } = productDetail;
            const collectionLength = collections.edges.length;
            if (!collectionLength) {
                return null;
            }
            const collection = collections?.edges?.[0]?.node;
            const title = collection?.title;
            const handle = collection?.handle;
            return (_jsxs(_Fragment, { children: [!!handle && (_jsxs(_Fragment, { children: [renderSeparator, _jsx("a", { href: `/collections/${handle}`, "aria-label": title, children: title })] })), renderSeparator, _jsx("span", { children: productDetail?.title })] }));
        }
        else if (collectionData?.collection) {
            const { collection } = collectionData;
            const { handle, title } = collection;
            return (_jsx(_Fragment, { children: !!handle && (_jsxs(_Fragment, { children: [renderSeparator, _jsx("a", { href: `/collections/${handle}`, "aria-label": title, children: title })] })) }));
        }
        else {
            if (!data) {
                return null;
            }
            const { seo } = data;
            return (_jsxs(_Fragment, { children: [renderSeparator, _jsx("div", { children: seo?.title })] }));
        }
    }
    if (!productDetail && !collectionData?.collection && !data) {
        return null;
    }
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-breadcrunmb', settings.static?.class],
            style: getStyle(),
        }), children: _jsxs("nav", { role: "navigation", "aria-label": "breadcrumbs", children: [_jsx("a", { className: "xb-breadcrumb__home", href: homeRoute, rel: "noreferer", "aria-label": "Home", children: "Home" }), renderBreadcrumb()] }) }));
};
