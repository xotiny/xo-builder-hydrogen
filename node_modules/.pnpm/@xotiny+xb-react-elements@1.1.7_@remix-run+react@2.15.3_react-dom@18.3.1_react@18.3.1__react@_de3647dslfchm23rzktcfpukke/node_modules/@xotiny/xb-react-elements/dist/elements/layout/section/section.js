import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { renderBgOverlay } from "../../../utils/template-helpers/render-bg-overlay";
import { renderBgParallax } from "../../../utils/template-helpers/render-bg-parallax";
import { renderBgVideo } from "../../../utils/template-helpers/render-bg-video";
import { Style } from "../../../utils/template-helpers/style";
import { sectionUtils } from './section-utils';
import './styles';
export const Section = ({ element, children }) => {
    const { settings } = element;
    const { absoluteClass, getContainerClass, getGap, getSectionDividerHeight, getWidth, gradientAnimationClass, containerStyle } = sectionUtils({
        element,
    });
    function renderSectionDivider(enabled, position, height, color, shape, front, dividerAnimationEnabled) {
        if (enabled !== 'yes') {
            return '';
        }
        const dividerStyles = getSectionDividerHeight(height, position);
        if (dividerAnimationEnabled === 'yes' &&
            (shape ===
                'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/XO-Section-Divider-12_90f488a0-2fdf-449b-bc48-5c28ff25339c.svg?v=1721703674' ||
                shape ===
                    'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/XO-Section-Divider-13_add42fa5-3c84-44b0-96ae-f88df8a1e87a.svg?v=1721703674')) {
            return [...Array(3).keys()].map(val => {
                return (_jsx("div", { className: `xb-section-divider-wrapper xb-section-divider-wrapper-${val + 1} xb-section-divider-wrapper--${position}`, style: { zIndex: front }, children: _jsx("div", { className: `xb-section-divider xb-section-divider--${position}`, style: {
                            ...dividerStyles,
                            [`--xb-section-divider-${position}-color`]: color,
                            [`--xb-section-divider-${position}-svg`]: `url('${shape}')`,
                            position: 'relative',
                        }, children: _jsx("span", {}) }) }, val));
            });
        }
        return (_jsx("div", { className: `xb-section-divider xb-section-divider--${position}`, style: {
                ...dividerStyles,
                [`--xb-section-divider-${position}-color`]: color,
                [`--xb-section-divider-${position}-svg`]: `url('${shape}')`,
                zIndex: front,
            }, children: _jsx("span", {}) }));
    }
    function renderBackgroundSliderItems(items, screen) {
        const type = settings?.styles?.normal?.background?.['background-slider-type'];
        const duration = settings?.styles?.normal?.background?.['background-slider-duration']?.value;
        const delay = settings?.styles?.normal?.background?.['background-slider-delay']?.value;
        return (_jsx("xb-section-background-slider", { "xb-observed": `${type}-${delay}-${duration}`, "xb-type": type, "xb-delay": delay, "xb-duration": duration, className: `xb-section-background-slider xb-section-background-slider-${type} xb-section-background-slider-${screen}`, style: Style.create({ '--xb-section-background-slider-duration': `${duration}ms` }).get(), children: items
                .map((item, index) => {
                return (_jsx("xb-section-background-slider-item", { className: "xb-section-background-slider__item", style: { backgroundImage: `url("${item.url}")`, zIndex: index === 0 ? 30 : 10 } }, index));
            })
                .join('') }));
    }
    function backgroundSlider() {
        if (settings?.styles?.normal?.background?.['background-type'] !== 'slider') {
            return '';
        }
        const backgroundSlider = settings?.styles?.normal?.background?.['background-slider'];
        if (!backgroundSlider) {
            return '';
        }
        const desktopItems = backgroundSlider.desktop;
        const tabletItems = backgroundSlider.tablet ?? desktopItems;
        const mobileItems = backgroundSlider.mobile ?? tabletItems;
        return (_jsxs(_Fragment, { children: [renderBackgroundSliderItems(mobileItems, 'mobile'), renderBackgroundSliderItems(tabletItems, 'tablet'), renderBackgroundSliderItems(desktopItems, 'desktop')] }));
    }
    function renderSectionContent(children) {
        return (_jsxs("section", { ...elementAttr(element, {
                classNames: ['xb-section', absoluteClass, gradientAnimationClass],
                style: containerStyle,
            }), "data-xb-section-id": element.id, "data-xb-section-global": !!element.global, children: [children, renderBgVideo({ styles: settings.styles }), renderBgOverlay({ styles: settings.styles }), renderBgParallax({ styles: settings.styles }), renderSectionDivider(settings.dividerTopEnabled, 'top', settings.dividerTopHeight, settings.dividerTopColor, settings.dividerTopShape, settings.shapeTopFrontEnabled, settings.dividerTopAnimationEnabled), renderSectionDivider(settings.dividerBottomEnabled, 'bottom', settings.dividerBottomHeight, settings.dividerBottomColor, settings.dividerBottomShape, settings.shapeBottomFrontEnabled, settings.dividerBottomAnimationEnabled), backgroundSlider()] }));
    }
    function renderSection(children) {
        if (element.megaMenu) {
            return _jsx("div", { "xo-mega-menu-name": element.megaMenuId, children: renderSectionContent(children) });
        }
        return renderSectionContent(children);
    }
    return renderSection(_jsx("div", { className: getContainerClass(), style: { ...getGap(), ...getWidth() }, children: children }));
};
