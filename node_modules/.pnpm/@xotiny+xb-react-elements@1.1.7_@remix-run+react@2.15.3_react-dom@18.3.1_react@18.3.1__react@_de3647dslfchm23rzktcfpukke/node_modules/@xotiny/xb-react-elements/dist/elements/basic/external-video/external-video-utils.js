import { Style } from "../../../utils/template-helpers/style";
export function externalVideoUtils({ element }) {
    const { settings } = element;
    const isYoutube = (url) => {
        return url.search(/^https?:\/\/(www|)\.youtube\.com/g) !== -1 || url.search(/^https?:\/\/youtu\.be\/[A-Za-z0-9_-]+/g) !== -1;
    };
    function isVimeo(url) {
        return url.search(/^https?:\/\/(player\.|)vimeo\.com/g) !== -1;
    }
    function changeUrlVimeo(url) {
        const id = url.replace(/(^.*(video|vimeo\.com)\/)(\w*)(.*$)/g, '$3');
        const videoUrl = new URL(`https://player.vimeo.com/video/${id}`);
        // @ts-ignore
        videoUrl.searchParams.set('controls', settings.showControl === 'yes' ? 1 : 0);
        // @ts-ignore
        videoUrl.searchParams.set('muted', settings.muteVideo === 'yes');
        // @ts-ignore
        videoUrl.searchParams.set('loop', settings.loopEnabled === 'yes');
        // @ts-ignore
        videoUrl.searchParams.set('autoplay', settings.autoplayEnabled === 'yes');
        return videoUrl.href;
    }
    function changeUrlYoutube(url) {
        const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(shorts\/)|(watch\?)|(\/))\??v?=?([^#&?]*).*/;
        const match = url.match(regExp);
        const id = match && match[7]?.length == 11 ? match[7] : match[9]?.length == 11 ? match[9] : false;
        const videoUrl = new URL(`https://www.youtube.com/embed/${id}?iv_load_policy=1&disablekb=1&modestbranding=1&playsinline=1`);
        // @ts-ignore
        videoUrl.searchParams.set('controls', settings.showControl === 'yes' ? 1 : 0);
        // @ts-ignore
        videoUrl.searchParams.set('mute', settings.muteVideo === 'yes');
        // @ts-ignore
        videoUrl.searchParams.set('loop', settings.loopEnabled === 'yes' ? 1 : 0);
        // @ts-ignore
        videoUrl.searchParams.set('autoplay', settings.autoplayEnabled === 'yes' ? 1 : 0);
        return videoUrl.href;
    }
    function changeUrlToEmbed(url) {
        if (isVimeo(url)) {
            return changeUrlVimeo(url);
        }
        if (isYoutube(url)) {
            return changeUrlYoutube(url);
        }
        return url;
    }
    const url = changeUrlToEmbed(settings.videoUrl?.url);
    const widthDesktop = settings.videoSize === 'full' ? '100%' : `${settings.videoWidth.desktop.value}px`;
    const widthTablet = settings.videoSize === 'full' ? '100%' : `${settings.videoWidth?.tablet?.value ?? settings.videoWidth?.desktop.value}px`;
    const widthMobile = settings.videoSize === 'full' ? '100%' : `${settings.videoWidth?.mobile?.value ?? settings.videoWidth?.desktop.value}px`;
    const displayRatio = settings.displayRatio === 'custom' ? `${settings.customRatio.value}${settings.customRatio.unit}` : settings.displayRatio;
    function getStyle() {
        const styles = Style.create({
            'padding-bottom': displayRatio,
            '--xb-external-video-width-desktop': widthDesktop,
            '--xb-external-video-width-tablet': widthTablet,
            '--xb-external-video-width-mobile': widthMobile,
        });
        return styles.get();
    }
    const placeholderImage = 'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/Default_image.png?v=1713954435';
    return {
        getStyle,
        url,
        placeholderImage,
    };
}
