import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ExternalVideo, ModelViewer, Video } from '@shopify/hydrogen';
import { createElement } from 'react';
import { useSettings } from "../../../hooks/use-settings";
import { useProduct } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { productMainMediaUtils } from './product-main-media-utils';
export const ProductMainMedia = ({ element }) => {
    const { settings } = element;
    const { getObjectFit, getRatio, imageZoomTag, ratioClass } = productMainMediaUtils({ element });
    const { product } = useProduct(element.id);
    const { globalSettings: global } = useSettings();
    const globalPlaceholder = global?.placeholderImage?.['product-image']?.url;
    const defaultPlaceholder = 'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/Product-placeholder.svg?v=1717753235';
    if (!product) {
        return null;
    }
    function renderLoading() {
        const loaderType = global?.imageLoader?.type ?? 'loader-1';
        const loaderColor = global?.imageLoader?.color ?? '#000';
        const loaderBackgroundColor = global?.imageLoader?.backgroundColor ?? 'rgba(0, 0, 0, 0.1)';
        const loaderDuration = global?.imageLoader?.duration?.value ?? 1600;
        const loaderSize = global?.imageLoader?.size?.value ?? 40;
        switch (loaderType) {
            case 'loader-1':
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-1", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize }, children: _jsx("span", {}) }) }) }));
            case 'loader-2':
                const loaderSize2 = Math.round(loaderSize / 2);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-2", style: { '--color': loaderColor, '--duration': loaderDuration, '--stroke-width': 2, '--size': loaderSize2 }, children: _jsx("div", { children: _jsx("span", {}) }) }) }) }));
            case 'loader-3':
                const loaderSize3 = Math.round(loaderSize / 4);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-3", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize3 }, children: _jsx("span", {}) }) }) }));
        }
    }
    const renderImage = (image) => {
        switch (settings.$mediaClickAction) {
            case 'click':
                return (_jsxs("a", { href: `product/${product.handle}`, "aria-label": image.altText, children: [_jsx("img", { is: "xo-lazyload", "xo-src": image?.url, loading: "lazy", alt: image?.altText ?? product.title, width: image?.width, height: image?.height, "xo-intrinsic-width": image?.width, "xo-intrinsic-height": image?.height, "xo-fallback-width": "400" }), renderLoading()] }));
            case 'gallery':
                return _jsx("xo-gallery-item", { "xo-thumb-src": image?.url, "xo-src": image?.url });
            default:
                return (_jsxs("div", { children: [_jsx("img", { is: "xo-lazyload", "xo-src": image?.url, loading: "lazy", alt: image?.altText ?? product.title, width: image?.width, height: image?.height, "xo-intrinsic-width": image?.width, "xo-intrinsic-height": image?.height, "xo-fallback-width": "400" }), renderLoading()] }));
        }
    };
    return (_jsx("div", { className: "xb-product-media__main", children: _jsx("xo-carousel-inner", { children: _jsxs("xo-carousel-list", { children: [!!product.media?.nodes?.length &&
                        product.media?.nodes?.map(media => {
                            const ratio = media.__typename === 'MediaImage' && !!media?.image?.width && !!media?.image?.height ? media?.image?.width / media?.image?.height : 1;
                            return (_jsxs("xo-carousel-slide", { children: [media.mediaContentType === 'IMAGE' && media.__typename === 'MediaImage' && (_jsx("div", { ...elementAttr(element, {
                                            classNames: ['xb-product-media__main-item', ratioClass, settings.static?.class, settings?.modifier?.handle],
                                            style: {
                                                ...getRatio(),
                                                ...getObjectFit(),
                                            },
                                        }), children: createElement(imageZoomTag, {
                                            'xo-zoom': '3',
                                            'xo-zoom-src': '',
                                            style: { width: '100%', '--xb-product-media-aspect-ratio-original': ratio },
                                        }, renderImage(media?.image)) })), media.mediaContentType === 'EXTERNAL_VIDEO' && media.__typename === 'ExternalVideo' && (_jsx("div", { ...elementAttr(element, {
                                            classNames: ['xb-product-media__main-item', ratioClass, settings.static?.class, settings?.modifier?.handle],
                                        }), children: _jsx(ExternalVideo, { data: media }) })), media.mediaContentType === 'MODEL_3D' && media.__typename === 'Model3d' && (_jsx("div", { ...elementAttr(element, {
                                            classNames: ['xb-product-media__main-item', ratioClass, settings.static?.class, settings?.modifier?.handle],
                                        }), children: _jsx(ModelViewer, { data: media }) })), media.mediaContentType === 'VIDEO' && media.__typename === 'Video' && (_jsx("div", { ...elementAttr(element, {
                                            classNames: ['xb-product-media__main-item', ratioClass, settings.static?.class, settings?.modifier?.handle],
                                        }), children: _jsx(Video, { data: media }) }))] }, media.id));
                        }), !product.media?.nodes?.length && (_jsx("xo-carousel-slide", { children: _jsx("div", { ...elementAttr(element, {
                                classNames: ['xb-product-media__main-item', ratioClass, settings.static?.class, settings?.modifier?.handle],
                                style: { ...getRatio(), ...getObjectFit() },
                            }), children: _jsx("img", { is: "xo-lazyload", "xo-src": globalPlaceholder ? globalPlaceholder : defaultPlaceholder, loading: "lazy", alt: product.title, width: "300", height: "300", "xo-intrinsic-width": "300", "xo-intrinsic-height": "300", "xo-fallback-width": "300" }) }) }))] }) }) }));
};
