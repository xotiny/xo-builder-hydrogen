import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { createElement } from 'react';
import { useSettings } from "../../../hooks/use-settings";
import { useArticle } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { articleImageUtils } from './article-image-utils';
import './styles';
export const ArticleImage = ({ element }) => {
    const { settings } = element;
    const article = useArticle(element.id);
    const { tagName, getRatio, getObjectRatio } = articleImageUtils({ element });
    const { globalSettings: global } = useSettings();
    const globalPlaceholder = global?.placeholderImage?.['article-image']?.url;
    const defaultPlaceholder = 'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/Article-placeholder.svg?v=1717754370';
    const classLink = settings.$enableLink === 'yes' ? 'xb-link' : '';
    const currentPlaceholder = globalPlaceholder ? globalPlaceholder : defaultPlaceholder;
    function renderLoading() {
        const loaderType = global?.imageLoader?.type ?? 'loader-1';
        const loaderColor = global?.imageLoader?.color ?? '#000';
        const loaderBackgroundColor = global?.imageLoader?.backgroundColor ?? 'rgba(0, 0, 0, 0.1)';
        const loaderDuration = global?.imageLoader?.duration?.value ?? 1600;
        const loaderSize = global?.imageLoader?.size?.value ?? 40;
        switch (loaderType) {
            case 'loader-1':
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-1", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize }, children: _jsx("span", {}) }) }) }));
            case 'loader-2':
                const loaderSize2 = Math.round(loaderSize / 2);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-2", style: { '--color': loaderColor, '--duration': loaderDuration, '--stroke-width': 2, '--size': loaderSize2 }, children: _jsx("div", { children: _jsx("span", {}) }) }) }) }));
            case 'loader-3':
                const loaderSize3 = Math.round(loaderSize / 4);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-3", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize3 }, children: _jsx("span", {}) }) }) }));
        }
    }
    if (!article) {
        return null;
    }
    return createElement(tagName, {
        ...elementAttr(element, {
            classNames: ['xb-article-image', 'xb-image', classLink, settings.static?.class, settings?.modifier?.handle],
            style: {
                ...getRatio(),
                ...getObjectRatio(),
            },
        }),
        ...(settings.$enableLink !== 'no' ? { href: `/blogs/${article.blog.handle}/${article.handle}` } : {}),
    }, _jsxs(_Fragment, { children: [_jsx("img", { is: "xo-lazyload", "xo-src": article?.image?.url ? article.image.url : currentPlaceholder, loading: "lazy", alt: article.image?.altText ?? article.title, width: article.image?.width ?? 300, height: article.image?.height ?? 300, "xo-intrinsic-width": article.image?.width ?? 300, "xo-intrinsic-height": article.image?.height ?? 300, "xo-fallback-width": "300" }), renderLoading()] }));
};
