import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { createElement } from 'react';
import { useSettings } from "../../../hooks/use-settings";
import { useProduct } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { productImageUtils } from './product-image-utils';
import './styles';
export const ProductListHoverImage = ({ element }) => {
    const { settings } = element;
    const { product } = useProduct(element.id);
    const { tagName, classLink, getObjectFit, getRatio, getStyle, maskImageClass } = productImageUtils({ element });
    const { globalSettings: global } = useSettings();
    const globalPlaceholder = global?.placeholderImage?.['product-image']?.url;
    const defaultPlaceholder = 'https://cdn.shopify.com/s/files/1/0677/7900/2622/files/Product-placeholder.svg?v=1717753235';
    const currentPlaceholder = globalPlaceholder ? globalPlaceholder : defaultPlaceholder;
    const secondaryImage = product?.media?.nodes?.[1]?.image?.url;
    function renderLoading() {
        const loaderType = global?.imageLoader?.type ?? 'loader-1';
        const loaderColor = global?.imageLoader?.color ?? '#000';
        const loaderBackgroundColor = global?.imageLoader?.backgroundColor ?? 'rgba(0, 0, 0, 0.1)';
        const loaderDuration = global?.imageLoader?.duration?.value ?? 1600;
        const loaderSize = global?.imageLoader?.size?.value ?? 40;
        switch (loaderType) {
            case 'loader-1':
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-1", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize }, children: _jsx("span", {}) }) }) }));
            case 'loader-2':
                const loaderSize2 = Math.round(loaderSize / 2);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-2", style: { '--color': loaderColor, '--duration': loaderDuration, '--stroke-width': 2, '--size': loaderSize2 }, children: _jsx("div", { children: _jsx("span", {}) }) }) }) }));
            case 'loader-3':
                const loaderSize3 = Math.round(loaderSize / 4);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-3", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize3 }, children: _jsx("span", {}) }) }) }));
        }
    }
    if (!product) {
        return null;
    }
    return createElement(tagName, {
        ...elementAttr(element, {
            classNames: ['xb-product-image', 'xb-image', maskImageClass, classLink, settings.static?.class, settings?.modifier?.handle],
            style: {
                ...getRatio(),
                ...getObjectFit(),
                ...getStyle(),
            },
        }),
        href: `/products/${product.handle}`,
    }, _jsxs(_Fragment, { children: [_jsxs("div", { className: "xb-product-image__first", children: [_jsx("img", { is: "xo-lazyload", "xo-src": product?.featuredImage?.url ? product?.featuredImage?.url : currentPlaceholder, loading: "lazy", alt: product?.featuredImage?.altText ?? product?.title, width: product?.featuredImage?.width ?? 300, height: product?.featuredImage?.height ?? 300, "xo-intrinsic-width": product?.featuredImage?.width ?? 300, "xo-intrinsic-height": product?.featuredImage?.height ?? 300, "xo-fallback-width": "300" }), renderLoading()] }), settings.$showSecondaryImage === 'yes' && !!product?.media?.nodes?.[1] && !!secondaryImage && (_jsxs("div", { className: "xb-product-image__secondary", children: [_jsx("img", { is: "xo-lazyload", "xo-src": secondaryImage ? secondaryImage : currentPlaceholder, loading: "lazy", alt: product?.media?.nodes?.[1].alt ?? product?.title, width: "300", height: "300", "xo-intrinsic-width": "300", "xo-intrinsic-height": "300", "xo-fallback-width": "300" }), renderLoading()] }))] }));
};
