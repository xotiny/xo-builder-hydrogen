import { jsx as _jsx } from "react/jsx-runtime";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { Style } from "../../../utils/template-helpers/style";
import './styles';
export const Paragraph = ({ element }) => {
    const { settings } = element;
    const dropcapClass = settings.dropcapEnabled === 'yes' ? 'xb-paragraph--drop-cap' : '';
    const dropcapStyle = Style.create({
        '--xb-paragraph-drop-cap-size-desktop': `${settings.dropcapFontSize.desktop.value}${settings.dropcapFontSize.desktop.unit}`,
    });
    if (settings.dropcapFontSize?.tablet?.value) {
        dropcapStyle.set({ '--xb-paragraph-drop-cap-size-tablet': `${settings.dropcapFontSize.tablet.value}${settings.dropcapFontSize.tablet.unit}` });
    }
    if (settings.dropcapFontSize?.mobile?.value) {
        dropcapStyle.set({ '--xb-paragraph-drop-cap-size-mobile': `${settings.dropcapFontSize.mobile.value}${settings.dropcapFontSize.mobile.unit}` });
    }
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-paragraph', 'xb-typo', settings.static?.class, dropcapClass],
            style: {
                ...(settings.dropcapColor ? { '--xb-paragraph-drop-cap-color': settings.dropcapColor } : {}),
                ...dropcapStyle.get(),
            },
        }), dangerouslySetInnerHTML: { __html: settings.text } }));
};
