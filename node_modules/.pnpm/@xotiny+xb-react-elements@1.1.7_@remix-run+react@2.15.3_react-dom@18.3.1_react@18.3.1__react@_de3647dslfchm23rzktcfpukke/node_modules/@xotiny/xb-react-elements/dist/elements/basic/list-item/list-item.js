import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { actionAttr } from "../../../utils/template-helpers/action-attr";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import './styles';
export const ListItem = ({ element, parent, children }) => {
    const { settings } = element;
    const typeClass = parent?.settings.listType === 'block' ? 'xb-list__item--block' : 'xb-list__item--inline';
    return (_jsxs("li", { ...elementAttr(element, {
            classNames: ['xb-list__item', typeClass, settings.static?.class],
        }), ...actionAttr(settings.actionWrapper, true), ...(settings.actionWrapper.actionType !== 'no' && { tabIndex: 0 }), children: [parent?.settings.markerType === 'icon' && (_jsx("span", { className: "xb-list__icon", style: { alignItems: settings.verticalAlign }, children: children })), _jsx("span", { dangerouslySetInnerHTML: { __html: settings.text } })] }));
};
