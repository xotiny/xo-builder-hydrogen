import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { hash } from "../../../utils/hash";
import { useProduct } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
export const PickupAvailabilitiesModal = ({ element, parent }) => {
    const { settings } = element;
    const { product, selectedVariant } = useProduct(element.id);
    if (!product || !selectedVariant) {
        return null;
    }
    const { storeAvailability } = selectedVariant;
    if (!storeAvailability?.nodes?.length) {
        return null;
    }
    return (_jsx("xo-modal", { class: "xb-pickup-availability-modal", "xo-portal": true, "xo-observed": hash(`${JSON.stringify(parent?.settings)}${JSON.stringify(settings.settings)}`), "xo-name": "pickup-availability", "xo-animate": `slide-${parent?.settings.placement === 'left' ? 'right' : 'left'}`, "xo-placement": `top-${parent?.settings.placement}`, "xo-backdrop-color": settings.overlayColor, style: { zIndex: 9999 }, children: _jsx("div", { className: "xb-modal-content", style: {
                '--width': '40rem',
                '--height': '80vh',
                '--header-height': '7rem',
            }, children: _jsxs("div", { ...elementAttr(element, {
                    classNames: ['xb-modal-content__inner', 'xb-modal-content__inner--full-height', settings?.modifier?.handle, settings.static?.class],
                }), children: [_jsx("xo-animate", { "xo-cascade": true, children: product.title ? (_jsxs("div", { className: "xb-modal-content__header", children: [_jsx("h2", { className: "xb-modal-content__title xb-heading xb-line-2", style: {
                                        color: settings.titleColor,
                                    }, children: product.title }), _jsx("xo-modal-trigger", { class: "xb-modal-content__close", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512", children: _jsx("path", { d: "M378.4 71.4c8.5-10.1 7.2-25.3-2.9-33.8s-25.3-7.2-33.8 2.9L192 218.7 42.4 40.6C33.9 30.4 18.7 29.1 8.6 37.6S-2.9 61.3 5.6 71.4L160.7 256 5.6 440.6c-8.5 10.2-7.2 25.3 2.9 33.8s25.3 7.2 33.8-2.9L192 293.3 341.6 471.4c8.5 10.1 23.7 11.5 33.8 2.9s11.5-23.7 2.9-33.8L223.3 256l155-184.6z" }) }) })] })) : (_jsx("xo-modal-trigger", { class: "xb-modal-content__close xb-modal-content__close--abs", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512", children: _jsx("path", { d: "M378.4 71.4c8.5-10.1 7.2-25.3-2.9-33.8s-25.3-7.2-33.8 2.9L192 218.7 42.4 40.6C33.9 30.4 18.7 29.1 8.6 37.6S-2.9 61.3 5.6 71.4L160.7 256 5.6 440.6c-8.5 10.2-7.2 25.3 2.9 33.8s25.3 7.2 33.8-2.9L192 293.3 341.6 471.4c8.5 10.1 23.7 11.5 33.8 2.9s11.5-23.7 2.9-33.8L223.3 256l155-184.6z" }) }) })) }), _jsx("div", { className: "xb-modal-content__body xb-scrollbar", children: _jsx("div", { className: "xb-modal-content__content xb-modal-content__content--cart-modal", children: storeAvailability.nodes.map((availability, index) => {
                                return (_jsxs("xo-animate", { "xo-cascade": true, class: "xb-pickup-availability-list__item", children: [_jsx("h3", { className: "xb-pickup-availability-list__title xb-heading", children: availability.location.name }), !!availability.available && (_jsxs("div", { className: "xb-pickup-availability-list__available", children: [_jsx("div", { className: "xb-pickup-availability-list__icon", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512", children: _jsx("path", { d: "M441 103c9.4 9.4 9.4 24.6 0 33.9L177 401c-9.4 9.4-24.6 9.4-33.9 0L7 265c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l119 119L407 103c9.4-9.4 24.6-9.4 33.9 0z" }) }) }), _jsxs("p", { className: "xb-typo", children: ["Pickup available, ", availability.pickUpTime] })] })), _jsxs("address", { className: "xb-pickup-availability-list__address xb-typo", children: [availability.location.address.formatted, availability.location.address.phone?.length !== 0 && _jsx("p", { className: "xb-typo", children: availability.location.address.phone })] })] }, index));
                            }) }) })] }) }) }));
};
