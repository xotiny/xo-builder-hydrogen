import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useSettings } from "../../../hooks/use-settings";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { externalVideoUtils } from './external-video-utils';
import './styles';
export const ExternalVideo = ({ element, children }) => {
    const { settings } = element;
    const { globalSettings: global } = useSettings();
    const { getStyle, placeholderImage, url } = externalVideoUtils({ element });
    function renderLoading() {
        const loaderType = global?.imageLoader?.type ?? 'loader-1';
        const loaderColor = global?.imageLoader?.color ?? '#000';
        const loaderBackgroundColor = global?.imageLoader?.backgroundColor ?? 'rgba(0, 0, 0, 0.1)';
        const loaderDuration = global?.imageLoader?.duration?.value ?? 1600;
        const loaderSize = global?.imageLoader?.size?.value ?? 40;
        switch (loaderType) {
            case 'loader-1':
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-1", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize }, children: _jsx("span", {}) }) }) }));
            case 'loader-2':
                const loaderSize2 = Math.round(loaderSize / 2);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-2", style: { '--color': loaderColor, '--duration': loaderDuration, '--stroke-width': 2, '--size': loaderSize2 }, children: _jsx("div", { children: _jsx("span", {}) }) }) }) }));
            case 'loader-3':
                const loaderSize3 = Math.round(loaderSize / 4);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-3", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize3 }, children: _jsx("span", {}) }) }) }));
        }
    }
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-external-video', settings.static?.class],
            style: getStyle(),
        }), children: settings.popUpEnabled === 'yes' ? (_jsxs(_Fragment, { children: [_jsxs("xo-modal-trigger", { "xo-name": "xb-external-video-modal", children: [_jsxs("div", { children: [_jsx("img", { className: "xb-html-video__item xb-image", is: "xo-lazyload", "xo-src": settings.coverImage?.url ?? placeholderImage, loading: "lazy", width: settings.coverImage?.width, height: settings.coverImage?.height, "xo-intrinsic-width": settings.coverImage?.width, "xo-intrinsic-height": settings.coverImage?.height, "xo-fallback-width": "400", draggable: "false", alt: "" }), renderLoading()] }), children] }), _jsx("xo-modal", { "xo-portal": "true", "xo-name": "xb-external-video-modal", "xo-animate": "zoom", "xo-video-autoplay": settings.autoplayEnabled === 'yes', children: _jsxs("div", { className: "xb-external-video__content", style: { position: 'relative', paddingTop: '56.25%' }, children: [_jsx("xo-modal-trigger", { children: _jsx("button", { className: "xb-external-video__close", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512", children: _jsx("path", { d: "M393.4 41.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3L269.3 256 438.6 425.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 301.3 54.6 470.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L178.7 256 9.4 86.6C-3.1 74.1-3.1 53.9 9.4 41.4s32.8-12.5 45.3 0L224 210.7 393.4 41.4z" }) }) }) }), _jsx("iframe", { src: url, allowFullScreen: true, title: "External Video", loading: "lazy" })] }) })] })) : (_jsx("iframe", { src: url, className: "xb-external-video__iframe", allowFullScreen: true, title: "External Video", loading: "lazy" })) }));
};
