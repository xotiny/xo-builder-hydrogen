import { jsx as _jsx } from "react/jsx-runtime";
import { ShopPayButton, useOptimisticVariant } from '@shopify/hydrogen';
import { useProduct, useShop } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { Style } from "../../../utils/template-helpers/style";
import './styles';
export const DynamicCheckout = ({ element }) => {
    const { settings } = element;
    const fontSizeDesktop = settings.fontSize.desktop.value;
    const fontSizeTablet = settings.fontSize.tablet?.value ?? settings.fontSize.desktop.value;
    const fontSizeMobile = settings.fontSize.mobile?.value ?? settings.fontSize.desktop.value;
    const { product } = useProduct(element.id);
    const shop = useShop();
    const getStyle = () => {
        return Style.create({
            '--xb-dynamic-checkout-font-size-desktop': `${fontSizeDesktop}px`,
            '--xb-dynamic-checkout-font-size-tablet': `${fontSizeTablet}px`,
            '--xb-dynamic-checkout-font-size-mobile': `${fontSizeMobile}px`,
            '--xb-dynamic-checkout-radius': `${settings.borderRadius?.value ?? 0}px`,
            '--xb-dynamic-checkout-color': `${settings.color}`,
            '--xb-dynamic-checkout-background-color': `${settings.backgroundColor}`,
            '--xb-dynamic-checkout-font-family': `${settings.buttonFont?.fontFamily}`,
            '--shop-pay-button-height': '48px',
            '--shop-pay-button-border-radius': `${settings.borderRadius?.value ?? 0}px`,
        }).get();
    };
    const firstVariant = product?.variants?.nodes?.[0];
    const selectedVariant = useOptimisticVariant(firstVariant, product?.variants);
    const disabled = !selectedVariant || !selectedVariant.availableForSale;
    const disabledClass = disabled ? 'xb-dynamic-checkout--disabled' : '';
    if (!product || !firstVariant) {
        return null;
    }
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-dynamic-checkout', disabledClass, settings.static?.class],
            style: getStyle(),
        }), children: _jsx(ShopPayButton, { width: "100%", variantIdsAndQuantities: [
                {
                    id: selectedVariant?.id,
                    quantity: 1,
                },
            ], storeDomain: shop.primaryDomain?.url }) }));
};
