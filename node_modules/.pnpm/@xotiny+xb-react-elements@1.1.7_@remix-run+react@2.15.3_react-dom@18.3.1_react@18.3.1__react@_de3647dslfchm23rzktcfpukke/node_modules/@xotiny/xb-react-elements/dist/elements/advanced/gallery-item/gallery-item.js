import { jsx as _jsx } from "react/jsx-runtime";
import { useSettings } from "../../../hooks/use-settings";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { galleryItemUtils } from './gallery-item-utils';
import './styles';
export const GalleryItem = ({ element, parent }) => {
    const { settings } = element;
    const { globalSettings: global } = useSettings();
    const { getStyle, placeholderImage, currentContainerWidth } = galleryItemUtils({ element });
    const itemWidth = (currentContainerWidth / parent?.settings.grid.desktop.value) * settings.gridArea.column.desktop.value;
    function renderLoading() {
        const loaderType = global?.imageLoader?.type ?? 'loader-1';
        const loaderColor = global?.imageLoader?.color ?? '#000';
        const loaderBackgroundColor = global?.imageLoader?.backgroundColor ?? 'rgba(0, 0, 0, 0.1)';
        const loaderDuration = global?.imageLoader?.duration?.value ?? 1600;
        const loaderSize = global?.imageLoader?.size?.value ?? 40;
        switch (loaderType) {
            case 'loader-1':
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-1", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize }, children: _jsx("span", {}) }) }) }));
            case 'loader-2':
                const loaderSize2 = Math.round(loaderSize / 2);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-2", style: { '--color': loaderColor, '--duration': loaderDuration, '--stroke-width': 2, '--size': loaderSize2 }, children: _jsx("div", { children: _jsx("span", {}) }) }) }) }));
            case 'loader-3':
                const loaderSize3 = Math.round(loaderSize / 4);
                return (_jsx("div", { className: "xb-image__overlay xo-lazyload-overlay", children: _jsx("div", { className: "xb-image__loading", style: { '--xb-image-loading-background': loaderBackgroundColor }, children: _jsx("div", { className: "xo-loader-3", style: { '--color': loaderColor, '--duration': loaderDuration, '--size': loaderSize3 }, children: _jsx("span", {}) }) }) }));
        }
    }
    return (_jsx("div", { className: "xb-column", style: getStyle(), children: _jsx("xo-gallery-item", { ...elementAttr(element, {
                classNames: ['xb-gallery__item', settings.static?.class],
                isCustomElement: true,
            }), "xo-thumb-src": `${settings.image?.url ?? placeholderImage}&width=${itemWidth}`, "xo-src": `${settings.image?.url ?? placeholderImage}&width=2000`, children: renderLoading() }) }));
};
