import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useNavigate } from '@remix-run/react';
import { classNames } from "../../../utils/class-names";
import { useProduct, useProductOption } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import './styles';
export const ProductVariantsDropdownValueItem = ({ element }) => {
    const { settings } = element;
    const placementDesktop = settings.placement.desktop;
    const placementTablet = settings.placement.tablet ?? placementDesktop;
    const placementMobile = settings.placement.mobile ?? placementTablet;
    const option = useProductOption();
    const navigate = useNavigate();
    const { selectedVariant, product, setSelectedVariant, isProductPage } = useProduct();
    if (!option || !selectedVariant) {
        return null;
    }
    const optionIndex = product.options.findIndex(item => item.name === option.name);
    const { selectedOptions } = selectedVariant;
    const getSelectedVariant = (name, value) => {
        const { selectedOptions } = selectedVariant;
        const currentOption = selectedOptions.map(item => (item.name === name ? { name, value } : item));
        const variant = product?.variants.nodes.find(variant => currentOption.every((item, index) => item.value === variant.selectedOptions[index]?.value));
        return variant;
    };
    const handleChangeVariant = (name, value) => {
        if (isProductPage) {
            const variant = getSelectedVariant(name, value);
            const link = getVariantUrl(name, value);
            setSelectedVariant(variant);
            navigate(link);
        }
        else {
            const variant = getSelectedVariant(name, value);
            setSelectedVariant(variant);
        }
    };
    const getVariantUrl = (name, value) => {
        const variant = getSelectedVariant(name, value);
        const params = new URLSearchParams();
        const { selectedOptions } = variant;
        selectedOptions.forEach(item => {
            params.set(item.name, item.value);
        });
        return `${location.pathname}?${params.toString()}`;
    };
    return (_jsxs("div", { ...elementAttr(element, {
            classNames: ['xb-product-variant__option-item', settings.static?.class, 'xb-field-select-custom', settings?.modifier?.handle],
        }), children: [_jsxs("xo-popover-trigger", { class: "xb-field-select-custom__trigger", role: "button", tabIndex: 0, "xo-name": `${element.id}-${optionIndex}`, children: [_jsx("div", { className: "xb-field-select-custom__name", children: selectedOptions[optionIndex]?.value }), _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512", children: _jsx("path", { d: "M239 401c9.4 9.4 24.6 9.4 33.9 0L465 209c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-175 175L81 175c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9L239 401z" }) })] }), _jsx("xo-popover", { "xo-name": `${element.id}-${optionIndex}`, "xo-placement": placementDesktop, "xo-breakpoints": `{
          768: {
            placement: '${placementMobile}',
          },
          992: {
            placement: '${placementTablet}',
          },
        }`, "xo-portal": true, children: _jsx("div", { className: "xb-field-select-custom__popover xb-product-variant-dropdown-item__content xb-scrollbar", children: option.optionValues.map((value, index) => {
                        const currentOption = selectedVariant.selectedOptions[optionIndex];
                        const isActive = currentOption?.value == value.name;
                        const activeClass = isActive ? 'xb-product-variant__item-check--active' : '';
                        return (_jsxs("label", { className: "xb-field-select-custom__check", onClick: () => handleChangeVariant(option.name, value.name), children: [_jsx("span", { className: classNames(activeClass, 'xb-product-variant__item-check'), children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 448 512", children: _jsx("path", { d: "M441 103c9.4 9.4 9.4 24.6 0 33.9L177 401c-9.4 9.4-24.6 9.4-33.9 0L7 265c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l119 119L407 103c9.4-9.4 24.6-9.4 33.9 0z" }) }) }), _jsx("span", { className: "xb-product-variant__option-item-label", children: value.name })] }, `${value.name}${index}`));
                    }) }) })] }));
};
