import { createElement } from 'react';
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { actionAttr } from "../../../utils/template-helpers/action-attr";
import './styles';
export const HeadingTyping = ({ element }) => {
    const { settings } = element;
    const actionEnabled = settings.actionWrapper?.actionType !== 'no';
    const tagName = settings.htmlTag;
    const titleClass = `xb-heading xb-${settings.htmlTag}`;
    const classLink = actionEnabled ? 'xb-link xb-heading-typing__text' : 'xb-heading-typing__text';
    const linkTag = actionEnabled ? 'a' : 'div';
    const texts = settings.rotatingText.replaceAll(/\s,\s/g, ',').replaceAll(/\s,/g, ',').replaceAll(/,\s/g, ',').split(',');
    const content = `
    ${settings.beforeText} 
    <xo-typing
      xo-name="${element.id}" 
      xo-content='${JSON.stringify(texts)}'
      xo-delay="${settings.headingAnimateDelay?.value}" 
      xo-duration="${settings.headingAnimateDuration?.value}" 
      xo-effect="${settings.animationStyle}"
      style="color: ${settings.animatedColor}"
    ></xo-typing>
    ${settings.afterText}
  `;
    return createElement(tagName, {
        ...elementAttr(element, {
            classNames: ['xb-heading-typing', titleClass, settings.static?.class],
        }),
        children: createElement(linkTag, {
            ...actionAttr(settings.actionWrapper),
            className: classLink,
            dangerouslySetInnerHTML: { __html: content },
        }),
    });
};
