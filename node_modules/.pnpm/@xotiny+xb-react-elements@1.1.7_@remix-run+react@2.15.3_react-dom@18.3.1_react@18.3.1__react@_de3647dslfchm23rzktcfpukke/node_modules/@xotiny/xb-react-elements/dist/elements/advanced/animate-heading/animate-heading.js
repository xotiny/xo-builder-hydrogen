import { createElement } from 'react';
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import { actionAttr } from "../../../utils/template-helpers/action-attr";
import './styles';
export const AnimateHeading = ({ element }) => {
    const { settings } = element;
    const actionEnabled = settings.actionWrapper?.actionType !== 'no';
    const tagName = settings.htmlTag;
    const titleClass = `xb-heading xb-${settings.htmlTag}`;
    const classLink = actionEnabled ? 'xb-link xb-animate-heading__text' : 'xb-animate-heading__text';
    const linkTag = actionEnabled ? 'a' : 'div';
    const getSvgAttrs = (viewBox, style = '') => {
        return `xmlns="http://www.w3.org/2000/svg" viewBox="${viewBox}" preserveAspectRatio="none" fill="none" style="z-index: ${settings.shapeFrontEnabled};${style}"`;
    };
    const getPathAttrs = (dashoffset, dasharray, nextDasharray, size) => {
        return `stroke-dashoffset="${dashoffset}" stroke-dasharray="${dasharray}" xo-prev-stroke-dasharray="${dasharray}" xo-next-stroke-dasharray="${nextDasharray}" stroke="${settings.shapeColor}" stroke-width="${size}" stroke-linecap="${settings.shapeRoundedEnabled === 'yes' ? 'round' : ''}" stroke-linejoin="${settings.shapeRoundedEnabled === 'yes' ? 'round' : ''}"`;
    };
    let svg = '';
    switch (settings.animationStyle) {
        case 'circle':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 616.28 395.37')}
      >
        <path d="m257.27,37.57S23.04,54.55,23.04,203.77c0,133.6,213.45,158.55,281.08,158.55,74.33,0,289.4,0,289.4-140.66,0-100.28-142.2-120.57-223.98-120.57-123.97,0-213.94,52.22-213.94,52.22" ${getPathAttrs(0, '0 2000', '2000 0', settings.shapeSize.value + 15)} />
      </svg>
    `;
            break;
        case 'curly':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 829.37 117.5', 'top: 100%;height: auto;')}
      >
        <path d="m25.72,74.01s10.12,13.22,28.88,13.22c37.82,0,79.72-56.15,119.35-56.15,36.82,0,78.7,57.14,114.75,57.14,44.1,0,92.6-58.82,132.25-58.82s83.22,58.91,122.4,58.91c43.6,0,69.34-58.98,109.84-58.98s75.54,40.5,105.61,40.5,44.57-20.55,46.61-41.59" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'underline1':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 817.76 50', 'top: 100%;height: auto;')}
      >
        <line x1="26.87" y1="25" x2="788.8" y2="25" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'underline2':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 825.74 99.96', 'top: 100%;height: auto;')}
      >
        <path d="m37.45,70.21c175.17-25.86,320.79-47.34,491.12-47.34,102.6,0,227.43,18.01,259.91,47.36" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'double_underline':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 840.68 162.69', 'top: 100%;height: auto;')}
      >
        <path d="m110.42,46.38c231.3-33.76,322.96-31.56,604.68.02" ${getPathAttrs(0, '0 2000', '2000 0', settings.shapeSize.value + 15)} />
        <path d="m44.93,140.5c240.79-42.56,480.28-41.72,751.03.02" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} style="animation-delay: 200ms"/>
      </svg>
    `;
            break;
        case 'zigzag_underline':
            svg = `
      <svg
        ${getSvgAttrs('0 0 792.31 148.98', 'top: 100%;height: auto;')}
      >
        <path d="m67.1,41.79c33.36-14.17,580.1-12.33,657.45,13.7L24.06,94.34c268.81,5.87,506.84,12.55,737.68,20.44" ${getPathAttrs(0, '0 3000', '3000 0', settings.shapeSize.value + 15)} />
      </svg>
    `;
            break;
        case 'mountain_underline':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 848.66 159.09', 'top: 100%;height: auto;')}
      >
        <path d="m27.68,137.36c23.85-34.54,47.18-64.56,87.94-98.7l46.13,97.23c24.07-34.75,49.5-65.6,76.64-91.55l56.77,83.03c26.64-35.1,53.38-67.81,80.19-98.64,24.09,33.19,49.03,65.66,74.72,90.12,21.67-33.16,46.07-65.11,73.6-90.12,10.34,26.83,25.62,54.02,46.13,81.61,22.86-38.93,44.51-61.96,67.5-85.98,18.94,30.02,39.65,58.29,62.37,84.56l82.73-72.53,41.46,89.96" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'diagonal':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 653.92 247.29')}
      >
        <path d="m39.44,32.02s326.37,33.81,578.63,185.94" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'strikethrough':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 831.55 78.74', 'height: auto;')}
      >
        <path d="m40.91,56.69c240.79-42.56,480.28-41.72,751.03.02" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
      </svg>
    `;
            break;
        case 'cross':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 726.21 260.33')}
      >
        <path d="m56.65,23.95c213.13,31.27,413.7,95.13,600.64,209.5" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)}/>
        <path d="m683.34,27.64C445.19,65.71,233.12,122.88,52.27,233.45" ${getPathAttrs(0, '0 2000', '2000 0', settings.shapeSize.value + 15)} style="animation-delay: 350ms" />
      </svg>
    `;
            break;
        case 'buble':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 716.88 422.41', 'width: calc(100% + 50px);height: calc(100% + 50px);')}
      >
        <path d="m440.35,84.4s-19.56-62.33-76.05-62.33c-53.21,0-77.84,33.11-92.45,62.33-31.17-14.61-50.64-23.37-87.65-19.48-37.01,3.9-63.03,21.72-65.25,51.62-2.22,29.9,29.22,52.59,29.22,52.59,0,0-125.08,44.12-116.4,123.69,8.21,75.16,134.99,28.75,134.99,28.75,0,0-12.45,74.71,62.83,77.54,77.86,2.93,138.21-55.13,138.21-55.13,0,0,9.06,43.76,49.96,43.76s93.68-49.14,107.32-79.33c42.98,30.71,126.32,42.08,153.83-8.91,28.39-52.64-27.22-97.25-99.29-99.2,0,0,45.61-57.58,32.59-93.24-18.77-51.4-128.48-54.34-198.16.72" ${getPathAttrs(0, '0 2000', '2000 0', settings.shapeSize.value + 15)} />
      </svg>
    `;
            break;
        case 'dash_line':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 851.63 75.77', 'top: 100%;height: auto;')}
      >
        <path d="m30.6,52.9c71.26-5.47,121.34-10.52,202.6-14.16" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} />
        <line x1="312.36" y1="38.92" x2="415.69" y2="36.4" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} style="animation-delay: 150ms" />
        <path d="m487.52,32.91c112.7-7.58,207.36-8.02,334.09-4.49" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} style="animation-delay: 300ms" />
      </svg>
    `;
            break;
        case 'rectangle':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 756.42 342.56')}
      >
        <path d="m727.36,47.22S315.32-1.49,69.89,60.86c0,0-59.86,80.86-32.92,255.26,0,0,436.98-72.1,671.44-6.82l-1-187.06" ${getPathAttrs(0, '0 2000', '2000 0', settings.shapeSize.value + 15)} />
      </svg>
    `;
            break;
        case 'arrow':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 777.83 236.13', 'transform: translate(-100%, -100%);')}
      >
        <path d="m30.63,182.02c222.37-122.44,458.89-124.07,711.04-12.72" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} />
        <polyline points="623.06 26.3 749.62 173.88 555.61 208.52" ${getPathAttrs(0, '0 1500', '1500 1500', settings.shapeSize.value + 15)} style="animation-delay: 400ms" />
      </svg>
    `;
            break;
        case 'triple':
            svg = `
      <svg 
        ${getSvgAttrs('0 0 817.62 213.74', 'top: 100%;height: auto;')}
      >
        <path d="m109.02,42.36s469.88-11.15,632,0c0,0-709.26,92.55-711.24,100.84,0,0,605.14,9.52,756.92,28.53" ${getPathAttrs(0, '0 3000', '3000 0', settings.shapeSize.value + 15)} />
      </svg>
    `;
            break;
    }
    const content = `
    ${settings.beforeText}
    <div
      class="xb-animate-heading--style-highlight"
    >
      <span class="xb-animate-heading__dynamic-wrapper">
        <span class="xb-animate-heading__dynamic-text"
          style="color: ${settings.animatedColor}"
        >
          ${settings.highlightedText}
        </span>
        <div
          xo-observed="${settings.animationStyle}"
          xo-animate="${settings.headingAnimationLoop}"
          xo-duration="${settings.headingAnimateDuration.value}"
        >
          ${svg}
        </div>
      </span>
    </div>
    ${settings.afterText}
  `;
    return createElement(tagName, {
        ...elementAttr(element, {
            classNames: ['xb-animate-heading', titleClass, settings.static?.class],
        }),
        children: createElement(linkTag, {
            ...actionAttr(settings.actionWrapper),
            className: classLink,
            dangerouslySetInnerHTML: { __html: content },
        }),
    });
};
