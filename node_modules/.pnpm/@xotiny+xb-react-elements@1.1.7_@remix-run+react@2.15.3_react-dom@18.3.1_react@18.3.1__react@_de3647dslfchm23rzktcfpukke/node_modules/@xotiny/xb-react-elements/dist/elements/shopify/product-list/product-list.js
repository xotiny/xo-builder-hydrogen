import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { hash } from "../../../utils/hash";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import './styles';
import { productListUtils } from './product-list-utils';
export const ProductList = ({ element, children }) => {
    const { settings } = element;
    const { colDesktop, colTablet, colMobile, layoutClass, autoplayAttr, spacingDesktop, spacingTablet, spacingMobile } = productListUtils({ element });
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-product-list', layoutClass],
        }), children: element.settings.$layoutType === 'grid' ? (_jsx(_Fragment, { children: children })) : (_jsx("xo-carousel", { "xo-name": element.id, "xo-observed": hash(JSON.stringify(element.settings)), "xo-per-view": colDesktop, "xo-overflow": "overflow", "xo-gap": spacingDesktop, "xo-per-move": settings.itemsPerMove.value, "xo-rewind": settings.infiniteLoopEnabled === 'yes', ...autoplayAttr, "xo-breakpoints": `{
              768: {
                perView: ${colMobile},
                gap: ${spacingMobile},
              },
              992: {
                perView: ${colTablet},
                gap: ${spacingTablet},
              },
            }
          `, "xo-render-bullet": "<div class='pagination__inner'> <span class='pagination__inner-content'></span> </div>", style: {
                '--xo-per-view': `${colDesktop}`,
                '--xo-gap': `${spacingDesktop}px`,
            }, children: children })) }));
};
