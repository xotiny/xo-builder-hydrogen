import { createElement } from 'react';
import { actionAttr } from "../../../utils/template-helpers/action-attr";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import './styles';
export const Heading = ({ element }) => {
    const { settings } = element;
    let content = `${settings.title}`;
    if (settings.tooltipEnabled) {
        content = `
      <xo-tooltip xo-title="${settings.tooltipContent}" xo-placement="${settings.tooltipPosition}" class="xb-heading__tooltip">
        ${settings.title}
      </xo-tooltip>
    `;
    }
    const actionEnabled = settings.actionWrapper?.actionType !== 'no';
    const tagName = settings.htmlTag;
    const titleClass = `xb-heading xb-${settings.htmlTag}`;
    const classLink = actionEnabled ? 'xb-link xb-heading__text' : 'xb-heading__text';
    const linkTag = actionEnabled ? 'a' : 'div';
    return createElement(tagName, {
        ...elementAttr(element, {
            classNames: [titleClass, settings.static?.class],
        }),
        children: createElement(linkTag, {
            ...actionAttr(settings.actionWrapper),
            className: classLink,
            dangerouslySetInnerHTML: { __html: content },
        }),
    });
};
