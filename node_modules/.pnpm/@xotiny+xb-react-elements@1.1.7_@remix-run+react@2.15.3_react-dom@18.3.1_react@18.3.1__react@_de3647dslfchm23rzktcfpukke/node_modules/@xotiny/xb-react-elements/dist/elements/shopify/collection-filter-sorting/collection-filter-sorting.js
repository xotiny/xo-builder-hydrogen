import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Link, useLocation, useSearchParams } from '@remix-run/react';
import { classNames } from "../../../utils/class-names";
import { useElementSettings } from "../../../hooks/use-shopify-data";
import { elementAttr } from "../../../utils/template-helpers/element-attr";
import './styles';
export const CollectionFilterSorting = ({ element }) => {
    const { settings } = element;
    const parentSettings = useElementSettings();
    const items = [
        { label: 'Featured', key: 'featured' },
        {
            label: 'Best Selling',
            key: 'best-selling',
        },
        {
            label: 'Alphabetically, A-Z',
            key: 'title-ascending',
        },
        {
            label: 'Alphabetically, Z-A',
            key: 'title-descending',
        },
        {
            label: 'Price, low to high',
            key: 'price-low-high',
        },
        {
            label: 'Price, high to low',
            key: 'price-high-low',
        },
        {
            label: 'Date, old to new',
            key: 'oldest',
        },
        {
            label: 'Date, new to old',
            key: 'newest',
        },
    ];
    const [params] = useSearchParams();
    const location = useLocation();
    const activeItem = items.find(item => item.key === params.get('sort')) ?? items[0];
    if (parentSettings.$sortEnabled !== 'yes') {
        return;
    }
    const getSortLink = (sort, params, location) => {
        const paramsClone = new URLSearchParams(params);
        paramsClone.set('sort', sort);
        return `${location.pathname}?${paramsClone.toString()}`;
    };
    return (_jsx("div", { ...elementAttr(element, {
            classNames: ['xb-collection-filter-sorting', settings?.modifier?.handle, settings.static?.class],
        }), children: _jsxs("div", { className: "xb-field-select-custom", children: [_jsxs("xo-popover-trigger", { class: "xb-field-select-custom__trigger", tabIndex: 0, role: "button", "xo-name": "xb-collection-filter-sorting", children: [_jsx("div", { className: "xb-field-select-custom__name", children: activeItem?.label }), _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", width: "15", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round", children: _jsx("polyline", { points: "6 9 12 15 18 9" }) })] }), _jsx("xo-popover", { "xo-placement": "bottom-right", "xo-portal": true, "xo-name": "xb-collection-filter-sorting", children: _jsx("div", { className: "xb-field-select-custom__popover xb-scrollbar", children: items.map(item => {
                            const isActive = activeItem?.key === item.key;
                            return (_jsxs(Link, { className: classNames('xb-field-select-custom__check', isActive ? 'xb-field-select-custom__check--active' : ''), to: getSortLink(item.key, params, location), children: [_jsx("span", { className: "xb-field-select-custom__icon", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", width: "20", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round", children: _jsx("polyline", { points: "20 6 9 17 4 12" }) }) }), _jsx("span", { className: "xb-field-select-custom__label", children: item.label })] }, item.label));
                        }) }) })] }) }));
};
