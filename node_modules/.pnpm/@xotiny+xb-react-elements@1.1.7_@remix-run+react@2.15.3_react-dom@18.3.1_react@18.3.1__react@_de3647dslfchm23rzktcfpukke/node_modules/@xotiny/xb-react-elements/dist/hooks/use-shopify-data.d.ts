import { ProductFilter } from '@shopify/hydrogen/storefront-api-types';
import { ProductContextValue } from "../context/shopify-product-provider";
import { UniqueId } from "../types/shared-kernel";
import { ArticleType, BlogQuery, CollectionFilterData, CollectionItem, MediaType, ProductFragment, ProductListType, ProductOptionType, ProductOptionValue, RecommendedProductsQuery, ShopQuery } from "../types/shopify.storefront";
import { XbBuilderShopifyData } from '../context/xb-builder.context';
export declare function useAppState(): import("../context/xb-builder.context").XbBuilderContextValue;
export declare const ProductProvider: ({ data, isProductPage, children }: import("../context/shopify-product-provider").ItemProviderProps) => import("react/jsx-runtime").JSX.Element;
export declare const CollectionProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const ArticleProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const BlogProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const ProductMediaProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const ProductOptionProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const ProductOptionValueProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare const ElementSettingsProvider: <T>({ data, children }: import("../context/shopify-item-provider").ItemProviderProps<T>) => import("react/jsx-runtime").JSX.Element;
export declare function useCollection(elementId?: UniqueId): CollectionItem;
export declare function useProduct(elementId?: UniqueId): ProductContextValue;
export declare function useCollectionList(elementId?: UniqueId): any;
export declare function useArticle(elementId?: UniqueId): ArticleType['articleByHandle'];
export declare function useBlog(elementId?: UniqueId): BlogQuery['blog'];
export declare function useProductRecommendation(elementId: UniqueId): any;
export declare function useProductList(type: ProductListType, elementId: UniqueId): RecommendedProductsQuery['productRecommendations'];
export declare function useProductMedia(): MediaType;
export declare function useShop(): ShopQuery['shop'];
export declare function useProductOption(): ProductOptionType;
export declare function useProductOptionValue(): ProductOptionValue;
export declare function useProductDetail(): ProductFragment;
interface AppliedFilter {
    filter: ProductFilter;
    label: string;
}
type CollectionDetailType = CollectionFilterData & {
    appliedFilters: AppliedFilter[];
};
export declare function useCollectionDetail(): CollectionDetailType;
export declare function useElementSettings(): {} | null;
export declare function usePageDetail(): {
    [elementId: string]: XbBuilderShopifyData;
} | undefined;
export declare function useSeo(): unknown;
export {};
